{"ast":null,"code":"import { FileLoader, Group, Loader, LoadingManager } from 'three';\nimport { ColladaLoader } from '../loaders/ColladaLoader.js';\nimport * as fflate from '../libs/fflate.module.js';\n\n/**\n * A loader for the KMZ format.\n *\n * ```js\n * const loader = new KMZLoader();\n * const kmz = await loader.loadAsync( './models/kmz/Box.kmz' );\n *\n * scene.add( kmz.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { KMZLoader } from 'three/addons/loaders/KMZLoader.js';\n */\nclass KMZLoader extends Loader {\n  /**\n   * Constructs a new KMZ loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n  }\n\n  /**\n   * Starts loading from the given URL and passes the loaded KMZ asset\n   * to the `onLoad()` callback.\n   *\n   * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n   * @param {function({scene:Group})} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  /**\n   * Parses the given KMZ data and returns an object holding the scene.\n   *\n   * @param {ArrayBuffer} data - The raw KMZ data as an array buffer.\n   * @return {{scene:Group}} The parsed KMZ asset.\n   */\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.slice(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n    const manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      const image = findFile(url);\n      if (image) {\n        console.log('Loading', url);\n        const blob = new Blob([image.buffer], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n      return url;\n    });\n\n    //\n\n    const zip = fflate.unzipSync(new Uint8Array(data));\n    if (zip['doc.kml']) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip['doc.kml']), 'application/xml');\n      const model = xml.querySelector('Placemark Model Link href');\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent]));\n      }\n    } else {\n      console.warn('KMZLoader: Missing doc.kml file.');\n      for (const path in zip) {\n        const extension = path.split('.').pop().toLowerCase();\n        if (extension === 'dae') {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path]));\n        }\n      }\n    }\n    console.error('KMZLoader: Couldn\\'t find .dae file.');\n    return {\n      scene: new Group()\n    };\n  }\n}\nexport { KMZLoader };","map":{"version":3,"names":["FileLoader","Group","Loader","LoadingManager","ColladaLoader","fflate","KMZLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","slice","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","unzipSync","Uint8Array","xml","DOMParser","parseFromString","strFromU8","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","scene"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/loaders/KMZLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tGroup,\n\tLoader,\n\tLoadingManager\n} from 'three';\nimport { ColladaLoader } from '../loaders/ColladaLoader.js';\nimport * as fflate from '../libs/fflate.module.js';\n\n/**\n * A loader for the KMZ format.\n *\n * ```js\n * const loader = new KMZLoader();\n * const kmz = await loader.loadAsync( './models/kmz/Box.kmz' );\n *\n * scene.add( kmz.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { KMZLoader } from 'three/addons/loaders/KMZLoader.js';\n */\nclass KMZLoader extends Loader {\n\n\t/**\n\t * Constructs a new KMZ loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded KMZ asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function({scene:Group})} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given KMZ data and returns an object holding the scene.\n\t *\n\t * @param {ArrayBuffer} data - The raw KMZ data as an array buffer.\n\t * @return {{scene:Group}} The parsed KMZ asset.\n\t */\n\tparse( data ) {\n\n\t\tfunction findFile( url ) {\n\n\t\t\tfor ( const path in zip ) {\n\n\t\t\t\tif ( path.slice( - url.length ) === url ) {\n\n\t\t\t\t\treturn zip[ path ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst manager = new LoadingManager();\n\t\tmanager.setURLModifier( function ( url ) {\n\n\t\t\tconst image = findFile( url );\n\n\t\t\tif ( image ) {\n\n\t\t\t\tconsole.log( 'Loading', url );\n\n\t\t\t\tconst blob = new Blob( [ image.buffer ], { type: 'application/octet-stream' } );\n\t\t\t\treturn URL.createObjectURL( blob );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t} );\n\n\t\t//\n\n\t\tconst zip = fflate.unzipSync( new Uint8Array( data ) );\n\n\t\tif ( zip[ 'doc.kml' ] ) {\n\n\t\t\tconst xml = new DOMParser().parseFromString( fflate.strFromU8( zip[ 'doc.kml' ] ), 'application/xml' );\n\n\t\t\tconst model = xml.querySelector( 'Placemark Model Link href' );\n\n\t\t\tif ( model ) {\n\n\t\t\t\tconst loader = new ColladaLoader( manager );\n\t\t\t\treturn loader.parse( fflate.strFromU8( zip[ model.textContent ] ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'KMZLoader: Missing doc.kml file.' );\n\n\t\t\tfor ( const path in zip ) {\n\n\t\t\t\tconst extension = path.split( '.' ).pop().toLowerCase();\n\n\t\t\t\tif ( extension === 'dae' ) {\n\n\t\t\t\t\tconst loader = new ColladaLoader( manager );\n\t\t\t\t\treturn loader.parse( fflate.strFromU8( zip[ path ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'KMZLoader: Couldn\\'t find .dae file.' );\n\t\treturn { scene: new Group() };\n\n\t}\n\n}\n\nexport { KMZLoader };\n"],"mappings":"AAAA,SACCA,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,cAAc,QACR,OAAO;AACd,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,OAAO,KAAKC,MAAM,MAAM,0BAA0B;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASJ,MAAM,CAAC;EAE9B;AACD;AACA;AACA;AACA;EACCK,WAAWA,CAAEC,OAAO,EAAG;IAEtB,KAAK,CAAEA,OAAQ,CAAC;EAEjB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,IAAIA,CAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;IAExC,MAAMC,KAAK,GAAG,IAAI;IAElB,MAAMC,MAAM,GAAG,IAAIf,UAAU,CAAEc,KAAK,CAACN,OAAQ,CAAC;IAC9CO,MAAM,CAACC,OAAO,CAAEF,KAAK,CAACG,IAAK,CAAC;IAC5BF,MAAM,CAACG,eAAe,CAAE,aAAc,CAAC;IACvCH,MAAM,CAACI,gBAAgB,CAAEL,KAAK,CAACM,aAAc,CAAC;IAC9CL,MAAM,CAACM,kBAAkB,CAAEP,KAAK,CAACQ,eAAgB,CAAC;IAClDP,MAAM,CAACN,IAAI,CAAEC,GAAG,EAAE,UAAWa,IAAI,EAAG;MAEnC,IAAI;QAEHZ,MAAM,CAAEG,KAAK,CAACU,KAAK,CAAED,IAAK,CAAE,CAAC;MAE9B,CAAC,CAAC,OAAQE,CAAC,EAAG;QAEb,IAAKZ,OAAO,EAAG;UAEdA,OAAO,CAAEY,CAAE,CAAC;QAEb,CAAC,MAAM;UAENC,OAAO,CAACC,KAAK,CAAEF,CAAE,CAAC;QAEnB;QAEAX,KAAK,CAACN,OAAO,CAACoB,SAAS,CAAElB,GAAI,CAAC;MAE/B;IAED,CAAC,EAAEE,UAAU,EAAEC,OAAQ,CAAC;EAEzB;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCW,KAAKA,CAAEK,IAAI,EAAG;IAEb,SAASC,QAAQA,CAAEpB,GAAG,EAAG;MAExB,KAAM,MAAMO,IAAI,IAAIc,GAAG,EAAG;QAEzB,IAAKd,IAAI,CAACe,KAAK,CAAE,CAAEtB,GAAG,CAACuB,MAAO,CAAC,KAAKvB,GAAG,EAAG;UAEzC,OAAOqB,GAAG,CAAEd,IAAI,CAAE;QAEnB;MAED;IAED;IAEA,MAAMT,OAAO,GAAG,IAAIL,cAAc,CAAC,CAAC;IACpCK,OAAO,CAAC0B,cAAc,CAAE,UAAWxB,GAAG,EAAG;MAExC,MAAMyB,KAAK,GAAGL,QAAQ,CAAEpB,GAAI,CAAC;MAE7B,IAAKyB,KAAK,EAAG;QAEZT,OAAO,CAACU,GAAG,CAAE,SAAS,EAAE1B,GAAI,CAAC;QAE7B,MAAM2B,IAAI,GAAG,IAAIC,IAAI,CAAE,CAAEH,KAAK,CAACI,MAAM,CAAE,EAAE;UAAEC,IAAI,EAAE;QAA2B,CAAE,CAAC;QAC/E,OAAOC,GAAG,CAACC,eAAe,CAAEL,IAAK,CAAC;MAEnC;MAEA,OAAO3B,GAAG;IAEX,CAAE,CAAC;;IAEH;;IAEA,MAAMqB,GAAG,GAAG1B,MAAM,CAACsC,SAAS,CAAE,IAAIC,UAAU,CAAEf,IAAK,CAAE,CAAC;IAEtD,IAAKE,GAAG,CAAE,SAAS,CAAE,EAAG;MAEvB,MAAMc,GAAG,GAAG,IAAIC,SAAS,CAAC,CAAC,CAACC,eAAe,CAAE1C,MAAM,CAAC2C,SAAS,CAAEjB,GAAG,CAAE,SAAS,CAAG,CAAC,EAAE,iBAAkB,CAAC;MAEtG,MAAMkB,KAAK,GAAGJ,GAAG,CAACK,aAAa,CAAE,2BAA4B,CAAC;MAE9D,IAAKD,KAAK,EAAG;QAEZ,MAAMlC,MAAM,GAAG,IAAIX,aAAa,CAAEI,OAAQ,CAAC;QAC3C,OAAOO,MAAM,CAACS,KAAK,CAAEnB,MAAM,CAAC2C,SAAS,CAAEjB,GAAG,CAAEkB,KAAK,CAACE,WAAW,CAAG,CAAE,CAAC;MAEpE;IAED,CAAC,MAAM;MAENzB,OAAO,CAAC0B,IAAI,CAAE,kCAAmC,CAAC;MAElD,KAAM,MAAMnC,IAAI,IAAIc,GAAG,EAAG;QAEzB,MAAMsB,SAAS,GAAGpC,IAAI,CAACqC,KAAK,CAAE,GAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAEvD,IAAKH,SAAS,KAAK,KAAK,EAAG;UAE1B,MAAMtC,MAAM,GAAG,IAAIX,aAAa,CAAEI,OAAQ,CAAC;UAC3C,OAAOO,MAAM,CAACS,KAAK,CAAEnB,MAAM,CAAC2C,SAAS,CAAEjB,GAAG,CAAEd,IAAI,CAAG,CAAE,CAAC;QAEvD;MAED;IAED;IAEAS,OAAO,CAACC,KAAK,CAAE,sCAAuC,CAAC;IACvD,OAAO;MAAE8B,KAAK,EAAE,IAAIxD,KAAK,CAAC;IAAE,CAAC;EAE9B;AAED;AAEA,SAASK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}