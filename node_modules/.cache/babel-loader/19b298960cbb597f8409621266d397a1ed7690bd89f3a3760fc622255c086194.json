{"ast":null,"code":"import { DoubleSide, CanvasTexture, Mesh, MeshBasicMaterial, OrthographicCamera, PlaneGeometry, Scene, ShaderMaterial, UniformsUtils } from 'three';\nimport { UnpackDepthRGBAShader } from '../shaders/UnpackDepthRGBAShader.js';\n\n/**\n * This is a helper for visualising a given light's shadow map.\n * It works for shadow casting lights: DirectionalLight and SpotLight.\n * It renders out the shadow map and displays it on a HUD.\n *\n * This module can only be used with {@link WebGLRenderer}. When using {@link WebGPURenderer},\n * import the class from `ShadowMapViewerGPU.js`.\n *\n * ```js\n * const lightShadowMapViewer = new ShadowMapViewer( light );\n * lightShadowMapViewer.position.x = 10;\n * lightShadowMapViewer.position.y = SCREEN_HEIGHT - ( SHADOW_MAP_HEIGHT / 4 ) - 10;\n * lightShadowMapViewer.size.width = SHADOW_MAP_WIDTH / 4;\n * lightShadowMapViewer.size.height = SHADOW_MAP_HEIGHT / 4;\n * lightShadowMapViewer.update();\n * ```\n *\n * @three_import import { ShadowMapViewer } from 'three/addons/utils/ShadowMapViewer.js';\n */\nclass ShadowMapViewer {\n  /**\n   * Constructs a new shadow map viewer.\n   *\n   * @param {Light} light - The shadow casting light.\n   */\n  constructor(light) {\n    //- Internals\n    const scope = this;\n    const doRenderLabel = light.name !== undefined && light.name !== '';\n    let userAutoClearSetting;\n\n    //Holds the initial position and dimension of the HUD\n    const frame = {\n      x: 10,\n      y: 10,\n      width: 256,\n      height: 256\n    };\n    const camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 10);\n    camera.position.set(0, 0, 2);\n    const scene = new Scene();\n\n    //HUD for shadow map\n    const shader = UnpackDepthRGBAShader;\n    const uniforms = UniformsUtils.clone(shader.uniforms);\n    const material = new ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    const plane = new PlaneGeometry(frame.width, frame.height);\n    const mesh = new Mesh(plane, material);\n    scene.add(mesh);\n\n    //Label for light's name\n    let labelCanvas, labelMesh;\n    if (doRenderLabel) {\n      labelCanvas = document.createElement('canvas');\n      const context = labelCanvas.getContext('2d');\n      context.font = 'Bold 20px Arial';\n      const labelWidth = context.measureText(light.name).width;\n      labelCanvas.width = labelWidth;\n      labelCanvas.height = 25; //25 to account for g, p, etc.\n\n      context.font = 'Bold 20px Arial';\n      context.fillStyle = 'rgba( 255, 0, 0, 1 )';\n      context.fillText(light.name, 0, 20);\n      const labelTexture = new CanvasTexture(labelCanvas);\n      const labelMaterial = new MeshBasicMaterial({\n        map: labelTexture,\n        side: DoubleSide,\n        transparent: true\n      });\n      const labelPlane = new PlaneGeometry(labelCanvas.width, labelCanvas.height);\n      labelMesh = new Mesh(labelPlane, labelMaterial);\n      scene.add(labelMesh);\n    }\n    function resetPosition() {\n      scope.position.set(scope.position.x, scope.position.y);\n    }\n\n    /**\n     * Whether to display the shadow map viewer or not.\n     *\n     * @type {boolean}\n     * @default true\n     */\n    this.enabled = true;\n\n    /**\n     * The size of the viewer. When changing this property, make sure\n     * to call {@link ShadowMapViewer#update}.\n     *\n     * @type {{width:number,height:number}}\n     * @default true\n     */\n    this.size = {\n      width: frame.width,\n      height: frame.height,\n      set: function (width, height) {\n        this.width = width;\n        this.height = height;\n        mesh.scale.set(this.width / frame.width, this.height / frame.height, 1);\n\n        //Reset the position as it is off when we scale stuff\n        resetPosition();\n      }\n    };\n\n    /**\n     * The position of the viewer. When changing this property, make sure\n     * to call {@link ShadowMapViewer#update}.\n     *\n     * @type {{x:number,y:number, set:function(number,number)}}\n     * @default true\n     */\n    this.position = {\n      x: frame.x,\n      y: frame.y,\n      set: function (x, y) {\n        this.x = x;\n        this.y = y;\n        const width = scope.size.width;\n        const height = scope.size.height;\n        mesh.position.set(-window.innerWidth / 2 + width / 2 + this.x, window.innerHeight / 2 - height / 2 - this.y, 0);\n        if (doRenderLabel) labelMesh.position.set(mesh.position.x, mesh.position.y - scope.size.height / 2 + labelCanvas.height / 2, 0);\n      }\n    };\n\n    /**\n     * Renders the viewer. This method must be called in the app's animation loop.\n     *\n     * @param {WebGLRenderer} renderer - The renderer.\n     */\n    this.render = function (renderer) {\n      if (this.enabled) {\n        //Because a light's .shadowMap is only initialised after the first render pass\n        //we have to make sure the correct map is sent into the shader, otherwise we\n        //always end up with the scene's first added shadow casting light's shadowMap\n        //in the shader\n        //See: https://github.com/mrdoob/three.js/issues/5932\n        uniforms.tDiffuse.value = light.shadow.map.texture;\n        userAutoClearSetting = renderer.autoClear;\n        renderer.autoClear = false; // To allow render overlay\n        renderer.clearDepth();\n        renderer.render(scene, camera);\n        renderer.autoClear = userAutoClearSetting; //Restore user's setting\n      }\n    };\n\n    /**\n     * Resizes the viewer. This method should be called whenever the app's\n     * window is resized.\n     */\n    this.updateForWindowResize = function () {\n      if (this.enabled) {\n        camera.left = window.innerWidth / -2;\n        camera.right = window.innerWidth / 2;\n        camera.top = window.innerHeight / 2;\n        camera.bottom = window.innerHeight / -2;\n        camera.updateProjectionMatrix();\n        this.update();\n      }\n    };\n\n    /**\n     * Updates the viewer.\n     */\n    this.update = function () {\n      this.position.set(this.position.x, this.position.y);\n      this.size.set(this.size.width, this.size.height);\n    };\n\n    //Force an update to set position/size\n    this.update();\n  }\n}\nexport { ShadowMapViewer };","map":{"version":3,"names":["DoubleSide","CanvasTexture","Mesh","MeshBasicMaterial","OrthographicCamera","PlaneGeometry","Scene","ShaderMaterial","UniformsUtils","UnpackDepthRGBAShader","ShadowMapViewer","constructor","light","scope","doRenderLabel","name","undefined","userAutoClearSetting","frame","x","y","width","height","camera","window","innerWidth","innerHeight","position","set","scene","shader","uniforms","clone","material","vertexShader","fragmentShader","plane","mesh","add","labelCanvas","labelMesh","document","createElement","context","getContext","font","labelWidth","measureText","fillStyle","fillText","labelTexture","labelMaterial","map","side","transparent","labelPlane","resetPosition","enabled","size","scale","render","renderer","tDiffuse","value","shadow","texture","autoClear","clearDepth","updateForWindowResize","left","right","top","bottom","updateProjectionMatrix","update"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/utils/ShadowMapViewer.js"],"sourcesContent":["import {\n\tDoubleSide,\n\tCanvasTexture,\n\tMesh,\n\tMeshBasicMaterial,\n\tOrthographicCamera,\n\tPlaneGeometry,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { UnpackDepthRGBAShader } from '../shaders/UnpackDepthRGBAShader.js';\n\n/**\n * This is a helper for visualising a given light's shadow map.\n * It works for shadow casting lights: DirectionalLight and SpotLight.\n * It renders out the shadow map and displays it on a HUD.\n *\n * This module can only be used with {@link WebGLRenderer}. When using {@link WebGPURenderer},\n * import the class from `ShadowMapViewerGPU.js`.\n *\n * ```js\n * const lightShadowMapViewer = new ShadowMapViewer( light );\n * lightShadowMapViewer.position.x = 10;\n * lightShadowMapViewer.position.y = SCREEN_HEIGHT - ( SHADOW_MAP_HEIGHT / 4 ) - 10;\n * lightShadowMapViewer.size.width = SHADOW_MAP_WIDTH / 4;\n * lightShadowMapViewer.size.height = SHADOW_MAP_HEIGHT / 4;\n * lightShadowMapViewer.update();\n * ```\n *\n * @three_import import { ShadowMapViewer } from 'three/addons/utils/ShadowMapViewer.js';\n */\nclass ShadowMapViewer {\n\n\t/**\n\t * Constructs a new shadow map viewer.\n\t *\n\t * @param {Light} light - The shadow casting light.\n\t */\n\tconstructor( light ) {\n\n\t\t//- Internals\n\t\tconst scope = this;\n\t\tconst doRenderLabel = ( light.name !== undefined && light.name !== '' );\n\t\tlet userAutoClearSetting;\n\n\t\t//Holds the initial position and dimension of the HUD\n\t\tconst frame = {\n\t\t\tx: 10,\n\t\t\ty: 10,\n\t\t\twidth: 256,\n\t\t\theight: 256\n\t\t};\n\n\t\tconst camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, 1, 10 );\n\t\tcamera.position.set( 0, 0, 2 );\n\t\tconst scene = new Scene();\n\n\t\t//HUD for shadow map\n\t\tconst shader = UnpackDepthRGBAShader;\n\n\t\tconst uniforms = UniformsUtils.clone( shader.uniforms );\n\t\tconst material = new ShaderMaterial( {\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\t} );\n\t\tconst plane = new PlaneGeometry( frame.width, frame.height );\n\t\tconst mesh = new Mesh( plane, material );\n\n\t\tscene.add( mesh );\n\n\n\t\t//Label for light's name\n\t\tlet labelCanvas, labelMesh;\n\n\t\tif ( doRenderLabel ) {\n\n\t\t\tlabelCanvas = document.createElement( 'canvas' );\n\n\t\t\tconst context = labelCanvas.getContext( '2d' );\n\t\t\tcontext.font = 'Bold 20px Arial';\n\n\t\t\tconst labelWidth = context.measureText( light.name ).width;\n\t\t\tlabelCanvas.width = labelWidth;\n\t\t\tlabelCanvas.height = 25;\t//25 to account for g, p, etc.\n\n\t\t\tcontext.font = 'Bold 20px Arial';\n\t\t\tcontext.fillStyle = 'rgba( 255, 0, 0, 1 )';\n\t\t\tcontext.fillText( light.name, 0, 20 );\n\n\t\t\tconst labelTexture = new CanvasTexture( labelCanvas );\n\n\t\t\tconst labelMaterial = new MeshBasicMaterial( { map: labelTexture, side: DoubleSide, transparent: true } );\n\n\t\t\tconst labelPlane = new PlaneGeometry( labelCanvas.width, labelCanvas.height );\n\t\t\tlabelMesh = new Mesh( labelPlane, labelMaterial );\n\n\t\t\tscene.add( labelMesh );\n\n\t\t}\n\n\n\t\tfunction resetPosition() {\n\n\t\t\tscope.position.set( scope.position.x, scope.position.y );\n\n\t\t}\n\n\t\t/**\n\t\t * Whether to display the shadow map viewer or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enabled = true;\n\n\t\t/**\n\t\t * The size of the viewer. When changing this property, make sure\n\t\t * to call {@link ShadowMapViewer#update}.\n\t\t *\n\t\t * @type {{width:number,height:number}}\n\t\t * @default true\n\t\t */\n\t\tthis.size = {\n\t\t\twidth: frame.width,\n\t\t\theight: frame.height,\n\t\t\tset: function ( width, height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tmesh.scale.set( this.width / frame.width, this.height / frame.height, 1 );\n\n\t\t\t\t//Reset the position as it is off when we scale stuff\n\t\t\t\tresetPosition();\n\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The position of the viewer. When changing this property, make sure\n\t\t * to call {@link ShadowMapViewer#update}.\n\t\t *\n\t\t * @type {{x:number,y:number, set:function(number,number)}}\n\t\t * @default true\n\t\t */\n\t\tthis.position = {\n\t\t\tx: frame.x,\n\t\t\ty: frame.y,\n\t\t\tset: function ( x, y ) {\n\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\n\t\t\t\tconst width = scope.size.width;\n\t\t\t\tconst height = scope.size.height;\n\n\t\t\t\tmesh.position.set( - window.innerWidth / 2 + width / 2 + this.x, window.innerHeight / 2 - height / 2 - this.y, 0 );\n\n\t\t\t\tif ( doRenderLabel ) labelMesh.position.set( mesh.position.x, mesh.position.y - scope.size.height / 2 + labelCanvas.height / 2, 0 );\n\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Renders the viewer. This method must be called in the app's animation loop.\n\t\t *\n\t\t * @param {WebGLRenderer} renderer - The renderer.\n\t\t */\n\t\tthis.render = function ( renderer ) {\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\t//Because a light's .shadowMap is only initialised after the first render pass\n\t\t\t\t//we have to make sure the correct map is sent into the shader, otherwise we\n\t\t\t\t//always end up with the scene's first added shadow casting light's shadowMap\n\t\t\t\t//in the shader\n\t\t\t\t//See: https://github.com/mrdoob/three.js/issues/5932\n\t\t\t\tuniforms.tDiffuse.value = light.shadow.map.texture;\n\n\t\t\t\tuserAutoClearSetting = renderer.autoClear;\n\t\t\t\trenderer.autoClear = false; // To allow render overlay\n\t\t\t\trenderer.clearDepth();\n\t\t\t\trenderer.render( scene, camera );\n\t\t\t\trenderer.autoClear = userAutoClearSetting;\t//Restore user's setting\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Resizes the viewer. This method should be called whenever the app's\n\t\t * window is resized.\n\t\t */\n\t\tthis.updateForWindowResize = function () {\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\t camera.left = window.innerWidth / - 2;\n\t\t\t\t camera.right = window.innerWidth / 2;\n\t\t\t\t camera.top = window.innerHeight / 2;\n\t\t\t\t camera.bottom = window.innerHeight / - 2;\n\t\t\t\t camera.updateProjectionMatrix();\n\n\t\t\t\t this.update();\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Updates the viewer.\n\t\t */\n\t\tthis.update = function () {\n\n\t\t\tthis.position.set( this.position.x, this.position.y );\n\t\t\tthis.size.set( this.size.width, this.size.height );\n\n\t\t};\n\n\t\t//Force an update to set position/size\n\t\tthis.update();\n\n\t}\n\n}\n\n\nexport { ShadowMapViewer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}