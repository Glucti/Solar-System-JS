{"ast":null,"code":"import { MOUSE, TOUCH } from 'three';\nimport { OrbitControls } from './OrbitControls.js';\n\n/**\n * This class is intended for transforming a camera over a map from bird's eye perspective.\n * The class shares its implementation with {@link OrbitControls} but uses a specific preset\n * for mouse/touch interaction and disables screen space panning by default.\n *\n * - Orbit: Right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Left mouse, or arrow keys / touch: one-finger move.\n *\n * @augments OrbitControls\n * @three_import import { MapControls } from 'three/addons/controls/MapControls.js';\n */\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n\n    /**\n     * Overwritten and set to `false` to pan orthogonal to world-space direction `camera.up`.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    this.screenSpacePanning = false;\n\n    /**\n     * This object contains references to the mouse actions used by the controls.\n     *\n     * ```js\n     * controls.mouseButtons = {\n     * \tLEFT: THREE.MOUSE.PAN,\n     * \tMIDDLE: THREE.MOUSE.DOLLY,\n     * \tRIGHT: THREE.MOUSE.ROTATE\n     * }\n     * ```\n     * @type {Object}\n     */\n    this.mouseButtons = {\n      LEFT: MOUSE.PAN,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.ROTATE\n    };\n\n    /**\n     * This object contains references to the touch actions used by the controls.\n     *\n     * ```js\n     * controls.mouseButtons = {\n     * \tONE: THREE.TOUCH.PAN,\n     * \tTWO: THREE.TOUCH.DOLLY_ROTATE\n     * }\n     * ```\n     * @type {Object}\n     */\n    this.touches = {\n      ONE: TOUCH.PAN,\n      TWO: TOUCH.DOLLY_ROTATE\n    };\n  }\n}\nexport { MapControls };","map":{"version":3,"names":["MOUSE","TOUCH","OrbitControls","MapControls","constructor","object","domElement","screenSpacePanning","mouseButtons","LEFT","PAN","MIDDLE","DOLLY","RIGHT","ROTATE","touches","ONE","TWO","DOLLY_ROTATE"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/controls/MapControls.js"],"sourcesContent":["import { MOUSE, TOUCH } from 'three';\n\nimport { OrbitControls } from './OrbitControls.js';\n\n/**\n * This class is intended for transforming a camera over a map from bird's eye perspective.\n * The class shares its implementation with {@link OrbitControls} but uses a specific preset\n * for mouse/touch interaction and disables screen space panning by default.\n *\n * - Orbit: Right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Left mouse, or arrow keys / touch: one-finger move.\n *\n * @augments OrbitControls\n * @three_import import { MapControls } from 'three/addons/controls/MapControls.js';\n */\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\t/**\n\t\t * Overwritten and set to `false` to pan orthogonal to world-space direction `camera.up`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.screenSpacePanning = false;\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.PAN,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.PAN, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.ROTATE };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.PAN,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.PAN, TWO: TOUCH.DOLLY_ROTATE };\n\n\t}\n\n}\n\nexport { MapControls };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,KAAK,QAAQ,OAAO;AAEpC,SAASC,aAAa,QAAQ,oBAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASD,aAAa,CAAC;EAEvCE,WAAWA,CAAEC,MAAM,EAAEC,UAAU,EAAG;IAEjC,KAAK,CAAED,MAAM,EAAEC,UAAW,CAAC;;IAE3B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,kBAAkB,GAAG,KAAK;;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG;MAAEC,IAAI,EAAET,KAAK,CAACU,GAAG;MAAEC,MAAM,EAAEX,KAAK,CAACY,KAAK;MAAEC,KAAK,EAAEb,KAAK,CAACc;IAAO,CAAC;;IAEjF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,OAAO,GAAG;MAAEC,GAAG,EAAEf,KAAK,CAACS,GAAG;MAAEO,GAAG,EAAEhB,KAAK,CAACiB;IAAa,CAAC;EAE3D;AAED;AAEA,SAASf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}