{"ast":null,"code":"/**\n * A class that creates an ASCII effect.\n *\n * The ASCII generation is based on [jsascii]{@link https://github.com/hassadee/jsascii/blob/master/jsascii.js}.\n *\n * @three_import import { AsciiEffect } from 'three/addons/effects/AsciiEffect.js';\n */\nclass AsciiEffect {\n  /**\n   * Constructs a new ASCII effect.\n   *\n   * @param {WebGLRenderer} renderer - The renderer.\n   * @param {string} [charSet=' .:-=+*#%@'] - The char set.\n   * @param {AsciiEffect~Options} [options] - The configuration parameter.\n   */\n  constructor(renderer, charSet = ' .:-=+*#%@', options = {}) {\n    // ' .,:;=|iI+hHOE#`$';\n    // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n    // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n    // Some ASCII settings\n\n    const fResolution = options['resolution'] || 0.15;\n    const iScale = options['scale'] || 1;\n    const bColor = options['color'] || false;\n    const bAlpha = options['alpha'] || false;\n    const bBlock = options['block'] || false;\n    const bInvert = options['invert'] || false;\n    const strResolution = options['strResolution'] || 'low';\n    let width, height;\n    const domElement = document.createElement('div');\n    domElement.style.cursor = 'default';\n    const oAscii = document.createElement('table');\n    domElement.appendChild(oAscii);\n    let iWidth, iHeight;\n    let oImg;\n\n    /**\n     * Resizes the effect.\n     *\n     * @param {number} w - The width of the effect in logical pixels.\n     * @param {number} h - The height of the effect in logical pixels.\n     */\n    this.setSize = function (w, h) {\n      width = w;\n      height = h;\n      renderer.setSize(w, h);\n      initAsciiSize();\n    };\n\n    /**\n     * When using this effect, this method should be called instead of the\n     * default {@link WebGLRenderer#render}.\n     *\n     * @param {Object3D} scene - The scene to render.\n     * @param {Camera} camera - The camera.\n     */\n    this.render = function (scene, camera) {\n      renderer.render(scene, camera);\n      asciifyImage(oAscii);\n    };\n\n    /**\n     * The DOM element of the effect. This element must be used instead of the\n     * default {@link WebGLRenderer#domElement}.\n     *\n     * @type {HTMLDivElement}\n     */\n    this.domElement = domElement;\n\n    // Throw in ascii library from https://github.com/hassadee/jsascii/blob/master/jsascii.js (MIT License)\n\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution);\n      iHeight = Math.floor(height * fResolution);\n      oCanvas.width = iWidth;\n      oCanvas.height = iHeight;\n      // oCanvas.style.display = \"none\";\n      // oCanvas.style.width = iWidth;\n      // oCanvas.style.height = iHeight;\n\n      oImg = renderer.domElement;\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n        oAscii.rows[0].cells[0].style.color = oImg.style.color;\n      }\n      oAscii.cellSpacing = '0';\n      oAscii.cellPadding = '0';\n      const oStyle = oAscii.style;\n      oStyle.whiteSpace = 'pre';\n      oStyle.margin = '0px';\n      oStyle.padding = '0px';\n      oStyle.letterSpacing = fLetterSpacing + 'px';\n      oStyle.fontFamily = strFont;\n      oStyle.fontSize = fFontSize + 'px';\n      oStyle.lineHeight = fLineHeight + 'px';\n      oStyle.textAlign = 'left';\n      oStyle.textDecoration = 'none';\n    }\n    const strFont = 'courier new, monospace';\n    const oCanvasImg = renderer.domElement;\n    const oCanvas = document.createElement('canvas');\n    if (!oCanvas.getContext) {\n      return;\n    }\n    const oCtx = oCanvas.getContext('2d');\n    if (!oCtx.getImageData) {\n      return;\n    }\n    let aCharList;\n    if (charSet) {\n      aCharList = charSet.split('');\n    } else {\n      const aDefaultCharList = ' .,:;i1tfLCG08@'.split('');\n      const aDefaultColorCharList = ' CGO08@'.split('');\n      aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n    }\n\n    // Setup dom\n\n    const fFontSize = 2 / fResolution * iScale;\n    const fLineHeight = 2 / fResolution * iScale;\n\n    // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n    let fLetterSpacing = 0;\n    if (strResolution == 'low') {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1;\n          break;\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1;\n          break;\n        case 4:\n          fLetterSpacing = -3.1;\n          break;\n        case 5:\n          fLetterSpacing = -4.15;\n          break;\n      }\n    }\n    if (strResolution == 'medium') {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0;\n          break;\n        case 2:\n          fLetterSpacing = -1;\n          break;\n        case 3:\n          fLetterSpacing = -1.04;\n          break;\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1;\n          break;\n      }\n    }\n    if (strResolution == 'high') {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0;\n          break;\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1;\n          break;\n      }\n    }\n\n    // can't get a span or div to flow like an img element, but a table works?\n\n    // convert img element to ascii\n\n    function asciifyImage(oAscii) {\n      oCtx.clearRect(0, 0, iWidth, iHeight);\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n\n      // Coloring loop starts now\n      let strChars = '';\n\n      // console.time('rendering');\n\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4;\n          const iRed = oImgData[iOffset];\n          const iGreen = oImgData[iOffset + 1];\n          const iBlue = oImgData[iOffset + 2];\n          const iAlpha = oImgData[iOffset + 3];\n          let iCharIdx;\n          let fBrightness;\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n          // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n          if (iAlpha == 0) {\n            // should calculate alpha instead, but quick hack :)\n            //fBrightness *= (iAlpha / 255);\n            fBrightness = 1;\n          }\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1;\n          }\n\n          // good for debugging\n          //fBrightness = Math.floor(fBrightness * 10);\n          //strThisChar = fBrightness;\n\n          let strThisChar = aCharList[iCharIdx];\n          if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;';\n          if (bColor) {\n            strChars += '<span style=\\'' + 'color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' + (bBlock ? 'background-color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' : '') + (bAlpha ? 'opacity:' + iAlpha / 255 + ';' : '') + '\\'>' + strThisChar + '</span>';\n          } else {\n            strChars += strThisChar;\n          }\n        }\n        strChars += '<br/>';\n      }\n      oAscii.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n\n      // console.timeEnd('rendering');\n\n      // return oAscii;\n    }\n  }\n}\n\n/**\n * This type represents configuration settings of `AsciiEffect`.\n *\n * @typedef {Object} AsciiEffect~Options\n * @property {number} [resolution=0.15] - A higher value leads to more details.\n * @property {number} [scale=1] - The scale of the effect.\n * @property {boolean} [color=false] - Whether colors should be enabled or not. Better quality but slows down rendering.\n * @property {boolean} [alpha=false] - Whether transparency should be enabled or not.\n * @property {boolean} [block=false] - Whether blocked characters should be enabled or not.\n * @property {boolean} [invert=false] - Whether colors should be inverted or not.\n * @property {('low'|'medium'|'high')} [strResolution='low'] - The string resolution.\n **/\n\nexport { AsciiEffect };","map":{"version":3,"names":["AsciiEffect","constructor","renderer","charSet","options","fResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","floor","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","oCanvasImg","getContext","oCtx","getImageData","aCharList","split","aDefaultCharList","aDefaultColorCharList","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","length","strThisChar","undefined","innerHTML"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/effects/AsciiEffect.js"],"sourcesContent":["/**\n * A class that creates an ASCII effect.\n *\n * The ASCII generation is based on [jsascii]{@link https://github.com/hassadee/jsascii/blob/master/jsascii.js}.\n *\n * @three_import import { AsciiEffect } from 'three/addons/effects/AsciiEffect.js';\n */\nclass AsciiEffect {\n\n\t/**\n\t * Constructs a new ASCII effect.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {string} [charSet=' .:-=+*#%@'] - The char set.\n\t * @param {AsciiEffect~Options} [options] - The configuration parameter.\n\t */\n\tconstructor( renderer, charSet = ' .:-=+*#%@', options = {} ) {\n\n\t\t// ' .,:;=|iI+hHOE#`$';\n\t\t// darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n\t\t// ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n\t\t// Some ASCII settings\n\n\t\tconst fResolution = options[ 'resolution' ] || 0.15;\n\t\tconst iScale = options[ 'scale' ] || 1;\n\t\tconst bColor = options[ 'color' ] || false;\n\t\tconst bAlpha = options[ 'alpha' ] || false;\n\t\tconst bBlock = options[ 'block' ] || false;\n\t\tconst bInvert = options[ 'invert' ] || false;\n\t\tconst strResolution = options[ 'strResolution' ] || 'low';\n\n\t\tlet width, height;\n\n\t\tconst domElement = document.createElement( 'div' );\n\t\tdomElement.style.cursor = 'default';\n\n\t\tconst oAscii = document.createElement( 'table' );\n\t\tdomElement.appendChild( oAscii );\n\n\t\tlet iWidth, iHeight;\n\t\tlet oImg;\n\n\t\t/**\n\t\t * Resizes the effect.\n\t\t *\n\t\t * @param {number} w - The width of the effect in logical pixels.\n\t\t * @param {number} h - The height of the effect in logical pixels.\n\t\t */\n\t\tthis.setSize = function ( w, h ) {\n\n\t\t\twidth = w;\n\t\t\theight = h;\n\n\t\t\trenderer.setSize( w, h );\n\n\t\t\tinitAsciiSize();\n\n\t\t};\n\n\t\t/**\n\t\t * When using this effect, this method should be called instead of the\n\t\t * default {@link WebGLRenderer#render}.\n\t\t *\n\t\t * @param {Object3D} scene - The scene to render.\n\t\t * @param {Camera} camera - The camera.\n\t\t */\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\tasciifyImage( oAscii );\n\n\t\t};\n\n\t\t/**\n\t\t * The DOM element of the effect. This element must be used instead of the\n\t\t * default {@link WebGLRenderer#domElement}.\n\t\t *\n\t\t * @type {HTMLDivElement}\n\t\t */\n\t\tthis.domElement = domElement;\n\n\n\t\t// Throw in ascii library from https://github.com/hassadee/jsascii/blob/master/jsascii.js (MIT License)\n\n\t\tfunction initAsciiSize() {\n\n\t\t\tiWidth = Math.floor( width * fResolution );\n\t\t\tiHeight = Math.floor( height * fResolution );\n\n\t\t\toCanvas.width = iWidth;\n\t\t\toCanvas.height = iHeight;\n\t\t\t// oCanvas.style.display = \"none\";\n\t\t\t// oCanvas.style.width = iWidth;\n\t\t\t// oCanvas.style.height = iHeight;\n\n\t\t\toImg = renderer.domElement;\n\n\t\t\tif ( oImg.style.backgroundColor ) {\n\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.backgroundColor = oImg.style.backgroundColor;\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.color = oImg.style.color;\n\n\t\t\t}\n\n\t\t\toAscii.cellSpacing = '0';\n\t\t\toAscii.cellPadding = '0';\n\n\t\t\tconst oStyle = oAscii.style;\n\t\t\toStyle.whiteSpace = 'pre';\n\t\t\toStyle.margin = '0px';\n\t\t\toStyle.padding = '0px';\n\t\t\toStyle.letterSpacing = fLetterSpacing + 'px';\n\t\t\toStyle.fontFamily = strFont;\n\t\t\toStyle.fontSize = fFontSize + 'px';\n\t\t\toStyle.lineHeight = fLineHeight + 'px';\n\t\t\toStyle.textAlign = 'left';\n\t\t\toStyle.textDecoration = 'none';\n\n\t\t}\n\n\n\t\tconst strFont = 'courier new, monospace';\n\n\t\tconst oCanvasImg = renderer.domElement;\n\n\t\tconst oCanvas = document.createElement( 'canvas' );\n\t\tif ( ! oCanvas.getContext ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst oCtx = oCanvas.getContext( '2d' );\n\t\tif ( ! oCtx.getImageData ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet aCharList;\n\t\tif ( charSet ) {\n\n\t\t\taCharList = ( charSet ).split( '' );\n\n\t\t} else {\n\n\t\t\tconst aDefaultCharList = ( ' .,:;i1tfLCG08@' ).split( '' );\n\t\t\tconst aDefaultColorCharList = ( ' CGO08@' ).split( '' );\n\t\t\taCharList = ( bColor ? aDefaultColorCharList : aDefaultCharList );\n\n\t\t}\n\n\n\t\t// Setup dom\n\n\t\tconst fFontSize = ( 2 / fResolution ) * iScale;\n\t\tconst fLineHeight = ( 2 / fResolution ) * iScale;\n\n\t\t// adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n\t\tlet fLetterSpacing = 0;\n\n\t\tif ( strResolution == 'low' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 2 :\n\t\t\t\tcase 3 : fLetterSpacing = - 2.1; break;\n\t\t\t\tcase 4 : fLetterSpacing = - 3.1; break;\n\t\t\t\tcase 5 : fLetterSpacing = - 4.15; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'medium' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = 0; break;\n\t\t\t\tcase 2 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 3 : fLetterSpacing = - 1.04; break;\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 2.1; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'high' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 :\n\t\t\t\tcase 2 : fLetterSpacing = 0; break;\n\t\t\t\tcase 3 :\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 1; break;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// can't get a span or div to flow like an img element, but a table works?\n\n\n\t\t// convert img element to ascii\n\n\t\tfunction asciifyImage( oAscii ) {\n\n\t\t\toCtx.clearRect( 0, 0, iWidth, iHeight );\n\t\t\toCtx.drawImage( oCanvasImg, 0, 0, iWidth, iHeight );\n\t\t\tconst oImgData = oCtx.getImageData( 0, 0, iWidth, iHeight ).data;\n\n\t\t\t// Coloring loop starts now\n\t\t\tlet strChars = '';\n\n\t\t\t// console.time('rendering');\n\n\t\t\tfor ( let y = 0; y < iHeight; y += 2 ) {\n\n\t\t\t\tfor ( let x = 0; x < iWidth; x ++ ) {\n\n\t\t\t\t\tconst iOffset = ( y * iWidth + x ) * 4;\n\n\t\t\t\t\tconst iRed = oImgData[ iOffset ];\n\t\t\t\t\tconst iGreen = oImgData[ iOffset + 1 ];\n\t\t\t\t\tconst iBlue = oImgData[ iOffset + 2 ];\n\t\t\t\t\tconst iAlpha = oImgData[ iOffset + 3 ];\n\t\t\t\t\tlet iCharIdx;\n\n\t\t\t\t\tlet fBrightness;\n\n\t\t\t\t\tfBrightness = ( 0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue ) / 255;\n\t\t\t\t\t// fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n\t\t\t\t\tif ( iAlpha == 0 ) {\n\n\t\t\t\t\t\t// should calculate alpha instead, but quick hack :)\n\t\t\t\t\t\t//fBrightness *= (iAlpha / 255);\n\t\t\t\t\t\tfBrightness = 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tiCharIdx = Math.floor( ( 1 - fBrightness ) * ( aCharList.length - 1 ) );\n\n\t\t\t\t\tif ( bInvert ) {\n\n\t\t\t\t\t\tiCharIdx = aCharList.length - iCharIdx - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// good for debugging\n\t\t\t\t\t//fBrightness = Math.floor(fBrightness * 10);\n\t\t\t\t\t//strThisChar = fBrightness;\n\n\t\t\t\t\tlet strThisChar = aCharList[ iCharIdx ];\n\n\t\t\t\t\tif ( strThisChar === undefined || strThisChar == ' ' )\n\t\t\t\t\t\tstrThisChar = '&nbsp;';\n\n\t\t\t\t\tif ( bColor ) {\n\n\t\t\t\t\t\tstrChars += '<span style=\\''\n\t\t\t\t\t\t\t+ 'color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');'\n\t\t\t\t\t\t\t+ ( bBlock ? 'background-color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' : '' )\n\t\t\t\t\t\t\t+ ( bAlpha ? 'opacity:' + ( iAlpha / 255 ) + ';' : '' )\n\t\t\t\t\t\t\t+ '\\'>' + strThisChar + '</span>';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstrChars += strThisChar;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstrChars += '<br/>';\n\n\t\t\t}\n\n\t\t\toAscii.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n\n\t\t\t// console.timeEnd('rendering');\n\n\t\t\t// return oAscii;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * This type represents configuration settings of `AsciiEffect`.\n *\n * @typedef {Object} AsciiEffect~Options\n * @property {number} [resolution=0.15] - A higher value leads to more details.\n * @property {number} [scale=1] - The scale of the effect.\n * @property {boolean} [color=false] - Whether colors should be enabled or not. Better quality but slows down rendering.\n * @property {boolean} [alpha=false] - Whether transparency should be enabled or not.\n * @property {boolean} [block=false] - Whether blocked characters should be enabled or not.\n * @property {boolean} [invert=false] - Whether colors should be inverted or not.\n * @property {('low'|'medium'|'high')} [strResolution='low'] - The string resolution.\n **/\n\nexport { AsciiEffect };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}