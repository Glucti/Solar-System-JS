{"ast":null,"code":"import { DataTextureLoader, RGBAFormat, LinearFilter, CubeTexture, HalfFloatType, DataUtils } from 'three';\n\n/**\n * A loader for the RGBM HDR texture format.\n *\n * ```js\n * const loader = new RGBMLoader();\n * loader.setMaxRange( 16 );\n *\n * const texture = await loader.loadAsync( 'textures/memorial.png' );\n * ```\n *\n * @augments DataTextureLoader\n * @three_import import { RGBMLoader } from 'three/addons/loaders/RGBMLoader.js';\n */\nclass RGBMLoader extends DataTextureLoader {\n  /**\n   * Constructs a new RGBM loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n\n    /**\n     * The texture type.\n     *\n     * @type {(HalfFloatType|FloatType)}\n     * @default HalfFloatType\n     */\n    this.type = HalfFloatType;\n\n    /**\n     * More information about this property at [The difference between RGBM and RGBD]{@link https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html}\n     *\n     * @type {(7|16)}\n     * @default 7\n     */\n    this.maxRange = 7;\n  }\n\n  /**\n   * Sets the texture type.\n   *\n   * @param {(HalfFloatType|FloatType)} value - The texture type to set.\n   * @return {RGBMLoader} A reference to this loader.\n   */\n  setDataType(value) {\n    this.type = value;\n    return this;\n  }\n\n  /**\n   * Sets the maximum range.\n   *\n   * @param {(7|16)} value - The maximum range to set.\n   * @return {RGBMLoader} A reference to this loader.\n   */\n  setMaxRange(value) {\n    this.maxRange = value;\n    return this;\n  }\n\n  /**\n   * Starts loading from the given URLs and passes the loaded RGBM cube map\n   * to the `onLoad()` callback.\n   *\n   * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n   * @param {function(CubeTexture)} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   * @return {CubeTexture} The cube texture.\n   */\n  loadCubemap(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    for (let i = 0; i < 6; i++) {\n      texture.images[i] = undefined;\n    }\n    let loaded = 0;\n    const scope = this;\n    function loadTexture(i) {\n      scope.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n    texture.type = this.type;\n    texture.format = RGBAFormat;\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n\n  /**\n   * Async version of {@link RGBMLoader#loadCubemap}.\n   *\n   * @async\n   * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @return {Promise<CubeTexture>} A Promise that resolves with the loaded cube map.\n   */\n  loadCubemapAsync(urls, onProgress) {\n    return new Promise((resolve, reject) => {\n      this.loadCubemap(urls, resolve, onProgress, reject);\n    });\n  }\n\n  /**\n   * Parses the given RGBM texture data.\n   *\n   * @param {ArrayBuffer} buffer - The raw texture data.\n   * @return {DataTextureLoader~TexData} An object representing the parsed texture data.\n   */\n  parse(buffer) {\n    const img = UPNG.decode(buffer);\n    const rgba = UPNG.toRGBA8(img)[0];\n    const data = new Uint8Array(rgba);\n    const size = img.width * img.height * 4;\n    const output = this.type === HalfFloatType ? new Uint16Array(size) : new Float32Array(size);\n\n    // decode RGBM\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i + 0] / 255;\n      const g = data[i + 1] / 255;\n      const b = data[i + 2] / 255;\n      const a = data[i + 3] / 255;\n      if (this.type === HalfFloatType) {\n        output[i + 0] = DataUtils.toHalfFloat(Math.min(r * a * this.maxRange, 65504));\n        output[i + 1] = DataUtils.toHalfFloat(Math.min(g * a * this.maxRange, 65504));\n        output[i + 2] = DataUtils.toHalfFloat(Math.min(b * a * this.maxRange, 65504));\n        output[i + 3] = DataUtils.toHalfFloat(1);\n      } else {\n        output[i + 0] = r * a * this.maxRange;\n        output[i + 1] = g * a * this.maxRange;\n        output[i + 2] = b * a * this.maxRange;\n        output[i + 3] = 1;\n      }\n    }\n    return {\n      width: img.width,\n      height: img.height,\n      data: output,\n      format: RGBAFormat,\n      type: this.type,\n      flipY: true\n    };\n  }\n}\n\n// from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n    h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n    img = new Uint8Array(len),\n    empty = new Uint8Array(len),\n    prev = new Uint8Array(len);\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n      fy = frm.rect.y,\n      fw = frm.rect.width,\n      fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (var j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) img[j] = prev[j];\n  }\n  return frms;\n};\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n    bpp = UPNG.decode._getBPP(out);\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n    bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n    depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n  if (ctype == 6) {\n    // RGB + alpha\n\n    var qarea = area << 2;\n    if (depth == 8) for (var i = 0; i < qarea; i += 4) {\n      bf[i] = data[i];\n      bf[i + 1] = data[i + 1];\n      bf[i + 2] = data[i + 2];\n      bf[i + 3] = data[i + 3];\n    }\n    if (depth == 16) for (var i = 0; i < qarea; i++) {\n      bf[i] = data[i << 1];\n    }\n  } else if (ctype == 2) {\n    // RGB\n\n    var ts = out.tabs['tRNS'];\n    if (ts == null) {\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n      }\n    } else {\n      var tr = ts[0],\n        tg = ts[1],\n        tb = ts[2];\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n\n    var p = out.tabs['PLTE'],\n      ap = out.tabs['tRNS'],\n      tl = ap ? ap.length : 0;\n    //console.log(p, ap);\n    if (depth == 1) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 2) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 4) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        j = data[i],\n        cj = 3 * j;\n      bf[qi] = p[cj];\n      bf[qi + 1] = p[cj + 1];\n      bf[qi + 2] = p[cj + 2];\n      bf[qi + 3] = j < tl ? ap[j] : 255;\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 1,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 1];\n    }\n    if (depth == 16) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 2,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 2];\n    }\n  } else if (ctype == 0) {\n    // gray\n\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n    for (var y = 0; y < h; y++) {\n      var off = y * bpl,\n        to = y * w;\n      if (depth == 1) for (var x = 0; x < w; x++) {\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n          al = gr == tr * 255 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 2) for (var x = 0; x < w; x++) {\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n          al = gr == tr * 85 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 4) for (var x = 0; x < w; x++) {\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n          al = gr == tr * 17 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 8) for (var x = 0; x < w; x++) {\n        var gr = data[off + x],\n          al = gr == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 16) for (var x = 0; x < w; x++) {\n        var gr = data[off + (x << 1)],\n          al = rs(data, off + (x << 1)) == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      }\n    }\n  }\n\n  //console.log(Date.now()-time);\n  return bf;\n};\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n    offset = 8,\n    bin = UPNG._bin,\n    rUs = bin.readUshort,\n    rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n    doff = 0; // put all IDAT data into it\n  var fd,\n    foff = 0; // frames\n  var text, keyw, bfr;\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n  for (var i = 0; i < 8; i++) if (data[i] != mgck[i]) throw new Error('The input is not a PNG file!');\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4;\n    //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (var i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      };\n      //console.log(frm);\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (var i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n      for (var i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      keyw = bin.readASCII(data, offset, nz - offset);\n      var tl = offset + len - nz - 1;\n      if (type == 'tEXt') text = bin.readASCII(data, nz + 1, tl);else {\n        bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n        off = offset;\n      nz = bin.nextZero(data, off);\n      keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var tl = len - (off - offset);\n      if (cflag == 0) text = bin.readUTF8(data, off, tl);else {\n        bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n      for (var i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];\n      //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == 'sRGB') out.tabs[type] = data[offset];else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\n    } else if (type == 'IEND') {\n      break;\n    }\n\n    //else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n  }\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n      i = 0,\n      m = 0,\n      J = 0,\n      h = 0,\n      Q = 0,\n      X = 0,\n      u = 0,\n      w = 0,\n      d = 0,\n      v,\n      C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n      n = V.b,\n      A = V.e,\n      l = V.R,\n      M = V.n,\n      I = V.A,\n      e = V.Z,\n      b = V.m,\n      Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n          q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n      if (Z) W = H.H.W(W, w + (1 << 17));\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n        for (var c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n        for (var c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n            Y = b.c[s],\n            a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n          w = z;\n        }\n      }\n    }\n    return W.length == w ? W : W.slice(0, w);\n  };\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n      M = H.H.Z,\n      I = 0;\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n          m = 0;\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n        var J = I + m;\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n    return n;\n  };\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n      A = 0,\n      l = V.length >>> 1;\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n    return n;\n  };\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n      V = N.length,\n      n,\n      A,\n      l,\n      M,\n      I,\n      e = R.j;\n    for (var M = 0; M <= W; M++) e[M] = 0;\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n      n = H.H.m,\n      A = n.r;\n    for (var l = 0; l < V; l += 2) if (N[l + 1] != 0) {\n      var M = l >> 1,\n        I = N[l + 1],\n        e = M << 4 | I,\n        b = W - I,\n        Z = N[l] << b,\n        m = Z + (1 << b);\n      while (Z != m) {\n        var J = A[Z] >>> 15 - W;\n        R[J] = e;\n        Z++;\n      }\n    }\n  };\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n      V = 15 - W;\n    for (var n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n  H.H.m = function () {\n    var N = Uint16Array,\n      W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n  (function () {\n    var N = H.H.m,\n      W = 1 << 15;\n    for (var R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n    for (var R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n  return H.H.N;\n}();\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n    h = out.height;\n  var bpp = UPNG.decode._getBPP(out),\n    cbpp = bpp >> 3,\n    bpl = Math.ceil(w * bpp / 8);\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n  while (pass < 7) {\n    var ri = row_increment[pass],\n      ci = col_increment[pass];\n    var sw = 0,\n      sh = 0;\n    var cr = starting_row[pass];\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n    var cc = starting_col[pass];\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n    var bpll = Math.ceil(sw * bpp / 8);\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n    var y = 0,\n      row = starting_row[pass];\n    var val;\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n      while (col < w) {\n        if (bpp == 1) {\n          val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n        if (bpp == 2) {\n          val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n        if (bpp == 4) {\n          val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n          for (var j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n        cdi += bpp;\n        col += ci;\n      }\n      y++;\n      row += ri;\n    }\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n  return img;\n};\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    paeth = UPNG.decode._paeth;\n  bpp = Math.ceil(bpp / 8);\n  var i,\n    di,\n    type = data[off],\n    x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n  for (var y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) for (; x < bpl; x++) data[i + x] = data[di + x];else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n    }\n  }\n  return data;\n};\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n    pa = p - a,\n    pb = p - b,\n    pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = '',\n      ns;\n    for (var i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n    return ns;\n  }\n};\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n    h = Math.min(sh, th);\n  var si = 0,\n    ti = 0;\n  for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\n    if (xoff >= 0 && yoff >= 0) {\n      si = y * sw + x << 2;\n      ti = (yoff + y) * tw + xoff + x << 2;\n    } else {\n      si = (-yoff + y) * sw - xoff + x << 2;\n      ti = y * tw + x << 2;\n    }\n    if (mode == 0) {\n      tb[ti] = sb[si];\n      tb[ti + 1] = sb[si + 1];\n      tb[ti + 2] = sb[si + 2];\n      tb[ti + 3] = sb[si + 3];\n    } else if (mode == 1) {\n      var fa = sb[si + 3] * (1 / 255),\n        fr = sb[si] * fa,\n        fg = sb[si + 1] * fa,\n        fb = sb[si + 2] * fa;\n      var ba = tb[ti + 3] * (1 / 255),\n        br = tb[ti] * ba,\n        bg = tb[ti + 1] * ba,\n        bb = tb[ti + 2] * ba;\n      var ifa = 1 - fa,\n        oa = fa + ba * ifa,\n        ioa = oa == 0 ? 0 : 1 / oa;\n      tb[ti + 3] = 255 * oa;\n      tb[ti + 0] = (fr + br * ifa) * ioa;\n      tb[ti + 1] = (fg + bg * ifa) * ioa;\n      tb[ti + 2] = (fb + bb * ifa) * ioa;\n    } else if (mode == 2) {\n      // copy only differences, otherwise zero\n\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) {\n        tb[ti] = 0;\n        tb[ti + 1] = 0;\n        tb[ti + 2] = 0;\n        tb[ti + 3] = 0;\n      } else {\n        tb[ti] = fr;\n        tb[ti + 1] = fg;\n        tb[ti + 2] = fb;\n        tb[ti + 3] = fa;\n      }\n    } else if (mode == 3) {\n      // check if can be blended\n\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) continue;\n      //if(fa!=255 && ba!=0) return false;\n      if (fa < 220 && ba > 20) return false;\n    }\n  }\n  return true;\n};\nexport { RGBMLoader };","map":{"version":3,"names":["DataTextureLoader","RGBAFormat","LinearFilter","CubeTexture","HalfFloatType","DataUtils","RGBMLoader","constructor","manager","type","maxRange","setDataType","value","setMaxRange","loadCubemap","urls","onLoad","onProgress","onError","texture","i","images","undefined","loaded","scope","loadTexture","load","image","needsUpdate","length","format","minFilter","generateMipmaps","loadCubemapAsync","Promise","resolve","reject","parse","buffer","img","UPNG","decode","rgba","toRGBA8","data","Uint8Array","size","width","height","output","Uint16Array","Float32Array","r","g","b","a","toHalfFloat","Math","min","flipY","out","w","h","tabs","acTL","decodeImage","frms","frames","len","empty","prev","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","_getBPP","bpl","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","di","gr","off","to","al","buff","offset","bin","rUs","rUi","readUint","dd","doff","fd","foff","text","keyw","bfr","mgck","Error","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","_inflate","readUTF8","cflag","readBytes","pl","compress","interlace","filter","inflateRaw","_filterZero","_readInterlace","H","N","W","R","m","J","Q","X","u","d","v","C","V","n","A","e","l","M","I","Z","D","q","set","byteOffset","c","K","S","T","z","_","$","s","Y","t","k","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","row","val","col","cdi","ii","noc","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/loaders/RGBMLoader.js"],"sourcesContent":["import {\n\tDataTextureLoader,\n\tRGBAFormat,\n\tLinearFilter,\n\tCubeTexture,\n\tHalfFloatType,\n\tDataUtils\n} from 'three';\n\n/**\n * A loader for the RGBM HDR texture format.\n *\n * ```js\n * const loader = new RGBMLoader();\n * loader.setMaxRange( 16 );\n *\n * const texture = await loader.loadAsync( 'textures/memorial.png' );\n * ```\n *\n * @augments DataTextureLoader\n * @three_import import { RGBMLoader } from 'three/addons/loaders/RGBMLoader.js';\n */\nclass RGBMLoader extends DataTextureLoader {\n\n\t/**\n\t * Constructs a new RGBM loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * The texture type.\n\t\t *\n\t\t * @type {(HalfFloatType|FloatType)}\n\t\t * @default HalfFloatType\n\t\t */\n\t\tthis.type = HalfFloatType;\n\n\t\t/**\n\t\t * More information about this property at [The difference between RGBM and RGBD]{@link https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html}\n\t\t *\n\t\t * @type {(7|16)}\n\t\t * @default 7\n\t\t */\n\t\tthis.maxRange = 7;\n\n\t}\n\n\t/**\n\t * Sets the texture type.\n\t *\n\t * @param {(HalfFloatType|FloatType)} value - The texture type to set.\n\t * @return {RGBMLoader} A reference to this loader.\n\t */\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the maximum range.\n\t *\n\t * @param {(7|16)} value - The maximum range to set.\n\t * @return {RGBMLoader} A reference to this loader.\n\t */\n\tsetMaxRange( value ) {\n\n\t\tthis.maxRange = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URLs and passes the loaded RGBM cube map\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n\t * @param {function(CubeTexture)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t * @return {CubeTexture} The cube texture.\n\t */\n\tloadCubemap( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\ttexture.images[ i ] = undefined;\n\n\t\t}\n\n\t\tlet loaded = 0;\n\n\t\tconst scope = this;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tscope.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\ttexture.type = this.type;\n\t\ttexture.format = RGBAFormat;\n\t\ttexture.minFilter = LinearFilter;\n\t\ttexture.generateMipmaps = false;\n\n\t\treturn texture;\n\n\t}\n\n\t/**\n\t * Async version of {@link RGBMLoader#loadCubemap}.\n\t *\n\t * @async\n\t * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @return {Promise<CubeTexture>} A Promise that resolves with the loaded cube map.\n\t */\n\tloadCubemapAsync( urls, onProgress ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tthis.loadCubemap( urls, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Parses the given RGBM texture data.\n\t *\n\t * @param {ArrayBuffer} buffer - The raw texture data.\n\t * @return {DataTextureLoader~TexData} An object representing the parsed texture data.\n\t */\n\tparse( buffer ) {\n\n\t\tconst img = UPNG.decode( buffer );\n\t\tconst rgba = UPNG.toRGBA8( img )[ 0 ];\n\n\t\tconst data = new Uint8Array( rgba );\n\t\tconst size = img.width * img.height * 4;\n\n\t\tconst output = ( this.type === HalfFloatType ) ? new Uint16Array( size ) : new Float32Array( size );\n\n\t\t// decode RGBM\n\n\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\tconst r = data[ i + 0 ] / 255;\n\t\t\tconst g = data[ i + 1 ] / 255;\n\t\t\tconst b = data[ i + 2 ] / 255;\n\t\t\tconst a = data[ i + 3 ] / 255;\n\n\t\t\tif ( this.type === HalfFloatType ) {\n\n\t\t\t\toutput[ i + 0 ] = DataUtils.toHalfFloat( Math.min( r * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 1 ] = DataUtils.toHalfFloat( Math.min( g * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 2 ] = DataUtils.toHalfFloat( Math.min( b * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t\t} else {\n\n\t\t\t\toutput[ i + 0 ] = r * a * this.maxRange;\n\t\t\t\toutput[ i + 1 ] = g * a * this.maxRange;\n\t\t\t\toutput[ i + 2 ] = b * a * this.maxRange;\n\t\t\t\toutput[ i + 3 ] = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: img.width,\n\t\t\theight: img.height,\n\t\t\tdata: output,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: this.type,\n\t\t\tflipY: true\n\t\t};\n\n\t}\n\n}\n\n// from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function ( out ) {\n\n\tvar w = out.width, h = out.height;\n\tif ( out.tabs.acTL == null ) return [ UPNG.toRGBA8.decodeImage( out.data, w, h, out ).buffer ];\n\n\tvar frms = [];\n\tif ( out.frames[ 0 ].data == null ) out.frames[ 0 ].data = out.data;\n\n\tvar len = w * h * 4, img = new Uint8Array( len ), empty = new Uint8Array( len ), prev = new Uint8Array( len );\n\tfor ( var i = 0; i < out.frames.length; i ++ ) {\n\n\t\tvar frm = out.frames[ i ];\n\t\tvar fx = frm.rect.x, fy = frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage( frm.data, fw, fh, out );\n\n\t\tif ( i != 0 ) for ( var j = 0; j < len; j ++ ) prev[ j ] = img[ j ];\n\n\t\tif ( frm.blend == 0 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.blend == 1 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 1 );\n\n\t\tfrms.push( img.buffer.slice( 0 ) );\n\n\t\tif ( frm.dispose == 1 ) UPNG._copyTile( empty, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.dispose == 2 ) for ( var j = 0; j < len; j ++ ) img[ j ] = prev[ j ];\n\n\t}\n\n\treturn frms;\n\n};\n\nUPNG.toRGBA8.decodeImage = function ( data, w, h, out ) {\n\n\tvar area = w * h, bpp = UPNG.decode._getBPP( out );\n\tvar bpl = Math.ceil( w * bpp / 8 );\t// bytes per line\n\n\tvar bf = new Uint8Array( area * 4 ), bf32 = new Uint32Array( bf.buffer );\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\n\tif ( ctype == 6 ) { // RGB + alpha\n\n\t\tvar qarea = area << 2;\n\t\tif ( depth == 8 ) for ( var i = 0; i < qarea; i += 4 ) {\n\n\t\t\tbf[ i ] = data[ i ]; bf[ i + 1 ] = data[ i + 1 ]; bf[ i + 2 ] = data[ i + 2 ]; bf[ i + 3 ] = data[ i + 3 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < qarea; i ++ ) {\n\n\t\t\tbf[ i ] = data[ i << 1 ];\n\n\t\t}\n\n\t} else if ( ctype == 2 ) {\t// RGB\n\n\t\tvar ts = out.tabs[ 'tRNS' ];\n\t\tif ( ts == null ) {\n\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar tr = ts[ 0 ], tg = ts[ 1 ], tb = ts[ 2 ];\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( data[ ti ] == tr && data[ ti + 1 ] == tg && data[ ti + 2 ] == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( rs( data, ti ) == tr && rs( data, ti + 2 ) == tg && rs( data, ti + 4 ) == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( ctype == 3 ) {\t// palette\n\n\t\tvar p = out.tabs[ 'PLTE' ], ap = out.tabs[ 'tRNS' ], tl = ap ? ap.length : 0;\n\t\t//console.log(p, ap);\n\t\tif ( depth == 1 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 3 ) ] >> ( 7 - ( ( i & 7 ) << 0 ) ) ) & 1 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 2 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 2 ) ] >> ( 6 - ( ( i & 3 ) << 1 ) ) ) & 3 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 4 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 1 ) ] >> ( 4 - ( ( i & 1 ) << 2 ) ) ) & 15 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, j = data[ i ], cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t}\n\n\t} else if ( ctype == 4 ) {\t// gray + alpha\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 1, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 1 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 2, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 2 ];\n\n\t\t}\n\n\t} else if ( ctype == 0 ) {\t// gray\n\n\t\tvar tr = out.tabs[ 'tRNS' ] ? out.tabs[ 'tRNS' ] : - 1;\n\t\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar off = y * bpl, to = y * w;\n\t\t\tif ( depth == 1 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 255 * ( ( data[ off + ( x >>> 3 ) ] >>> ( 7 - ( x & 7 ) ) ) & 1 ), al = ( gr == tr * 255 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 2 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 85 * ( ( data[ off + ( x >>> 2 ) ] >>> ( 6 - ( ( x & 3 ) << 1 ) ) ) & 3 ), al = ( gr == tr * 85 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 4 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 17 * ( ( data[ off + ( x >>> 1 ) ] >>> ( 4 - ( ( x & 1 ) << 2 ) ) ) & 15 ), al = ( gr == tr * 17 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 8 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + x ], al = ( gr == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 16 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + ( x << 1 ) ], al = ( rs( data, off + ( x << 1 ) ) == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//console.log(Date.now()-time);\n\treturn bf;\n\n};\n\n\n\nUPNG.decode = function ( buff ) {\n\n\tvar data = new Uint8Array( buff ), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = { tabs: {}, frames: [] };\n\tvar dd = new Uint8Array( data.length ), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\tvar text, keyw, bfr;\n\n\tvar mgck = [ 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a ];\n\tfor ( var i = 0; i < 8; i ++ ) if ( data[ i ] != mgck[ i ] ) throw new Error( 'The input is not a PNG file!' );\n\n\twhile ( offset < data.length ) {\n\n\t\tvar len = bin.readUint( data, offset ); offset += 4;\n\t\tvar type = bin.readASCII( data, offset, 4 ); offset += 4;\n\t\t//console.log(type,len);\n\n\t\tif ( type == 'IHDR' ) {\n\n\t\t\tUPNG.decode._IHDR( data, offset, out );\n\n\t\t} else if ( type == 'CgBI' ) {\n\n\t\t\tout.tabs[ type ] = data.slice( offset, offset + 4 );\n\n\t\t} else if ( type == 'IDAT' ) {\n\n\t\t\tfor ( var i = 0; i < len; i ++ ) dd[ doff + i ] = data[ offset + i ];\n\t\t\tdoff += len;\n\n\t\t} else if ( type == 'acTL' ) {\n\n\t\t\tout.tabs[ type ] = { num_frames: rUi( data, offset ), num_plays: rUi( data, offset + 4 ) };\n\t\t\tfd = new Uint8Array( data.length );\n\n\t\t} else if ( type == 'fcTL' ) {\n\n\t\t\tif ( foff != 0 ) {\n\n\t\t\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\t\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height ); foff = 0;\n\n\t\t\t}\n\n\t\t\tvar rct = { x: rUi( data, offset + 12 ), y: rUi( data, offset + 16 ), width: rUi( data, offset + 4 ), height: rUi( data, offset + 8 ) };\n\t\t\tvar del = rUs( data, offset + 22 ); del = rUs( data, offset + 20 ) / ( del == 0 ? 100 : del );\n\t\t\tvar frm = { rect: rct, delay: Math.round( del * 1000 ), dispose: data[ offset + 24 ], blend: data[ offset + 25 ] };\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push( frm );\n\n\t\t} else if ( type == 'fdAT' ) {\n\n\t\t\tfor ( var i = 0; i < len - 4; i ++ ) fd[ foff + i ] = data[ offset + i + 4 ];\n\t\t\tfoff += len - 4;\n\n\t\t} else if ( type == 'pHYs' ) {\n\n\t\t\tout.tabs[ type ] = [ bin.readUint( data, offset ), bin.readUint( data, offset + 4 ), data[ offset + 8 ] ];\n\n\t\t} else if ( type == 'cHRM' ) {\n\n\t\t\tout.tabs[ type ] = [];\n\t\t\tfor ( var i = 0; i < 8; i ++ ) out.tabs[ type ].push( bin.readUint( data, offset + i * 4 ) );\n\n\t\t} else if ( type == 'tEXt' || type == 'zTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = bin.nextZero( data, offset );\n\t\t\tkeyw = bin.readASCII( data, offset, nz - offset );\n\t\t\tvar tl = offset + len - nz - 1;\n\t\t\tif ( type == 'tEXt' ) text = bin.readASCII( data, nz + 1, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( nz + 2, nz + 2 + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'iTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tkeyw = bin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tvar cflag = data[ off ]; off += 2;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readUTF8( data, off, nz - off ); off = nz + 1;\n\t\t\tvar tl = len - ( off - offset );\n\t\t\tif ( cflag == 0 ) text = bin.readUTF8( data, off, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( off, off + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'PLTE' ) {\n\n\t\t\tout.tabs[ type ] = bin.readBytes( data, offset, len );\n\n\t\t} else if ( type == 'hIST' ) {\n\n\t\t\tvar pl = out.tabs[ 'PLTE' ].length / 3;\n\t\t\tout.tabs[ type ] = []; for ( var i = 0; i < pl; i ++ ) out.tabs[ type ].push( rUs( data, offset + i * 2 ) );\n\n\t\t} else if ( type == 'tRNS' ) {\n\n\t\t\tif ( out.ctype == 3 ) out.tabs[ type ] = bin.readBytes( data, offset, len );\n\t\t\telse if ( out.ctype == 0 ) out.tabs[ type ] = rUs( data, offset );\n\t\t\telse if ( out.ctype == 2 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\n\t\t} else if ( type == 'gAMA' ) out.tabs[ type ] = bin.readUint( data, offset ) / 100000;\n\t\telse if ( type == 'sRGB' ) out.tabs[ type ] = data[ offset ];\n\t\telse if ( type == 'bKGD' ) {\n\n\t\t\tif ( out.ctype == 0 || out.ctype == 4 ) out.tabs[ type ] = [ rUs( data, offset ) ];\n\t\t\telse if ( out.ctype == 2 || out.ctype == 6 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\telse if ( out.ctype == 3 ) out.tabs[ type ] = data[ offset ];\n\n\t\t} else if ( type == 'IEND' ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t\t//else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\t\toffset += len;\n\t\tbin.readUint( data, offset ); offset += 4;\n\n\t}\n\n\tif ( foff != 0 ) {\n\n\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height );\n\n\t}\n\n\tout.data = UPNG.decode._decompress( out, dd, out.width, out.height );\n\n\tdelete out.compress; delete out.interlace; delete out.filter;\n\treturn out;\n\n};\n\nUPNG.decode._decompress = function ( out, dd, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), buff = new Uint8Array( ( bpl + 1 + out.interlace ) * h );\n\tif ( out.tabs[ 'CgBI' ] ) dd = UPNG.inflateRaw( dd, buff );\n\telse dd = UPNG.decode._inflate( dd, buff );\n\n\tif ( out.interlace == 0 ) dd = UPNG.decode._filterZero( dd, out, 0, w, h );\n\telse if ( out.interlace == 1 ) dd = UPNG.decode._readInterlace( dd, out );\n\n\treturn dd;\n\n};\n\nUPNG.decode._inflate = function ( data, buff ) {\n\n\tvar out = UPNG[ 'inflateRaw' ]( new Uint8Array( data.buffer, 2, data.length - 6 ), buff ); return out;\n\n};\n\nUPNG.inflateRaw = function () {\n\n\tvar H = {}; H.H = {}; H.H.N = function ( N, W ) {\n\n\t\tvar R = Uint8Array, i = 0, m = 0, J = 0, h = 0, Q = 0, X = 0, u = 0, w = 0, d = 0, v, C;\n\t\tif ( N[ 0 ] == 3 && N[ 1 ] == 0 ) return W ? W : new R( 0 ); var V = H.H, n = V.b, A = V.e, l = V.R, M = V.n, I = V.A, e = V.Z, b = V.m, Z = W == null;\n\t\tif ( Z )W = new R( N.length >>> 2 << 5 ); while ( i == 0 ) {\n\n\t\t\ti = n( N, d, 1 ); m = n( N, d + 1, 2 ); d += 3; if ( m == 0 ) {\n\n\t\t\t\tif ( ( d & 7 ) != 0 )d += 8 - ( d & 7 );\n\t\t\t\tvar D = ( d >>> 3 ) + 4, q = N[ D - 4 ] | N[ D - 3 ] << 8; if ( Z )W = H.H.W( W, w + q ); W.set( new R( N.buffer, N.byteOffset + D, q ), w ); d = D + q << 3;\n\t\t\t\tw += q; continue\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\tif ( Z )W = H.H.W( W, w + ( 1 << 17 ) ); if ( m == 1 ) {\n\n\t\t\t\tv = b.J; C = b.h; X = ( 1 << 9 ) - 1; u = ( 1 << 5 ) - 1;\n\n\t\t\t}\n\n\t\t\tif ( m == 2 ) {\n\n\t\t\t\tJ = A( N, d, 5 ) + 257;\n\t\t\t\th = A( N, d + 5, 5 ) + 1; Q = A( N, d + 10, 4 ) + 4; d += 14; var j = 1; for ( var c = 0; c < 38; c += 2 ) {\n\n\t\t\t\t\tb.Q[ c ] = 0; b.Q[ c + 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var c = 0;\n\t\t\t\t\tc < Q; c ++ ) {\n\n\t\t\t\t\tvar K = A( N, d + c * 3, 3 ); b.Q[ ( b.X[ c ] << 1 ) + 1 ] = K; if ( K > j )j = K\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t\td += 3 * Q; M( b.Q, j ); I( b.Q, j, b.u ); v = b.w; C = b.d;\n\t\t\t\td = l( b.u, ( 1 << j ) - 1, J + h, N, d, b.v ); var r = V.V( b.v, 0, J, b.C ); X = ( 1 << r ) - 1; var S = V.V( b.v, J, h, b.D ); u = ( 1 << S ) - 1; M( b.C, r );\n\t\t\t\tI( b.C, r, v ); M( b.D, S ); I( b.D, S, C )\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\twhile ( ! 0 ) {\n\n\t\t\t\tvar T = v[ e( N, d ) & X ]; d += T & 15; var p = T >>> 4; if ( p >>> 8 == 0 ) {\n\n\t\t\t\t\tW[ w ++ ] = p;\n\n\t\t\t\t} else if ( p == 256 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar z = w + p - 254;\n\t\t\t\t\tif ( p > 264 ) {\n\n\t\t\t\t\t\tvar _ = b.q[ p - 257 ]; z = w + ( _ >>> 3 ) + A( N, d, _ & 7 ); d += _ & 7;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $ = C[ e( N, d ) & u ]; d += $ & 15; var s = $ >>> 4, Y = b.c[ s ], a = ( Y >>> 4 ) + n( N, d, Y & 15 );\n\t\t\t\t\td += Y & 15; while ( w < z ) {\n\n\t\t\t\t\t\tW[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tw = z\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn W.length == w ? W : W.slice( 0, w )\n\t\t;\n\n\t};\n\n\tH.H.W = function ( N, W ) {\n\n\t\tvar R = N.length; if ( W <= R ) return N; var V = new Uint8Array( R << 1 ); V.set( N, 0 ); return V;\n\n\t};\n\n\tH.H.R = function ( N, W, R, V, n, A ) {\n\n\t\tvar l = H.H.e, M = H.H.Z, I = 0; while ( I < R ) {\n\n\t\t\tvar e = N[ M( V, n ) & W ]; n += e & 15; var b = e >>> 4;\n\t\t\tif ( b <= 15 ) {\n\n\t\t\t\tA[ I ] = b; I ++;\n\n\t\t\t} else {\n\n\t\t\t\tvar Z = 0, m = 0; if ( b == 16 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 2 ); n += 2; Z = A[ I - 1 ];\n\n\t\t\t\t} else if ( b == 17 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 3 );\n\t\t\t\t\tn += 3\n\t\t\t\t\t;\n\n\t\t\t\t} else if ( b == 18 ) {\n\n\t\t\t\t\tm = 11 + l( V, n, 7 ); n += 7;\n\n\t\t\t\t}\n\n\t\t\t\tvar J = I + m; while ( I < J ) {\n\n\t\t\t\t\tA[ I ] = Z; I ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.V = function ( N, W, R, V ) {\n\n\t\tvar n = 0, A = 0, l = V.length >>> 1;\n\t\twhile ( A < R ) {\n\n\t\t\tvar M = N[ A + W ]; V[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = M; if ( M > n )n = M; A ++;\n\n\t\t}\n\n\t\twhile ( A < l ) {\n\n\t\t\tV[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = 0; A ++;\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.n = function ( N, W ) {\n\n\t\tvar R = H.H.m, V = N.length, n, A, l, M, I, e = R.j; for ( var M = 0; M <= W; M ++ )e[ M ] = 0; for ( M = 1; M < V; M += 2 )e[ N[ M ] ] ++;\n\t\tvar b = R.K; n = 0; e[ 0 ] = 0; for ( A = 1; A <= W; A ++ ) {\n\n\t\t\tn = n + e[ A - 1 ] << 1; b[ A ] = n;\n\n\t\t}\n\n\t\tfor ( l = 0; l < V; l += 2 ) {\n\n\t\t\tI = N[ l + 1 ]; if ( I != 0 ) {\n\n\t\t\t\tN[ l ] = b[ I ];\n\t\t\t\tb[ I ] ++\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.A = function ( N, W, R ) {\n\n\t\tvar V = N.length, n = H.H.m, A = n.r; for ( var l = 0; l < V; l += 2 ) if ( N[ l + 1 ] != 0 ) {\n\n\t\t\tvar M = l >> 1, I = N[ l + 1 ], e = M << 4 | I, b = W - I, Z = N[ l ] << b, m = Z + ( 1 << b );\n\t\t\twhile ( Z != m ) {\n\n\t\t\t\tvar J = A[ Z ] >>> 15 - W; R[ J ] = e; Z ++;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.l = function ( N, W ) {\n\n\t\tvar R = H.H.m.r, V = 15 - W; for ( var n = 0; n < N.length;\n\t\t\tn += 2 ) {\n\n\t\t\tvar A = N[ n ] << W - N[ n + 1 ]; N[ n ] = R[ A ] >>> V;\n\n\t\t}\n\n\t};\n\n\tH.H.M = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8;\n\n\t};\n\n\tH.H.I = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8; N[ V + 2 ] |= R >>> 16;\n\n\t};\n\n\tH.H.e = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.b = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.Z = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.i = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 | N[ ( W >>> 3 ) + 3 ] << 24 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.m = function () {\n\n\t\tvar N = Uint16Array, W = Uint32Array;\n\t\treturn { K: new N( 16 ), j: new N( 16 ), X: [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], S: [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999 ], T: [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0 ], q: new N( 32 ), p: [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535 ], z: [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0 ], c: new W( 32 ), J: new N( 512 ), _: [], h: new N( 32 ), $: [], w: new N( 32768 ), C: [], v: [], d: new N( 32768 ), D: [], u: new N( 512 ), Q: [], r: new N( 1 << 15 ), s: new W( 286 ), Y: new W( 30 ), a: new W( 19 ), t: new W( 15e3 ), k: new N( 1 << 16 ), g: new N( 1 << 15 ) }\n\t\t;\n\n\t}();\n\t( function () {\n\n\t\tvar N = H.H.m, W = 1 << 15; for ( var R = 0; R < W; R ++ ) {\n\n\t\t\tvar V = R; V = ( V & 2863311530 ) >>> 1 | ( V & 1431655765 ) << 1;\n\t\t\tV = ( V & 3435973836 ) >>> 2 | ( V & 858993459 ) << 2; V = ( V & 4042322160 ) >>> 4 | ( V & 252645135 ) << 4; V = ( V & 4278255360 ) >>> 8 | ( V & 16711935 ) << 8;\n\t\t\tN.r[ R ] = ( V >>> 16 | V << 16 ) >>> 17\n\t\t\t;\n\n\t\t}\n\n\t\tfunction n( A, l, M ) {\n\n\t\t\twhile ( l -- != 0 )A.push( 0, M )\n\t\t\t;\n\n\t\t}\n\n\t\tfor ( var R = 0; R < 32; R ++ ) {\n\n\t\t\tN.q[ R ] = N.S[ R ] << 3 | N.T[ R ];\n\t\t\tN.c[ R ] = N.p[ R ] << 4 | N.z[ R ]\n\t\t\t;\n\n\t\t}\n\n\t\tn( N._, 144, 8 ); n( N._, 255 - 143, 9 ); n( N._, 279 - 255, 7 ); n( N._, 287 - 279, 8 ); H.H.n( N._, 9 );\n\t\tH.H.A( N._, 9, N.J ); H.H.l( N._, 9 ); n( N.$, 32, 5 ); H.H.n( N.$, 5 ); H.H.A( N.$, 5, N.h ); H.H.l( N.$, 5 ); n( N.Q, 19, 0 ); n( N.C, 286, 0 );\n\t\tn( N.D, 30, 0 ); n( N.v, 320, 0 )\n\t\t;\n\n\t}() );\n\n\treturn H.H.N\n\t;\n\n}();\n\n\nUPNG.decode._readInterlace = function ( data, out ) {\n\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP( out ), cbpp = bpp >> 3, bpl = Math.ceil( w * bpp / 8 );\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass = 0;\n\twhile ( pass < 7 ) {\n\n\t\tvar ri = row_increment[ pass ], ci = col_increment[ pass ];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[ pass ]; while ( cr < h ) {\n\n\t\t\tcr += ri; sh ++;\n\n\t\t}\n\n\t\tvar cc = starting_col[ pass ]; while ( cc < w ) {\n\n\t\t\tcc += ci; sw ++;\n\n\t\t}\n\n\t\tvar bpll = Math.ceil( sw * bpp / 8 );\n\t\tUPNG.decode._filterZero( data, out, di, sw, sh );\n\n\t\tvar y = 0, row = starting_row[ pass ];\n\t\tvar val;\n\n\t\twhile ( row < h ) {\n\n\t\t\tvar col = starting_col[ pass ];\n\t\t\tvar cdi = ( di + y * bpll ) << 3;\n\n\t\t\twhile ( col < w ) {\n\n\t\t\t\tif ( bpp == 1 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 7 - ( cdi & 7 ) ) ) & 1;\n\t\t\t\t\timg[ row * bpl + ( col >> 3 ) ] |= ( val << ( 7 - ( ( col & 7 ) << 0 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 2 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 6 - ( cdi & 7 ) ) ) & 3;\n\t\t\t\t\timg[ row * bpl + ( col >> 2 ) ] |= ( val << ( 6 - ( ( col & 3 ) << 1 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 4 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 4 - ( cdi & 7 ) ) ) & 15;\n\t\t\t\t\timg[ row * bpl + ( col >> 1 ) ] |= ( val << ( 4 - ( ( col & 1 ) << 2 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp >= 8 ) {\n\n\t\t\t\t\tvar ii = row * bpl + col * cbpp;\n\t\t\t\t\tfor ( var j = 0; j < cbpp; j ++ ) img[ ii + j ] = data[ ( cdi >> 3 ) + j ];\n\n\t\t\t\t}\n\n\t\t\t\tcdi += bpp; col += ci;\n\n\t\t\t}\n\n\t\t\ty ++; row += ri;\n\n\t\t}\n\n\t\tif ( sw * sh != 0 ) di += sh * ( 1 + bpll );\n\t\tpass = pass + 1;\n\n\t}\n\n\treturn img;\n\n};\n\nUPNG.decode._getBPP = function ( out ) {\n\n\tvar noc = [ 1, null, 3, 1, 2, null, 4 ][ out.ctype ];\n\treturn noc * out.depth;\n\n};\n\nUPNG.decode._filterZero = function ( data, out, off, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil( bpp / 8 );\n\n\tvar i, di, type = data[ off ], x = 0;\n\n\tif ( type > 1 ) data[ off ] = [ 0, 0, 1 ][ type - 2 ];\n\tif ( type == 3 ) for ( x = bpp; x < bpl; x ++ ) data[ x + 1 ] = ( data[ x + 1 ] + ( data[ x + 1 - bpp ] >>> 1 ) ) & 255;\n\n\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\ti = off + y * bpl; di = i + y + 1;\n\t\ttype = data[ di - 1 ]; x = 0;\n\n\t\tif ( type == 0 ) for ( ; x < bpl; x ++ ) data[ i + x ] = data[ di + x ];\n\t\telse if ( type == 1 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = data[ di + x ];\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpp ] );\n\n\t\t} else if ( type == 2 ) {\n\n\t\t\tfor ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpl ] );\n\n\t\t} else if ( type == 3 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + ( data[ i + x - bpl ] >>> 1 ) );\n\t\t\t               for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + ( ( data[ i + x - bpl ] + data[ i + x - bpp ] ) >>> 1 ) );\n\n\t\t} else {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( 0, data[ i + x - bpl ], 0 ) );\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( data[ i + x - bpp ], data[ i + x - bpl ], data[ i + x - bpp - bpl ] ) );\n\n\t\t}\n\n\t}\n\n\treturn data;\n\n};\n\nUPNG.decode._paeth = function ( a, b, c ) {\n\n\tvar p = a + b - c, pa = ( p - a ), pb = ( p - b ), pc = ( p - c );\n\tif ( pa * pa <= pb * pb && pa * pa <= pc * pc ) return a;\n\telse if ( pb * pb <= pc * pc ) return b;\n\treturn c;\n\n};\n\nUPNG.decode._IHDR = function ( data, offset, out ) {\n\n\tvar bin = UPNG._bin;\n\tout.width = bin.readUint( data, offset ); offset += 4;\n\tout.height = bin.readUint( data, offset ); offset += 4;\n\tout.depth = data[ offset ]; offset ++;\n\tout.ctype = data[ offset ]; offset ++;\n\tout.compress = data[ offset ]; offset ++;\n\tout.filter = data[ offset ]; offset ++;\n\tout.interlace = data[ offset ]; offset ++;\n\n};\n\nUPNG._bin = {\n\tnextZero: function ( data, p ) {\n\n\t\twhile ( data[ p ] != 0 ) p ++; return p;\n\n\t},\n\treadUshort: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] << 8 ) | buff[ p + 1 ];\n\n\t},\n\twriteUshort: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 8 ) & 255; buff[ p + 1 ] = n & 255;\n\n\t},\n\treadUint: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] * ( 256 * 256 * 256 ) ) + ( ( buff[ p + 1 ] << 16 ) | ( buff[ p + 2 ] << 8 ) | buff[ p + 3 ] );\n\n\t},\n\twriteUint: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 24 ) & 255; buff[ p + 1 ] = ( n >> 16 ) & 255; buff[ p + 2 ] = ( n >> 8 ) & 255; buff[ p + 3 ] = n & 255;\n\n\t},\n\treadASCII: function ( buff, p, l ) {\n\n\t\tvar s = ''; for ( var i = 0; i < l; i ++ ) s += String.fromCharCode( buff[ p + i ] ); return s;\n\n\t},\n\twriteASCII: function ( data, p, s ) {\n\n\t\tfor ( var i = 0; i < s.length; i ++ ) data[ p + i ] = s.charCodeAt( i );\n\n\t},\n\treadBytes: function ( buff, p, l ) {\n\n\t\tvar arr = []; for ( var i = 0; i < l; i ++ ) arr.push( buff[ p + i ] ); return arr;\n\n\t},\n\tpad: function ( n ) {\n\n\t\treturn n.length < 2 ? '0' + n : n;\n\n\t},\n\treadUTF8: function ( buff, p, l ) {\n\n\t\tvar s = '', ns;\n\t\tfor ( var i = 0; i < l; i ++ ) s += '%' + UPNG._bin.pad( buff[ p + i ].toString( 16 ) );\n\t\ttry {\n\n\t\t\tns = decodeURIComponent( s );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn UPNG._bin.readASCII( buff, p, l );\n\n\t\t}\n\n\t\treturn ns;\n\n\t}\n};\nUPNG._copyTile = function ( sb, sw, sh, tb, tw, th, xoff, yoff, mode ) {\n\n\tvar w = Math.min( sw, tw ), h = Math.min( sh, th );\n\tvar si = 0, ti = 0;\n\tfor ( var y = 0; y < h; y ++ )\n\t\tfor ( var x = 0; x < w; x ++ ) {\n\n\t\t\tif ( xoff >= 0 && yoff >= 0 ) {\n\n\t\t\t\tsi = ( y * sw + x ) << 2; ti = ( ( yoff + y ) * tw + xoff + x ) << 2;\n\n\t\t\t} else {\n\n\t\t\t\tsi = ( ( - yoff + y ) * sw - xoff + x ) << 2; ti = ( y * tw + x ) << 2;\n\n\t\t\t}\n\n\t\t\tif ( mode == 0 ) {\n\n\t\t\t\ttb[ ti ] = sb[ si ]; tb[ ti + 1 ] = sb[ si + 1 ]; tb[ ti + 2 ] = sb[ si + 2 ]; tb[ ti + 3 ] = sb[ si + 3 ];\n\n\t\t\t} else if ( mode == 1 ) {\n\n\t\t\t\tvar fa = sb[ si + 3 ] * ( 1 / 255 ), fr = sb[ si ] * fa, fg = sb[ si + 1 ] * fa, fb = sb[ si + 2 ] * fa;\n\t\t\t\tvar ba = tb[ ti + 3 ] * ( 1 / 255 ), br = tb[ ti ] * ba, bg = tb[ ti + 1 ] * ba, bb = tb[ ti + 2 ] * ba;\n\n\t\t\t\tvar ifa = 1 - fa, oa = fa + ba * ifa, ioa = ( oa == 0 ? 0 : 1 / oa );\n\t\t\t\ttb[ ti + 3 ] = 255 * oa;\n\t\t\t\ttb[ ti + 0 ] = ( fr + br * ifa ) * ioa;\n\t\t\t\ttb[ ti + 1 ] = ( fg + bg * ifa ) * ioa;\n\t\t\t\ttb[ ti + 2 ] = ( fb + bb * ifa ) * ioa;\n\n\t\t\t} else if ( mode == 2 ) {\t// copy only differences, otherwise zero\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) {\n\n\t\t\t\t\ttb[ ti ] = 0; tb[ ti + 1 ] = 0; tb[ ti + 2 ] = 0; tb[ ti + 3 ] = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttb[ ti ] = fr; tb[ ti + 1 ] = fg; tb[ ti + 2 ] = fb; tb[ ti + 3 ] = fa;\n\n\t\t\t\t}\n\n\t\t\t} else if ( mode == 3 ) {\t// check if can be blended\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif ( fa < 220 && ba > 20 ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\treturn true;\n\n};\n\nexport { RGBMLoader };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}