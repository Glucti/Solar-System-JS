{"ast":null,"code":"/**\n * @module BlendShader\n * @three_import import { BlendShader } from 'three/addons/shaders/BlendShader.js';\n */\n\n/**\n * Blends two textures.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst BlendShader = {\n  name: 'BlendShader',\n  uniforms: {\n    'tDiffuse1': {\n      value: null\n    },\n    'tDiffuse2': {\n      value: null\n    },\n    'mixRatio': {\n      value: 0.5\n    },\n    'opacity': {\n      value: 1.0\n    }\n  },\n  vertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\t\tuniform float mixRatio;\n\n\t\tuniform sampler2D tDiffuse1;\n\t\tuniform sampler2D tDiffuse2;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel1 = texture2D( tDiffuse1, vUv );\n\t\t\tvec4 texel2 = texture2D( tDiffuse2, vUv );\n\t\t\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n\n\t\t}`\n};\nexport { BlendShader };","map":{"version":3,"names":["BlendShader","name","uniforms","value","vertexShader","fragmentShader"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/shaders/BlendShader.js"],"sourcesContent":["/**\n * @module BlendShader\n * @three_import import { BlendShader } from 'three/addons/shaders/BlendShader.js';\n */\n\n/**\n * Blends two textures.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst BlendShader = {\n\n\tname: 'BlendShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse1': { value: null },\n\t\t'tDiffuse2': { value: null },\n\t\t'mixRatio': { value: 0.5 },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\t\tuniform float mixRatio;\n\n\t\tuniform sampler2D tDiffuse1;\n\t\tuniform sampler2D tDiffuse2;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel1 = texture2D( tDiffuse1, vUv );\n\t\t\tvec4 texel2 = texture2D( tDiffuse2, vUv );\n\t\t\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n\n\t\t}`\n\n};\n\nexport { BlendShader };\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG;EAEnBC,IAAI,EAAE,aAAa;EAEnBC,QAAQ,EAAE;IAET,WAAW,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IAC5B,WAAW,EAAE;MAAEA,KAAK,EAAE;IAAK,CAAC;IAC5B,UAAU,EAAE;MAAEA,KAAK,EAAE;IAAI,CAAC;IAC1B,SAAS,EAAE;MAAEA,KAAK,EAAE;IAAI;EAEzB,CAAC;EAEDC,YAAY,EAAE,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAEHC,cAAc,EAAE,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC;AAED,SAASL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}