{"ast":null,"code":"import { DynamicDrawUsage, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, Matrix4, Vector3 } from 'three';\nconst _matrix = new Matrix4();\nconst _vector = new Vector3();\n\n/**\n * Represents one of the hand model types {@link XRHandModelFactory} might produce\n * depending on the selected profile. `XRHandPrimitiveModel` represents a hand\n * with sphere or box primitives according to the selected `primitive` option.\n *\n * @three_import import { XRHandPrimitiveModel } from 'three/addons/webxr/XRHandPrimitiveModel.js';\n */\nclass XRHandPrimitiveModel {\n  /**\n   * Constructs a new XR hand primitive model.\n   *\n   * @param {XRHandModel} handModel - The hand model.\n   * @param {Group} controller - The WebXR controller.\n   * @param {string} path - The model path.\n   * @param {XRHandedness} handedness - The handedness of the XR input source.\n   * @param {XRHandPrimitiveModel~Options} options - The model options.\n   */\n  constructor(handModel, controller, path, handedness, options) {\n    /**\n     * The WebXR controller.\n     *\n     * @type {Group}\n     */\n    this.controller = controller;\n\n    /**\n     * The hand model.\n     *\n     * @type {XRHandModel}\n     */\n    this.handModel = handModel;\n\n    /**\n     * The model's environment map.\n     *\n     * @type {?Texture}\n     * @default null\n     */\n    this.envMap = null;\n    let geometry;\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.frustumCulled = false;\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  /**\n   * Updates the mesh based on the tracked XR joints data.\n   */\n  updateMesh() {\n    const defaultRadius = 0.008;\n    const joints = this.controller.joints;\n    let count = 0;\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n}\n\n/**\n * Constructor options of `XRHandPrimitiveModel`.\n *\n * @typedef {Object} XRHandPrimitiveModel~Options\n * @property {('box'|'sphere')} [primitive] - The primitive type.\n **/\n\nexport { XRHandPrimitiveModel };","map":{"version":3,"names":["DynamicDrawUsage","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","Matrix4","Vector3","_matrix","_vector","XRHandPrimitiveModel","constructor","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","frustumCulled","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","updateMesh","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/webxr/XRHandPrimitiveModel.js"],"sourcesContent":["import {\n\tDynamicDrawUsage,\n\tSphereGeometry,\n\tBoxGeometry,\n\tMeshStandardMaterial,\n\tInstancedMesh,\n\tMatrix4,\n\tVector3\n} from 'three';\n\nconst _matrix = new Matrix4();\nconst _vector = new Vector3();\n\n/**\n * Represents one of the hand model types {@link XRHandModelFactory} might produce\n * depending on the selected profile. `XRHandPrimitiveModel` represents a hand\n * with sphere or box primitives according to the selected `primitive` option.\n *\n * @three_import import { XRHandPrimitiveModel } from 'three/addons/webxr/XRHandPrimitiveModel.js';\n */\nclass XRHandPrimitiveModel {\n\n\t/**\n\t * Constructs a new XR hand primitive model.\n\t *\n\t * @param {XRHandModel} handModel - The hand model.\n\t * @param {Group} controller - The WebXR controller.\n\t * @param {string} path - The model path.\n\t * @param {XRHandedness} handedness - The handedness of the XR input source.\n\t * @param {XRHandPrimitiveModel~Options} options - The model options.\n\t */\n\tconstructor( handModel, controller, path, handedness, options ) {\n\n\t\t/**\n\t\t * The WebXR controller.\n\t\t *\n\t\t * @type {Group}\n\t\t */\n\t\tthis.controller = controller;\n\n\t\t/**\n\t\t * The hand model.\n\t\t *\n\t\t * @type {XRHandModel}\n\t\t */\n\t\tthis.handModel = handModel;\n\n\t\t/**\n\t\t * The model's environment map.\n\t\t *\n\t\t * @type {?Texture}\n\t\t * @default null\n\t\t */\n\t\tthis.envMap = null;\n\n\t\tlet geometry;\n\n\t\tif ( ! options || ! options.primitive || options.primitive === 'sphere' ) {\n\n\t\t\tgeometry = new SphereGeometry( 1, 10, 10 );\n\n\t\t} else if ( options.primitive === 'box' ) {\n\n\t\t\tgeometry = new BoxGeometry( 1, 1, 1 );\n\n\t\t}\n\n\t\tconst material = new MeshStandardMaterial();\n\n\t\tthis.handMesh = new InstancedMesh( geometry, material, 30 );\n\t\tthis.handMesh.frustumCulled = false;\n\t\tthis.handMesh.instanceMatrix.setUsage( DynamicDrawUsage ); // will be updated every frame\n\t\tthis.handMesh.castShadow = true;\n\t\tthis.handMesh.receiveShadow = true;\n\t\tthis.handModel.add( this.handMesh );\n\n\t\tthis.joints = [\n\t\t\t'wrist',\n\t\t\t'thumb-metacarpal',\n\t\t\t'thumb-phalanx-proximal',\n\t\t\t'thumb-phalanx-distal',\n\t\t\t'thumb-tip',\n\t\t\t'index-finger-metacarpal',\n\t\t\t'index-finger-phalanx-proximal',\n\t\t\t'index-finger-phalanx-intermediate',\n\t\t\t'index-finger-phalanx-distal',\n\t\t\t'index-finger-tip',\n\t\t\t'middle-finger-metacarpal',\n\t\t\t'middle-finger-phalanx-proximal',\n\t\t\t'middle-finger-phalanx-intermediate',\n\t\t\t'middle-finger-phalanx-distal',\n\t\t\t'middle-finger-tip',\n\t\t\t'ring-finger-metacarpal',\n\t\t\t'ring-finger-phalanx-proximal',\n\t\t\t'ring-finger-phalanx-intermediate',\n\t\t\t'ring-finger-phalanx-distal',\n\t\t\t'ring-finger-tip',\n\t\t\t'pinky-finger-metacarpal',\n\t\t\t'pinky-finger-phalanx-proximal',\n\t\t\t'pinky-finger-phalanx-intermediate',\n\t\t\t'pinky-finger-phalanx-distal',\n\t\t\t'pinky-finger-tip'\n\t\t];\n\n\t}\n\n\t/**\n\t * Updates the mesh based on the tracked XR joints data.\n\t */\n\tupdateMesh() {\n\n\t\tconst defaultRadius = 0.008;\n\t\tconst joints = this.controller.joints;\n\n\t\tlet count = 0;\n\n\t\tfor ( let i = 0; i < this.joints.length; i ++ ) {\n\n\t\t\tconst joint = joints[ this.joints[ i ] ];\n\n\t\t\tif ( joint.visible ) {\n\n\t\t\t\t_vector.setScalar( joint.jointRadius || defaultRadius );\n\t\t\t\t_matrix.compose( joint.position, joint.quaternion, _vector );\n\t\t\t\tthis.handMesh.setMatrixAt( i, _matrix );\n\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.handMesh.count = count;\n\t\tthis.handMesh.instanceMatrix.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Constructor options of `XRHandPrimitiveModel`.\n *\n * @typedef {Object} XRHandPrimitiveModel~Options\n * @property {('box'|'sphere')} [primitive] - The primitive type.\n **/\n\nexport { XRHandPrimitiveModel };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}