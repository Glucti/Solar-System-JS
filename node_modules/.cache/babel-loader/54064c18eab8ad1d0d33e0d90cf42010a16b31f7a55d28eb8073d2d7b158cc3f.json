{"ast":null,"code":"import { Color } from 'three';\n\n/**\n * @module ColorifyShader\n * @three_import import { ColorifyShader } from 'three/addons/shaders/ColorifyShader.js';\n */\n\n/**\n * Colorify shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst ColorifyShader = {\n  name: 'ColorifyShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'color': {\n      value: new Color(0xffffff)\n    }\n  },\n  vertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader: /* glsl */`\n\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tgl_FragColor = vec4( v * color, texel.w );\n\n\t\t}`\n};\nexport { ColorifyShader };","map":{"version":3,"names":["Color","ColorifyShader","name","uniforms","value","vertexShader","fragmentShader"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/shaders/ColorifyShader.js"],"sourcesContent":["import {\n\tColor\n} from 'three';\n\n/**\n * @module ColorifyShader\n * @three_import import { ColorifyShader } from 'three/addons/shaders/ColorifyShader.js';\n */\n\n/**\n * Colorify shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst ColorifyShader = {\n\n\tname: 'ColorifyShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'color': { value: new Color( 0xffffff ) }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tgl_FragColor = vec4( v * color, texel.w );\n\n\t\t}`\n\n};\n\nexport { ColorifyShader };\n"],"mappings":"AAAA,SACCA,KAAK,QACC,OAAO;;AAEd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG;EAEtBC,IAAI,EAAE,gBAAgB;EAEtBC,QAAQ,EAAE;IAET,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IAC3B,OAAO,EAAE;MAAEA,KAAK,EAAE,IAAIJ,KAAK,CAAE,QAAS;IAAE;EAEzC,CAAC;EAEDK,YAAY,EAAE,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAEHC,cAAc,EAAE,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC;AAED,SAASL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}