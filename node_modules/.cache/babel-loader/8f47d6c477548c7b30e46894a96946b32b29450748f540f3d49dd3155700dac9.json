{"ast":null,"code":"const t = 0,\n  e = 1,\n  n = 2,\n  i = 3,\n  s = 0,\n  a = 0,\n  r = 2,\n  o = 0,\n  l = 1,\n  f = 160,\n  h = 161,\n  U = 162,\n  c = 163,\n  _ = 166,\n  p = 0,\n  g = 1,\n  y = 0,\n  x = 1,\n  u = 2,\n  b = 3,\n  d = 4,\n  w = 5,\n  m = 6,\n  D = 7,\n  B = 8,\n  L = 9,\n  v = 10,\n  A = 11,\n  k = 12,\n  V = 13,\n  I = 14,\n  S = 15,\n  F = 16,\n  O = 17,\n  E = 18,\n  T = 0,\n  C = 1,\n  M = 2,\n  P = 3,\n  z = 4,\n  W = 5,\n  H = 6,\n  N = 7,\n  K = 8,\n  X = 9,\n  R = 10,\n  Y = 11,\n  j = 0,\n  q = 1,\n  G = 2,\n  J = 13,\n  Q = 14,\n  Z = 15,\n  $ = 128,\n  tt = 64,\n  et = 32,\n  nt = 16,\n  it = 0,\n  st = 1,\n  at = 2,\n  rt = 3,\n  ot = 4,\n  lt = 5,\n  ft = 6,\n  ht = 7,\n  Ut = 8,\n  ct = 9,\n  _t = 10,\n  pt = 13,\n  gt = 14,\n  yt = 15,\n  xt = 16,\n  ut = 17,\n  bt = 20,\n  dt = 21,\n  wt = 22,\n  mt = 23,\n  Dt = 24,\n  Bt = 27,\n  Lt = 28,\n  vt = 29,\n  At = 30,\n  kt = 31,\n  Vt = 34,\n  It = 35,\n  St = 36,\n  Ft = 37,\n  Ot = 38,\n  Et = 41,\n  Tt = 42,\n  Ct = 43,\n  Mt = 44,\n  Pt = 45,\n  zt = 48,\n  Wt = 49,\n  Ht = 50,\n  Nt = 58,\n  Kt = 59,\n  Xt = 62,\n  Rt = 63,\n  Yt = 64,\n  jt = 65,\n  qt = 68,\n  Gt = 69,\n  Jt = 70,\n  Qt = 71,\n  Zt = 74,\n  $t = 75,\n  te = 76,\n  ee = 77,\n  ne = 78,\n  ie = 81,\n  se = 82,\n  ae = 83,\n  re = 84,\n  oe = 85,\n  le = 88,\n  fe = 89,\n  he = 90,\n  Ue = 91,\n  ce = 92,\n  _e = 95,\n  pe = 96,\n  ge = 97,\n  ye = 98,\n  xe = 99,\n  ue = 100,\n  be = 101,\n  de = 102,\n  we = 103,\n  me = 104,\n  De = 105,\n  Be = 106,\n  Le = 107,\n  ve = 108,\n  Ae = 109,\n  ke = 110,\n  Ve = 111,\n  Ie = 112,\n  Se = 113,\n  Fe = 114,\n  Oe = 115,\n  Ee = 116,\n  Te = 117,\n  Ce = 118,\n  Me = 119,\n  Pe = 120,\n  ze = 121,\n  We = 122,\n  He = 123,\n  Ne = 124,\n  Ke = 125,\n  Xe = 126,\n  Re = 127,\n  Ye = 128,\n  je = 129,\n  qe = 130,\n  Ge = 131,\n  Je = 132,\n  Qe = 133,\n  Ze = 134,\n  $e = 135,\n  tn = 136,\n  en = 137,\n  nn = 138,\n  sn = 139,\n  an = 140,\n  rn = 141,\n  on = 142,\n  ln = 143,\n  fn = 144,\n  hn = 145,\n  Un = 146,\n  cn = 147,\n  _n = 148,\n  pn = 149,\n  gn = 150,\n  yn = 151,\n  xn = 152,\n  un = 153,\n  bn = 154,\n  dn = 155,\n  wn = 156,\n  mn = 157,\n  Dn = 158,\n  Bn = 159,\n  Ln = 160,\n  vn = 161,\n  An = 162,\n  kn = 163,\n  Vn = 164,\n  In = 165,\n  Sn = 166,\n  Fn = 167,\n  On = 168,\n  En = 169,\n  Tn = 170,\n  Cn = 171,\n  Mn = 172,\n  Pn = 173,\n  zn = 174,\n  Wn = 175,\n  Hn = 176,\n  Nn = 177,\n  Kn = 178,\n  Xn = 179,\n  Rn = 180,\n  Yn = 181,\n  jn = 182,\n  qn = 183,\n  Gn = 184,\n  Jn = 1000156007,\n  Qn = 1000156008,\n  Zn = 1000156009,\n  $n = 1000156010,\n  ti = 1000156011,\n  ei = 1000156017,\n  ni = 1000156018,\n  ii = 1000156019,\n  si = 1000156020,\n  ai = 1000156021,\n  ri = 1000054e3,\n  oi = 1000054001,\n  li = 1000054002,\n  fi = 1000054003,\n  hi = 1000054004,\n  Ui = 1000054005,\n  ci = 1000054006,\n  _i = 1000054007,\n  pi = 1000066e3,\n  gi = 1000066001,\n  yi = 1000066002,\n  xi = 1000066003,\n  ui = 1000066004,\n  bi = 1000066005,\n  di = 1000066006,\n  wi = 1000066007,\n  mi = 1000066008,\n  Di = 1000066009,\n  Bi = 1000066010,\n  Li = 1000066011,\n  vi = 1000066012,\n  Ai = 1000066013,\n  ki = 100034e4,\n  Vi = 1000340001;\nclass Ii {\n  constructor() {\n    this.vkFormat = 0, this.typeSize = 1, this.pixelWidth = 0, this.pixelHeight = 0, this.pixelDepth = 0, this.layerCount = 0, this.faceCount = 1, this.supercompressionScheme = 0, this.levels = [], this.dataFormatDescriptor = [{\n      vendorId: 0,\n      descriptorType: 0,\n      descriptorBlockSize: 0,\n      versionNumber: 2,\n      colorModel: 0,\n      colorPrimaries: 1,\n      transferFunction: 2,\n      flags: 0,\n      texelBlockDimension: [0, 0, 0, 0],\n      bytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n      samples: []\n    }], this.keyValue = {}, this.globalData = null;\n  }\n}\nclass Si {\n  constructor(t, e, n, i) {\n    this._dataView = void 0, this._littleEndian = void 0, this._offset = void 0, this._dataView = new DataView(t.buffer, t.byteOffset + e, n), this._littleEndian = i, this._offset = 0;\n  }\n  _nextUint8() {\n    const t = this._dataView.getUint8(this._offset);\n    return this._offset += 1, t;\n  }\n  _nextUint16() {\n    const t = this._dataView.getUint16(this._offset, this._littleEndian);\n    return this._offset += 2, t;\n  }\n  _nextUint32() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _nextUint64() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian) + 2 ** 32 * this._dataView.getUint32(this._offset + 4, this._littleEndian);\n    return this._offset += 8, t;\n  }\n  _nextInt32() {\n    const t = this._dataView.getInt32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _nextUint8Array(t) {\n    const e = new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + this._offset, t);\n    return this._offset += t, e;\n  }\n  _skip(t) {\n    return this._offset += t, this;\n  }\n  _scan(t, e) {\n    void 0 === e && (e = 0);\n    const n = this._offset;\n    let i = 0;\n    for (; this._dataView.getUint8(this._offset) !== e && i < t;) i++, this._offset++;\n    return i < t && this._offset++, new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + n, i);\n  }\n}\nconst Fi = new Uint8Array([0]),\n  Oi = [171, 75, 84, 88, 32, 50, 48, 187, 13, 10, 26, 10];\nfunction Ei(t) {\n  return new TextEncoder().encode(t);\n}\nfunction Ti(t) {\n  return new TextDecoder().decode(t);\n}\nfunction Ci(t) {\n  let e = 0;\n  for (const n of t) e += n.byteLength;\n  const n = new Uint8Array(e);\n  let i = 0;\n  for (const e of t) n.set(new Uint8Array(e), i), i += e.byteLength;\n  return n;\n}\nfunction Mi(t, e) {\n  return void 0 === e && (e = 4), Math.ceil(t / e) * e - t;\n}\nfunction Pi(t) {\n  const e = new Uint8Array(t.buffer, t.byteOffset, Oi.length);\n  if (e[0] !== Oi[0] || e[1] !== Oi[1] || e[2] !== Oi[2] || e[3] !== Oi[3] || e[4] !== Oi[4] || e[5] !== Oi[5] || e[6] !== Oi[6] || e[7] !== Oi[7] || e[8] !== Oi[8] || e[9] !== Oi[9] || e[10] !== Oi[10] || e[11] !== Oi[11]) throw new Error(\"Missing KTX 2.0 identifier.\");\n  const n = new Ii(),\n    i = 17 * Uint32Array.BYTES_PER_ELEMENT,\n    s = new Si(t, Oi.length, i, !0);\n  n.vkFormat = s._nextUint32(), n.typeSize = s._nextUint32(), n.pixelWidth = s._nextUint32(), n.pixelHeight = s._nextUint32(), n.pixelDepth = s._nextUint32(), n.layerCount = s._nextUint32(), n.faceCount = s._nextUint32();\n  const a = s._nextUint32();\n  n.supercompressionScheme = s._nextUint32();\n  const r = s._nextUint32(),\n    o = s._nextUint32(),\n    l = s._nextUint32(),\n    f = s._nextUint32(),\n    h = s._nextUint64(),\n    U = s._nextUint64(),\n    c = new Si(t, Oi.length + i, 3 * a * 8, !0);\n  for (let e = 0; e < a; e++) n.levels.push({\n    levelData: new Uint8Array(t.buffer, t.byteOffset + c._nextUint64(), c._nextUint64()),\n    uncompressedByteLength: c._nextUint64()\n  });\n  const _ = new Si(t, r, o, !0),\n    p = {\n      vendorId: _._skip(4)._nextUint16(),\n      descriptorType: _._nextUint16(),\n      versionNumber: _._nextUint16(),\n      descriptorBlockSize: _._nextUint16(),\n      colorModel: _._nextUint8(),\n      colorPrimaries: _._nextUint8(),\n      transferFunction: _._nextUint8(),\n      flags: _._nextUint8(),\n      texelBlockDimension: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      bytesPlane: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      samples: []\n    },\n    g = (p.descriptorBlockSize / 4 - 6) / 4;\n  for (let t = 0; t < g; t++) {\n    const e = {\n      bitOffset: _._nextUint16(),\n      bitLength: _._nextUint8(),\n      channelType: _._nextUint8(),\n      samplePosition: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      sampleLower: -Infinity,\n      sampleUpper: Infinity\n    };\n    64 & e.channelType ? (e.sampleLower = _._nextInt32(), e.sampleUpper = _._nextInt32()) : (e.sampleLower = _._nextUint32(), e.sampleUpper = _._nextUint32()), p.samples[t] = e;\n  }\n  n.dataFormatDescriptor.length = 0, n.dataFormatDescriptor.push(p);\n  const y = new Si(t, l, f, !0);\n  for (; y._offset < f;) {\n    const t = y._nextUint32(),\n      e = y._scan(t),\n      i = Ti(e);\n    if (n.keyValue[i] = y._nextUint8Array(t - e.byteLength - 1), i.match(/^ktx/i)) {\n      const t = Ti(n.keyValue[i]);\n      n.keyValue[i] = t.substring(0, t.lastIndexOf(\"\\0\"));\n    }\n    y._skip(t % 4 ? 4 - t % 4 : 0);\n  }\n  if (U <= 0) return n;\n  const x = new Si(t, h, U, !0),\n    u = x._nextUint16(),\n    b = x._nextUint16(),\n    d = x._nextUint32(),\n    w = x._nextUint32(),\n    m = x._nextUint32(),\n    D = x._nextUint32(),\n    B = [];\n  for (let t = 0; t < a; t++) B.push({\n    imageFlags: x._nextUint32(),\n    rgbSliceByteOffset: x._nextUint32(),\n    rgbSliceByteLength: x._nextUint32(),\n    alphaSliceByteOffset: x._nextUint32(),\n    alphaSliceByteLength: x._nextUint32()\n  });\n  const L = h + x._offset,\n    v = L + d,\n    A = v + w,\n    k = A + m,\n    V = new Uint8Array(t.buffer, t.byteOffset + L, d),\n    I = new Uint8Array(t.buffer, t.byteOffset + v, w),\n    S = new Uint8Array(t.buffer, t.byteOffset + A, m),\n    F = new Uint8Array(t.buffer, t.byteOffset + k, D);\n  return n.globalData = {\n    endpointCount: u,\n    selectorCount: b,\n    imageDescs: B,\n    endpointsData: V,\n    selectorsData: I,\n    tablesData: S,\n    extendedData: F\n  }, n;\n}\nconst zi = {\n  keepWriter: !1\n};\nfunction Wi(t, e) {\n  void 0 === e && (e = {}), e = {\n    ...zi,\n    ...e\n  };\n  let n = new ArrayBuffer(0);\n  if (t.globalData) {\n    const e = new ArrayBuffer(20 + 5 * t.globalData.imageDescs.length * 4),\n      i = new DataView(e);\n    i.setUint16(0, t.globalData.endpointCount, !0), i.setUint16(2, t.globalData.selectorCount, !0), i.setUint32(4, t.globalData.endpointsData.byteLength, !0), i.setUint32(8, t.globalData.selectorsData.byteLength, !0), i.setUint32(12, t.globalData.tablesData.byteLength, !0), i.setUint32(16, t.globalData.extendedData.byteLength, !0);\n    for (let e = 0; e < t.globalData.imageDescs.length; e++) {\n      const n = t.globalData.imageDescs[e];\n      i.setUint32(20 + 5 * e * 4 + 0, n.imageFlags, !0), i.setUint32(20 + 5 * e * 4 + 4, n.rgbSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 8, n.rgbSliceByteLength, !0), i.setUint32(20 + 5 * e * 4 + 12, n.alphaSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 16, n.alphaSliceByteLength, !0);\n    }\n    n = Ci([e, t.globalData.endpointsData, t.globalData.selectorsData, t.globalData.tablesData, t.globalData.extendedData]);\n  }\n  const i = [];\n  let s = t.keyValue;\n  e.keepWriter || (s = {\n    ...t.keyValue,\n    KTXwriter: \"KTX-Parse v0.7.1\"\n  });\n  for (const t in s) {\n    const e = s[t],\n      n = Ei(t),\n      a = \"string\" == typeof e ? Ci([Ei(e), Fi]) : e,\n      r = n.byteLength + 1 + a.byteLength,\n      o = Mi(r, 4);\n    i.push(Ci([new Uint32Array([r]), n, Fi, a, new Uint8Array(o).fill(0)]));\n  }\n  const a = Ci(i);\n  if (1 !== t.dataFormatDescriptor.length || 0 !== t.dataFormatDescriptor[0].descriptorType) throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");\n  const r = t.dataFormatDescriptor[0],\n    o = new ArrayBuffer(28 + 16 * r.samples.length),\n    l = new DataView(o),\n    f = 24 + 16 * r.samples.length;\n  if (l.setUint32(0, o.byteLength, !0), l.setUint16(4, r.vendorId, !0), l.setUint16(6, r.descriptorType, !0), l.setUint16(8, r.versionNumber, !0), l.setUint16(10, f, !0), l.setUint8(12, r.colorModel), l.setUint8(13, r.colorPrimaries), l.setUint8(14, r.transferFunction), l.setUint8(15, r.flags), !Array.isArray(r.texelBlockDimension)) throw new Error(\"texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.\");\n  l.setUint8(16, r.texelBlockDimension[0]), l.setUint8(17, r.texelBlockDimension[1]), l.setUint8(18, r.texelBlockDimension[2]), l.setUint8(19, r.texelBlockDimension[3]);\n  for (let t = 0; t < 8; t++) l.setUint8(20 + t, r.bytesPlane[t]);\n  for (let t = 0; t < r.samples.length; t++) {\n    const e = r.samples[t],\n      n = 28 + 16 * t;\n    if (e.channelID) throw new Error(\"channelID has been renamed to channelType.\");\n    l.setUint16(n + 0, e.bitOffset, !0), l.setUint8(n + 2, e.bitLength), l.setUint8(n + 3, e.channelType), l.setUint8(n + 4, e.samplePosition[0]), l.setUint8(n + 5, e.samplePosition[1]), l.setUint8(n + 6, e.samplePosition[2]), l.setUint8(n + 7, e.samplePosition[3]), 64 & e.channelType ? (l.setInt32(n + 8, e.sampleLower, !0), l.setInt32(n + 12, e.sampleUpper, !0)) : (l.setUint32(n + 8, e.sampleLower, !0), l.setUint32(n + 12, e.sampleUpper, !0));\n  }\n  const h = Oi.length + 68 + 3 * t.levels.length * 8,\n    U = h + o.byteLength;\n  let c = n.byteLength > 0 ? U + a.byteLength : 0;\n  c % 8 && (c += 8 - c % 8);\n  const _ = [],\n    p = new DataView(new ArrayBuffer(3 * t.levels.length * 8)),\n    g = new Uint32Array(t.levels.length);\n  let y = 0;\n  0 === t.supercompressionScheme && (y = function (t, e) {\n    const n = Math.max(t, 4),\n      i = Math.min(t, 4);\n    let s = n;\n    for (; s % i != 0;) s += n;\n    return s;\n  }(function (t) {\n    return t.levels[0].levelData.byteLength / function (t, e) {\n      let n = 1;\n      const i = [t.pixelWidth, t.pixelHeight, t.pixelDepth],\n        s = function (t) {\n          const [e, n, i] = t.dataFormatDescriptor[0].texelBlockDimension;\n          return [e + 1, n + 1, i + 1];\n        }(t);\n      for (let t = 0; t < 3; t++) if (i[t] > 0) {\n        const e = Math.ceil(Math.floor(i[t] * Math.pow(2, -0)) / s[t]);\n        n *= Math.max(1, e);\n      }\n      return t.layerCount > 0 && (n *= t.layerCount), t.faceCount > 0 && (n *= t.faceCount), n;\n    }(t);\n  }(t)));\n  let x = (c || U + a.byteLength) + n.byteLength;\n  for (let e = t.levels.length - 1; e >= 0; e--) {\n    if (x % y) {\n      const t = Mi(x, y);\n      _.push(new Uint8Array(t)), x += t;\n    }\n    const n = t.levels[e];\n    _.push(n.levelData), g[e] = x, x += n.levelData.byteLength;\n  }\n  for (let e = 0; e < t.levels.length; e++) {\n    const n = t.levels[e];\n    p.setBigUint64(24 * e + 0, BigInt(g[e]), !0), p.setBigUint64(24 * e + 8, BigInt(n.levelData.byteLength), !0), p.setBigUint64(24 * e + 16, BigInt(n.uncompressedByteLength), !0);\n  }\n  const u = new ArrayBuffer(68),\n    b = new DataView(u);\n  return b.setUint32(0, t.vkFormat, !0), b.setUint32(4, t.typeSize, !0), b.setUint32(8, t.pixelWidth, !0), b.setUint32(12, t.pixelHeight, !0), b.setUint32(16, t.pixelDepth, !0), b.setUint32(20, t.layerCount, !0), b.setUint32(24, t.faceCount, !0), b.setUint32(28, t.levels.length, !0), b.setUint32(32, t.supercompressionScheme, !0), b.setUint32(36, h, !0), b.setUint32(40, o.byteLength, !0), b.setUint32(44, U, !0), b.setUint32(48, a.byteLength, !0), b.setBigUint64(52, BigInt(n.byteLength > 0 ? c : 0), !0), b.setBigUint64(60, BigInt(n.byteLength), !0), new Uint8Array(Ci([new Uint8Array(Oi).buffer, u, p.buffer, o, a, c > 0 ? new ArrayBuffer(c - (U + a.byteLength)) : new ArrayBuffer(0), n, ..._]));\n}\nexport { Z as KHR_DF_CHANNEL_RGBSDA_ALPHA, G as KHR_DF_CHANNEL_RGBSDA_BLUE, Q as KHR_DF_CHANNEL_RGBSDA_DEPTH, q as KHR_DF_CHANNEL_RGBSDA_GREEN, j as KHR_DF_CHANNEL_RGBSDA_RED, J as KHR_DF_CHANNEL_RGBSDA_STENCIL, g as KHR_DF_FLAG_ALPHA_PREMULTIPLIED, p as KHR_DF_FLAG_ALPHA_STRAIGHT, s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, U as KHR_DF_MODEL_ASTC, f as KHR_DF_MODEL_ETC1, c as KHR_DF_MODEL_ETC1S, h as KHR_DF_MODEL_ETC2, l as KHR_DF_MODEL_RGBSDA, _ as KHR_DF_MODEL_UASTC, o as KHR_DF_MODEL_UNSPECIFIED, H as KHR_DF_PRIMARIES_ACES, N as KHR_DF_PRIMARIES_ACESCC, Y as KHR_DF_PRIMARIES_ADOBERGB, z as KHR_DF_PRIMARIES_BT2020, M as KHR_DF_PRIMARIES_BT601_EBU, P as KHR_DF_PRIMARIES_BT601_SMPTE, C as KHR_DF_PRIMARIES_BT709, W as KHR_DF_PRIMARIES_CIEXYZ, R as KHR_DF_PRIMARIES_DISPLAYP3, K as KHR_DF_PRIMARIES_NTSC1953, X as KHR_DF_PRIMARIES_PAL525, T as KHR_DF_PRIMARIES_UNSPECIFIED, et as KHR_DF_SAMPLE_DATATYPE_EXPONENT, $ as KHR_DF_SAMPLE_DATATYPE_FLOAT, nt as KHR_DF_SAMPLE_DATATYPE_LINEAR, tt as KHR_DF_SAMPLE_DATATYPE_SIGNED, F as KHR_DF_TRANSFER_ACESCC, O as KHR_DF_TRANSFER_ACESCCT, E as KHR_DF_TRANSFER_ADOBERGB, D as KHR_DF_TRANSFER_BT1886, k as KHR_DF_TRANSFER_DCIP3, L as KHR_DF_TRANSFER_HLG_EOTF, B as KHR_DF_TRANSFER_HLG_OETF, b as KHR_DF_TRANSFER_ITU, x as KHR_DF_TRANSFER_LINEAR, d as KHR_DF_TRANSFER_NTSC, I as KHR_DF_TRANSFER_PAL625_EOTF, V as KHR_DF_TRANSFER_PAL_OETF, v as KHR_DF_TRANSFER_PQ_EOTF, A as KHR_DF_TRANSFER_PQ_OETF, w as KHR_DF_TRANSFER_SLOG, m as KHR_DF_TRANSFER_SLOG2, u as KHR_DF_TRANSFER_SRGB, S as KHR_DF_TRANSFER_ST240, y as KHR_DF_TRANSFER_UNSPECIFIED, a as KHR_DF_VENDORID_KHRONOS, r as KHR_DF_VERSION, e as KHR_SUPERCOMPRESSION_BASISLZ, t as KHR_SUPERCOMPRESSION_NONE, i as KHR_SUPERCOMPRESSION_ZLIB, n as KHR_SUPERCOMPRESSION_ZSTD, Ii as KTX2Container, Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16, Gt as VK_FORMAT_A2B10G10R10_SINT_PACK32, jt as VK_FORMAT_A2B10G10R10_SNORM_PACK32, qt as VK_FORMAT_A2B10G10R10_UINT_PACK32, Yt as VK_FORMAT_A2B10G10R10_UNORM_PACK32, Rt as VK_FORMAT_A2R10G10B10_SINT_PACK32, Kt as VK_FORMAT_A2R10G10B10_SNORM_PACK32, Xt as VK_FORMAT_A2R10G10B10_UINT_PACK32, Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32, Vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, Li as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, Rn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK, Xn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK, mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK, Pn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK, Di as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, Hn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK, Wn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK, Bi as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, Kn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK, Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK, vi as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, jn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK, Yn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK, Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, Gn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK, qn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK, pi as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, Dn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK, mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK, gi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, Ln as VK_FORMAT_ASTC_5x4_SRGB_BLOCK, Bn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK, yi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK, vn as VK_FORMAT_ASTC_5x5_UNORM_BLOCK, xi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, Vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK, kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK, ui as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, Sn as VK_FORMAT_ASTC_6x6_SRGB_BLOCK, In as VK_FORMAT_ASTC_6x6_UNORM_BLOCK, bi as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, On as VK_FORMAT_ASTC_8x5_SRGB_BLOCK, Fn as VK_FORMAT_ASTC_8x5_UNORM_BLOCK, di as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, Tn as VK_FORMAT_ASTC_8x6_SRGB_BLOCK, En as VK_FORMAT_ASTC_8x6_UNORM_BLOCK, wi as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, Mn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK, Cn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK, We as VK_FORMAT_B10G11R11_UFLOAT_PACK32, ti as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, ai as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, rt as VK_FORMAT_B4G4R4A4_UNORM_PACK16, ht as VK_FORMAT_B5G5R5A1_UNORM_PACK16, lt as VK_FORMAT_B5G6R5_UNORM_PACK16, Wt as VK_FORMAT_B8G8R8A8_SINT, Pt as VK_FORMAT_B8G8R8A8_SNORM, Ht as VK_FORMAT_B8G8R8A8_SRGB, zt as VK_FORMAT_B8G8R8A8_UINT, Mt as VK_FORMAT_B8G8R8A8_UNORM, It as VK_FORMAT_B8G8R8_SINT, kt as VK_FORMAT_B8G8R8_SNORM, St as VK_FORMAT_B8G8R8_SRGB, Vt as VK_FORMAT_B8G8R8_UINT, At as VK_FORMAT_B8G8R8_UNORM, Ze as VK_FORMAT_BC1_RGBA_SRGB_BLOCK, Qe as VK_FORMAT_BC1_RGBA_UNORM_BLOCK, Je as VK_FORMAT_BC1_RGB_SRGB_BLOCK, Ge as VK_FORMAT_BC1_RGB_UNORM_BLOCK, tn as VK_FORMAT_BC2_SRGB_BLOCK, $e as VK_FORMAT_BC2_UNORM_BLOCK, nn as VK_FORMAT_BC3_SRGB_BLOCK, en as VK_FORMAT_BC3_UNORM_BLOCK, an as VK_FORMAT_BC4_SNORM_BLOCK, sn as VK_FORMAT_BC4_UNORM_BLOCK, on as VK_FORMAT_BC5_SNORM_BLOCK, rn as VK_FORMAT_BC5_UNORM_BLOCK, fn as VK_FORMAT_BC6H_SFLOAT_BLOCK, ln as VK_FORMAT_BC6H_UFLOAT_BLOCK, Un as VK_FORMAT_BC7_SRGB_BLOCK, hn as VK_FORMAT_BC7_UNORM_BLOCK, Ne as VK_FORMAT_D16_UNORM, Ye as VK_FORMAT_D16_UNORM_S8_UINT, je as VK_FORMAT_D24_UNORM_S8_UINT, Xe as VK_FORMAT_D32_SFLOAT, qe as VK_FORMAT_D32_SFLOAT_S8_UINT, He as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, wn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK, dn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK, bn as VK_FORMAT_EAC_R11_SNORM_BLOCK, un as VK_FORMAT_EAC_R11_UNORM_BLOCK, gn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, pn as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, xn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, yn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, _n as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, $n as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, si as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, hi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, ri as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, oi as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, li as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, _i as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, fi as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, Zn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, Qn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16, Jn as VK_FORMAT_R10X6_UNORM_PACK16, ii as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, ni as VK_FORMAT_R12X4G12X4_UNORM_2PACK16, ei as VK_FORMAT_R12X4_UNORM_PACK16, ge as VK_FORMAT_R16G16B16A16_SFLOAT, pe as VK_FORMAT_R16G16B16A16_SINT, ce as VK_FORMAT_R16G16B16A16_SNORM, _e as VK_FORMAT_R16G16B16A16_UINT, Ue as VK_FORMAT_R16G16B16A16_UNORM, he as VK_FORMAT_R16G16B16_SFLOAT, fe as VK_FORMAT_R16G16B16_SINT, oe as VK_FORMAT_R16G16B16_SNORM, le as VK_FORMAT_R16G16B16_UINT, re as VK_FORMAT_R16G16B16_UNORM, ae as VK_FORMAT_R16G16_SFLOAT, se as VK_FORMAT_R16G16_SINT, ne as VK_FORMAT_R16G16_SNORM, ie as VK_FORMAT_R16G16_UINT, ee as VK_FORMAT_R16G16_UNORM, te as VK_FORMAT_R16_SFLOAT, $t as VK_FORMAT_R16_SINT, Qt as VK_FORMAT_R16_SNORM, Zt as VK_FORMAT_R16_UINT, Jt as VK_FORMAT_R16_UNORM, Ae as VK_FORMAT_R32G32B32A32_SFLOAT, ve as VK_FORMAT_R32G32B32A32_SINT, Le as VK_FORMAT_R32G32B32A32_UINT, Be as VK_FORMAT_R32G32B32_SFLOAT, De as VK_FORMAT_R32G32B32_SINT, me as VK_FORMAT_R32G32B32_UINT, we as VK_FORMAT_R32G32_SFLOAT, de as VK_FORMAT_R32G32_SINT, be as VK_FORMAT_R32G32_UINT, ue as VK_FORMAT_R32_SFLOAT, xe as VK_FORMAT_R32_SINT, ye as VK_FORMAT_R32_UINT, at as VK_FORMAT_R4G4B4A4_UNORM_PACK16, st as VK_FORMAT_R4G4_UNORM_PACK8, ft as VK_FORMAT_R5G5B5A1_UNORM_PACK16, ot as VK_FORMAT_R5G6B5_UNORM_PACK16, ze as VK_FORMAT_R64G64B64A64_SFLOAT, Pe as VK_FORMAT_R64G64B64A64_SINT, Me as VK_FORMAT_R64G64B64A64_UINT, Ce as VK_FORMAT_R64G64B64_SFLOAT, Te as VK_FORMAT_R64G64B64_SINT, Ee as VK_FORMAT_R64G64B64_UINT, Oe as VK_FORMAT_R64G64_SFLOAT, Fe as VK_FORMAT_R64G64_SINT, Se as VK_FORMAT_R64G64_UINT, Ie as VK_FORMAT_R64_SFLOAT, Ve as VK_FORMAT_R64_SINT, ke as VK_FORMAT_R64_UINT, Tt as VK_FORMAT_R8G8B8A8_SINT, Ot as VK_FORMAT_R8G8B8A8_SNORM, Ct as VK_FORMAT_R8G8B8A8_SRGB, Et as VK_FORMAT_R8G8B8A8_UINT, Ft as VK_FORMAT_R8G8B8A8_UNORM, Lt as VK_FORMAT_R8G8B8_SINT, Dt as VK_FORMAT_R8G8B8_SNORM, vt as VK_FORMAT_R8G8B8_SRGB, Bt as VK_FORMAT_R8G8B8_UINT, mt as VK_FORMAT_R8G8B8_UNORM, dt as VK_FORMAT_R8G8_SINT, ut as VK_FORMAT_R8G8_SNORM, wt as VK_FORMAT_R8G8_SRGB, bt as VK_FORMAT_R8G8_UINT, xt as VK_FORMAT_R8G8_UNORM, gt as VK_FORMAT_R8_SINT, _t as VK_FORMAT_R8_SNORM, yt as VK_FORMAT_R8_SRGB, pt as VK_FORMAT_R8_UINT, ct as VK_FORMAT_R8_UNORM, Re as VK_FORMAT_S8_UINT, it as VK_FORMAT_UNDEFINED, Ke as VK_FORMAT_X8_D24_UNORM_PACK32, Pi as read, Wi as write };","map":{"version":3,"names":["t","e","n","i","s","a","r","o","l","f","h","U","c","_","p","g","y","x","u","b","d","w","m","D","B","L","v","A","k","V","I","S","F","O","E","T","C","M","P","z","W","H","N","K","X","R","Y","j","q","G","J","Q","Z","$","tt","et","nt","it","st","at","rt","ot","lt","ft","ht","Ut","ct","_t","pt","gt","yt","xt","ut","bt","dt","wt","mt","Dt","Bt","Lt","vt","At","kt","Vt","It","St","Ft","Ot","Et","Tt","Ct","Mt","Pt","zt","Wt","Ht","Nt","Kt","Xt","Rt","Yt","jt","qt","Gt","Jt","Qt","Zt","$t","te","ee","ne","ie","se","ae","re","oe","le","fe","he","Ue","ce","_e","pe","ge","ye","xe","ue","be","de","we","me","De","Be","Le","ve","Ae","ke","Ve","Ie","Se","Fe","Oe","Ee","Te","Ce","Me","Pe","ze","We","He","Ne","Ke","Xe","Re","Ye","je","qe","Ge","Je","Qe","Ze","$e","tn","en","nn","sn","an","rn","on","ln","fn","hn","Un","cn","_n","pn","gn","yn","xn","un","bn","dn","wn","mn","Dn","Bn","Ln","vn","An","kn","Vn","In","Sn","Fn","On","En","Tn","Cn","Mn","Pn","zn","Wn","Hn","Nn","Kn","Xn","Rn","Yn","jn","qn","Gn","Jn","Qn","Zn","$n","ti","ei","ni","ii","si","ai","ri","oi","li","fi","hi","Ui","ci","_i","pi","gi","yi","xi","ui","bi","di","wi","mi","Di","Bi","Li","vi","Ai","ki","Vi","Ii","constructor","vkFormat","typeSize","pixelWidth","pixelHeight","pixelDepth","layerCount","faceCount","supercompressionScheme","levels","dataFormatDescriptor","vendorId","descriptorType","descriptorBlockSize","versionNumber","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","bytesPlane","samples","keyValue","globalData","Si","_dataView","_littleEndian","_offset","DataView","buffer","byteOffset","_nextUint8","getUint8","_nextUint16","getUint16","_nextUint32","getUint32","_nextUint64","_nextInt32","getInt32","_nextUint8Array","Uint8Array","_skip","_scan","Fi","Oi","Ei","TextEncoder","encode","Ti","TextDecoder","decode","Ci","byteLength","set","Mi","Math","ceil","Pi","length","Error","Uint32Array","BYTES_PER_ELEMENT","push","levelData","uncompressedByteLength","bitOffset","bitLength","channelType","samplePosition","sampleLower","Infinity","sampleUpper","match","substring","lastIndexOf","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","zi","keepWriter","Wi","ArrayBuffer","setUint16","setUint32","KTXwriter","fill","setUint8","Array","isArray","channelID","setInt32","max","min","floor","pow","setBigUint64","BigInt","KHR_DF_CHANNEL_RGBSDA_ALPHA","KHR_DF_CHANNEL_RGBSDA_BLUE","KHR_DF_CHANNEL_RGBSDA_DEPTH","KHR_DF_CHANNEL_RGBSDA_GREEN","KHR_DF_CHANNEL_RGBSDA_RED","KHR_DF_CHANNEL_RGBSDA_STENCIL","KHR_DF_FLAG_ALPHA_PREMULTIPLIED","KHR_DF_FLAG_ALPHA_STRAIGHT","KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT","KHR_DF_MODEL_ASTC","KHR_DF_MODEL_ETC1","KHR_DF_MODEL_ETC1S","KHR_DF_MODEL_ETC2","KHR_DF_MODEL_RGBSDA","KHR_DF_MODEL_UASTC","KHR_DF_MODEL_UNSPECIFIED","KHR_DF_PRIMARIES_ACES","KHR_DF_PRIMARIES_ACESCC","KHR_DF_PRIMARIES_ADOBERGB","KHR_DF_PRIMARIES_BT2020","KHR_DF_PRIMARIES_BT601_EBU","KHR_DF_PRIMARIES_BT601_SMPTE","KHR_DF_PRIMARIES_BT709","KHR_DF_PRIMARIES_CIEXYZ","KHR_DF_PRIMARIES_DISPLAYP3","KHR_DF_PRIMARIES_NTSC1953","KHR_DF_PRIMARIES_PAL525","KHR_DF_PRIMARIES_UNSPECIFIED","KHR_DF_SAMPLE_DATATYPE_EXPONENT","KHR_DF_SAMPLE_DATATYPE_FLOAT","KHR_DF_SAMPLE_DATATYPE_LINEAR","KHR_DF_SAMPLE_DATATYPE_SIGNED","KHR_DF_TRANSFER_ACESCC","KHR_DF_TRANSFER_ACESCCT","KHR_DF_TRANSFER_ADOBERGB","KHR_DF_TRANSFER_BT1886","KHR_DF_TRANSFER_DCIP3","KHR_DF_TRANSFER_HLG_EOTF","KHR_DF_TRANSFER_HLG_OETF","KHR_DF_TRANSFER_ITU","KHR_DF_TRANSFER_LINEAR","KHR_DF_TRANSFER_NTSC","KHR_DF_TRANSFER_PAL625_EOTF","KHR_DF_TRANSFER_PAL_OETF","KHR_DF_TRANSFER_PQ_EOTF","KHR_DF_TRANSFER_PQ_OETF","KHR_DF_TRANSFER_SLOG","KHR_DF_TRANSFER_SLOG2","KHR_DF_TRANSFER_SRGB","KHR_DF_TRANSFER_ST240","KHR_DF_TRANSFER_UNSPECIFIED","KHR_DF_VENDORID_KHRONOS","KHR_DF_VERSION","KHR_SUPERCOMPRESSION_BASISLZ","KHR_SUPERCOMPRESSION_NONE","KHR_SUPERCOMPRESSION_ZLIB","KHR_SUPERCOMPRESSION_ZSTD","KTX2Container","VK_FORMAT_A1R5G5B5_UNORM_PACK16","VK_FORMAT_A2B10G10R10_SINT_PACK32","VK_FORMAT_A2B10G10R10_SNORM_PACK32","VK_FORMAT_A2B10G10R10_UINT_PACK32","VK_FORMAT_A2B10G10R10_UNORM_PACK32","VK_FORMAT_A2R10G10B10_SINT_PACK32","VK_FORMAT_A2R10G10B10_SNORM_PACK32","VK_FORMAT_A2R10G10B10_UINT_PACK32","VK_FORMAT_A2R10G10B10_UNORM_PACK32","VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT","VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT","VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x10_SRGB_BLOCK","VK_FORMAT_ASTC_10x10_UNORM_BLOCK","VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x5_SRGB_BLOCK","VK_FORMAT_ASTC_10x5_UNORM_BLOCK","VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x6_SRGB_BLOCK","VK_FORMAT_ASTC_10x6_UNORM_BLOCK","VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x8_SRGB_BLOCK","VK_FORMAT_ASTC_10x8_UNORM_BLOCK","VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x10_SRGB_BLOCK","VK_FORMAT_ASTC_12x10_UNORM_BLOCK","VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x12_SRGB_BLOCK","VK_FORMAT_ASTC_12x12_UNORM_BLOCK","VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_4x4_SRGB_BLOCK","VK_FORMAT_ASTC_4x4_UNORM_BLOCK","VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x4_SRGB_BLOCK","VK_FORMAT_ASTC_5x4_UNORM_BLOCK","VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x5_SRGB_BLOCK","VK_FORMAT_ASTC_5x5_UNORM_BLOCK","VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x5_SRGB_BLOCK","VK_FORMAT_ASTC_6x5_UNORM_BLOCK","VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x6_SRGB_BLOCK","VK_FORMAT_ASTC_6x6_UNORM_BLOCK","VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x5_SRGB_BLOCK","VK_FORMAT_ASTC_8x5_UNORM_BLOCK","VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x6_SRGB_BLOCK","VK_FORMAT_ASTC_8x6_UNORM_BLOCK","VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x8_SRGB_BLOCK","VK_FORMAT_ASTC_8x8_UNORM_BLOCK","VK_FORMAT_B10G11R11_UFLOAT_PACK32","VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","VK_FORMAT_B4G4R4A4_UNORM_PACK16","VK_FORMAT_B5G5R5A1_UNORM_PACK16","VK_FORMAT_B5G6R5_UNORM_PACK16","VK_FORMAT_B8G8R8A8_SINT","VK_FORMAT_B8G8R8A8_SNORM","VK_FORMAT_B8G8R8A8_SRGB","VK_FORMAT_B8G8R8A8_UINT","VK_FORMAT_B8G8R8A8_UNORM","VK_FORMAT_B8G8R8_SINT","VK_FORMAT_B8G8R8_SNORM","VK_FORMAT_B8G8R8_SRGB","VK_FORMAT_B8G8R8_UINT","VK_FORMAT_B8G8R8_UNORM","VK_FORMAT_BC1_RGBA_SRGB_BLOCK","VK_FORMAT_BC1_RGBA_UNORM_BLOCK","VK_FORMAT_BC1_RGB_SRGB_BLOCK","VK_FORMAT_BC1_RGB_UNORM_BLOCK","VK_FORMAT_BC2_SRGB_BLOCK","VK_FORMAT_BC2_UNORM_BLOCK","VK_FORMAT_BC3_SRGB_BLOCK","VK_FORMAT_BC3_UNORM_BLOCK","VK_FORMAT_BC4_SNORM_BLOCK","VK_FORMAT_BC4_UNORM_BLOCK","VK_FORMAT_BC5_SNORM_BLOCK","VK_FORMAT_BC5_UNORM_BLOCK","VK_FORMAT_BC6H_SFLOAT_BLOCK","VK_FORMAT_BC6H_UFLOAT_BLOCK","VK_FORMAT_BC7_SRGB_BLOCK","VK_FORMAT_BC7_UNORM_BLOCK","VK_FORMAT_D16_UNORM","VK_FORMAT_D16_UNORM_S8_UINT","VK_FORMAT_D24_UNORM_S8_UINT","VK_FORMAT_D32_SFLOAT","VK_FORMAT_D32_SFLOAT_S8_UINT","VK_FORMAT_E5B9G9R9_UFLOAT_PACK32","VK_FORMAT_EAC_R11G11_SNORM_BLOCK","VK_FORMAT_EAC_R11G11_UNORM_BLOCK","VK_FORMAT_EAC_R11_SNORM_BLOCK","VK_FORMAT_EAC_R11_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK","VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16","VK_FORMAT_R10X6G10X6_UNORM_2PACK16","VK_FORMAT_R10X6_UNORM_PACK16","VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16","VK_FORMAT_R12X4G12X4_UNORM_2PACK16","VK_FORMAT_R12X4_UNORM_PACK16","VK_FORMAT_R16G16B16A16_SFLOAT","VK_FORMAT_R16G16B16A16_SINT","VK_FORMAT_R16G16B16A16_SNORM","VK_FORMAT_R16G16B16A16_UINT","VK_FORMAT_R16G16B16A16_UNORM","VK_FORMAT_R16G16B16_SFLOAT","VK_FORMAT_R16G16B16_SINT","VK_FORMAT_R16G16B16_SNORM","VK_FORMAT_R16G16B16_UINT","VK_FORMAT_R16G16B16_UNORM","VK_FORMAT_R16G16_SFLOAT","VK_FORMAT_R16G16_SINT","VK_FORMAT_R16G16_SNORM","VK_FORMAT_R16G16_UINT","VK_FORMAT_R16G16_UNORM","VK_FORMAT_R16_SFLOAT","VK_FORMAT_R16_SINT","VK_FORMAT_R16_SNORM","VK_FORMAT_R16_UINT","VK_FORMAT_R16_UNORM","VK_FORMAT_R32G32B32A32_SFLOAT","VK_FORMAT_R32G32B32A32_SINT","VK_FORMAT_R32G32B32A32_UINT","VK_FORMAT_R32G32B32_SFLOAT","VK_FORMAT_R32G32B32_SINT","VK_FORMAT_R32G32B32_UINT","VK_FORMAT_R32G32_SFLOAT","VK_FORMAT_R32G32_SINT","VK_FORMAT_R32G32_UINT","VK_FORMAT_R32_SFLOAT","VK_FORMAT_R32_SINT","VK_FORMAT_R32_UINT","VK_FORMAT_R4G4B4A4_UNORM_PACK16","VK_FORMAT_R4G4_UNORM_PACK8","VK_FORMAT_R5G5B5A1_UNORM_PACK16","VK_FORMAT_R5G6B5_UNORM_PACK16","VK_FORMAT_R64G64B64A64_SFLOAT","VK_FORMAT_R64G64B64A64_SINT","VK_FORMAT_R64G64B64A64_UINT","VK_FORMAT_R64G64B64_SFLOAT","VK_FORMAT_R64G64B64_SINT","VK_FORMAT_R64G64B64_UINT","VK_FORMAT_R64G64_SFLOAT","VK_FORMAT_R64G64_SINT","VK_FORMAT_R64G64_UINT","VK_FORMAT_R64_SFLOAT","VK_FORMAT_R64_SINT","VK_FORMAT_R64_UINT","VK_FORMAT_R8G8B8A8_SINT","VK_FORMAT_R8G8B8A8_SNORM","VK_FORMAT_R8G8B8A8_SRGB","VK_FORMAT_R8G8B8A8_UINT","VK_FORMAT_R8G8B8A8_UNORM","VK_FORMAT_R8G8B8_SINT","VK_FORMAT_R8G8B8_SNORM","VK_FORMAT_R8G8B8_SRGB","VK_FORMAT_R8G8B8_UINT","VK_FORMAT_R8G8B8_UNORM","VK_FORMAT_R8G8_SINT","VK_FORMAT_R8G8_SNORM","VK_FORMAT_R8G8_SRGB","VK_FORMAT_R8G8_UINT","VK_FORMAT_R8G8_UNORM","VK_FORMAT_R8_SINT","VK_FORMAT_R8_SNORM","VK_FORMAT_R8_SRGB","VK_FORMAT_R8_UINT","VK_FORMAT_R8_UNORM","VK_FORMAT_S8_UINT","VK_FORMAT_UNDEFINED","VK_FORMAT_X8_D24_UNORM_PACK32","read","write"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/libs/ktx-parse.module.js"],"sourcesContent":["const t=0,e=1,n=2,i=3,s=0,a=0,r=2,o=0,l=1,f=160,h=161,U=162,c=163,_=166,p=0,g=1,y=0,x=1,u=2,b=3,d=4,w=5,m=6,D=7,B=8,L=9,v=10,A=11,k=12,V=13,I=14,S=15,F=16,O=17,E=18,T=0,C=1,M=2,P=3,z=4,W=5,H=6,N=7,K=8,X=9,R=10,Y=11,j=0,q=1,G=2,J=13,Q=14,Z=15,$=128,tt=64,et=32,nt=16,it=0,st=1,at=2,rt=3,ot=4,lt=5,ft=6,ht=7,Ut=8,ct=9,_t=10,pt=13,gt=14,yt=15,xt=16,ut=17,bt=20,dt=21,wt=22,mt=23,Dt=24,Bt=27,Lt=28,vt=29,At=30,kt=31,Vt=34,It=35,St=36,Ft=37,Ot=38,Et=41,Tt=42,Ct=43,Mt=44,Pt=45,zt=48,Wt=49,Ht=50,Nt=58,Kt=59,Xt=62,Rt=63,Yt=64,jt=65,qt=68,Gt=69,Jt=70,Qt=71,Zt=74,$t=75,te=76,ee=77,ne=78,ie=81,se=82,ae=83,re=84,oe=85,le=88,fe=89,he=90,Ue=91,ce=92,_e=95,pe=96,ge=97,ye=98,xe=99,ue=100,be=101,de=102,we=103,me=104,De=105,Be=106,Le=107,ve=108,Ae=109,ke=110,Ve=111,Ie=112,Se=113,Fe=114,Oe=115,Ee=116,Te=117,Ce=118,Me=119,Pe=120,ze=121,We=122,He=123,Ne=124,Ke=125,Xe=126,Re=127,Ye=128,je=129,qe=130,Ge=131,Je=132,Qe=133,Ze=134,$e=135,tn=136,en=137,nn=138,sn=139,an=140,rn=141,on=142,ln=143,fn=144,hn=145,Un=146,cn=147,_n=148,pn=149,gn=150,yn=151,xn=152,un=153,bn=154,dn=155,wn=156,mn=157,Dn=158,Bn=159,Ln=160,vn=161,An=162,kn=163,Vn=164,In=165,Sn=166,Fn=167,On=168,En=169,Tn=170,Cn=171,Mn=172,Pn=173,zn=174,Wn=175,Hn=176,Nn=177,Kn=178,Xn=179,Rn=180,Yn=181,jn=182,qn=183,Gn=184,Jn=1000156007,Qn=1000156008,Zn=1000156009,$n=1000156010,ti=1000156011,ei=1000156017,ni=1000156018,ii=1000156019,si=1000156020,ai=1000156021,ri=1000054e3,oi=1000054001,li=1000054002,fi=1000054003,hi=1000054004,Ui=1000054005,ci=1000054006,_i=1000054007,pi=1000066e3,gi=1000066001,yi=1000066002,xi=1000066003,ui=1000066004,bi=1000066005,di=1000066006,wi=1000066007,mi=1000066008,Di=1000066009,Bi=1000066010,Li=1000066011,vi=1000066012,Ai=1000066013,ki=100034e4,Vi=1000340001;class Ii{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}}class Si{constructor(t,e,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_nextInt32(){const t=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint8Array(t){const e=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,t);return this._offset+=t,e}_skip(t){return this._offset+=t,this}_scan(t,e){void 0===e&&(e=0);const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}const Fi=new Uint8Array([0]),Oi=[171,75,84,88,32,50,48,187,13,10,26,10];function Ei(t){return(new TextEncoder).encode(t)}function Ti(t){return(new TextDecoder).decode(t)}function Ci(t){let e=0;for(const n of t)e+=n.byteLength;const n=new Uint8Array(e);let i=0;for(const e of t)n.set(new Uint8Array(e),i),i+=e.byteLength;return n}function Mi(t,e){return void 0===e&&(e=4),Math.ceil(t/e)*e-t}function Pi(t){const e=new Uint8Array(t.buffer,t.byteOffset,Oi.length);if(e[0]!==Oi[0]||e[1]!==Oi[1]||e[2]!==Oi[2]||e[3]!==Oi[3]||e[4]!==Oi[4]||e[5]!==Oi[5]||e[6]!==Oi[6]||e[7]!==Oi[7]||e[8]!==Oi[8]||e[9]!==Oi[9]||e[10]!==Oi[10]||e[11]!==Oi[11])throw new Error(\"Missing KTX 2.0 identifier.\");const n=new Ii,i=17*Uint32Array.BYTES_PER_ELEMENT,s=new Si(t,Oi.length,i,!0);n.vkFormat=s._nextUint32(),n.typeSize=s._nextUint32(),n.pixelWidth=s._nextUint32(),n.pixelHeight=s._nextUint32(),n.pixelDepth=s._nextUint32(),n.layerCount=s._nextUint32(),n.faceCount=s._nextUint32();const a=s._nextUint32();n.supercompressionScheme=s._nextUint32();const r=s._nextUint32(),o=s._nextUint32(),l=s._nextUint32(),f=s._nextUint32(),h=s._nextUint64(),U=s._nextUint64(),c=new Si(t,Oi.length+i,3*a*8,!0);for(let e=0;e<a;e++)n.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+c._nextUint64(),c._nextUint64()),uncompressedByteLength:c._nextUint64()});const _=new Si(t,r,o,!0),p={vendorId:_._skip(4)._nextUint16(),descriptorType:_._nextUint16(),versionNumber:_._nextUint16(),descriptorBlockSize:_._nextUint16(),colorModel:_._nextUint8(),colorPrimaries:_._nextUint8(),transferFunction:_._nextUint8(),flags:_._nextUint8(),texelBlockDimension:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],bytesPlane:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],samples:[]},g=(p.descriptorBlockSize/4-6)/4;for(let t=0;t<g;t++){const e={bitOffset:_._nextUint16(),bitLength:_._nextUint8(),channelType:_._nextUint8(),samplePosition:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],sampleLower:-Infinity,sampleUpper:Infinity};64&e.channelType?(e.sampleLower=_._nextInt32(),e.sampleUpper=_._nextInt32()):(e.sampleLower=_._nextUint32(),e.sampleUpper=_._nextUint32()),p.samples[t]=e}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(p);const y=new Si(t,l,f,!0);for(;y._offset<f;){const t=y._nextUint32(),e=y._scan(t),i=Ti(e);if(n.keyValue[i]=y._nextUint8Array(t-e.byteLength-1),i.match(/^ktx/i)){const t=Ti(n.keyValue[i]);n.keyValue[i]=t.substring(0,t.lastIndexOf(\"\\0\"))}y._skip(t%4?4-t%4:0)}if(U<=0)return n;const x=new Si(t,h,U,!0),u=x._nextUint16(),b=x._nextUint16(),d=x._nextUint32(),w=x._nextUint32(),m=x._nextUint32(),D=x._nextUint32(),B=[];for(let t=0;t<a;t++)B.push({imageFlags:x._nextUint32(),rgbSliceByteOffset:x._nextUint32(),rgbSliceByteLength:x._nextUint32(),alphaSliceByteOffset:x._nextUint32(),alphaSliceByteLength:x._nextUint32()});const L=h+x._offset,v=L+d,A=v+w,k=A+m,V=new Uint8Array(t.buffer,t.byteOffset+L,d),I=new Uint8Array(t.buffer,t.byteOffset+v,w),S=new Uint8Array(t.buffer,t.byteOffset+A,m),F=new Uint8Array(t.buffer,t.byteOffset+k,D);return n.globalData={endpointCount:u,selectorCount:b,imageDescs:B,endpointsData:V,selectorsData:I,tablesData:S,extendedData:F},n}const zi={keepWriter:!1};function Wi(t,e){void 0===e&&(e={}),e={...zi,...e};let n=new ArrayBuffer(0);if(t.globalData){const e=new ArrayBuffer(20+5*t.globalData.imageDescs.length*4),i=new DataView(e);i.setUint16(0,t.globalData.endpointCount,!0),i.setUint16(2,t.globalData.selectorCount,!0),i.setUint32(4,t.globalData.endpointsData.byteLength,!0),i.setUint32(8,t.globalData.selectorsData.byteLength,!0),i.setUint32(12,t.globalData.tablesData.byteLength,!0),i.setUint32(16,t.globalData.extendedData.byteLength,!0);for(let e=0;e<t.globalData.imageDescs.length;e++){const n=t.globalData.imageDescs[e];i.setUint32(20+5*e*4+0,n.imageFlags,!0),i.setUint32(20+5*e*4+4,n.rgbSliceByteOffset,!0),i.setUint32(20+5*e*4+8,n.rgbSliceByteLength,!0),i.setUint32(20+5*e*4+12,n.alphaSliceByteOffset,!0),i.setUint32(20+5*e*4+16,n.alphaSliceByteLength,!0)}n=Ci([e,t.globalData.endpointsData,t.globalData.selectorsData,t.globalData.tablesData,t.globalData.extendedData])}const i=[];let s=t.keyValue;e.keepWriter||(s={...t.keyValue,KTXwriter:\"KTX-Parse v0.7.1\"});for(const t in s){const e=s[t],n=Ei(t),a=\"string\"==typeof e?Ci([Ei(e),Fi]):e,r=n.byteLength+1+a.byteLength,o=Mi(r,4);i.push(Ci([new Uint32Array([r]),n,Fi,a,new Uint8Array(o).fill(0)]))}const a=Ci(i);if(1!==t.dataFormatDescriptor.length||0!==t.dataFormatDescriptor[0].descriptorType)throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");const r=t.dataFormatDescriptor[0],o=new ArrayBuffer(28+16*r.samples.length),l=new DataView(o),f=24+16*r.samples.length;if(l.setUint32(0,o.byteLength,!0),l.setUint16(4,r.vendorId,!0),l.setUint16(6,r.descriptorType,!0),l.setUint16(8,r.versionNumber,!0),l.setUint16(10,f,!0),l.setUint8(12,r.colorModel),l.setUint8(13,r.colorPrimaries),l.setUint8(14,r.transferFunction),l.setUint8(15,r.flags),!Array.isArray(r.texelBlockDimension))throw new Error(\"texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.\");l.setUint8(16,r.texelBlockDimension[0]),l.setUint8(17,r.texelBlockDimension[1]),l.setUint8(18,r.texelBlockDimension[2]),l.setUint8(19,r.texelBlockDimension[3]);for(let t=0;t<8;t++)l.setUint8(20+t,r.bytesPlane[t]);for(let t=0;t<r.samples.length;t++){const e=r.samples[t],n=28+16*t;if(e.channelID)throw new Error(\"channelID has been renamed to channelType.\");l.setUint16(n+0,e.bitOffset,!0),l.setUint8(n+2,e.bitLength),l.setUint8(n+3,e.channelType),l.setUint8(n+4,e.samplePosition[0]),l.setUint8(n+5,e.samplePosition[1]),l.setUint8(n+6,e.samplePosition[2]),l.setUint8(n+7,e.samplePosition[3]),64&e.channelType?(l.setInt32(n+8,e.sampleLower,!0),l.setInt32(n+12,e.sampleUpper,!0)):(l.setUint32(n+8,e.sampleLower,!0),l.setUint32(n+12,e.sampleUpper,!0))}const h=Oi.length+68+3*t.levels.length*8,U=h+o.byteLength;let c=n.byteLength>0?U+a.byteLength:0;c%8&&(c+=8-c%8);const _=[],p=new DataView(new ArrayBuffer(3*t.levels.length*8)),g=new Uint32Array(t.levels.length);let y=0;0===t.supercompressionScheme&&(y=function(t,e){const n=Math.max(t,4),i=Math.min(t,4);let s=n;for(;s%i!=0;)s+=n;return s}(function(t){return t.levels[0].levelData.byteLength/function(t,e){let n=1;const i=[t.pixelWidth,t.pixelHeight,t.pixelDepth],s=function(t){const[e,n,i]=t.dataFormatDescriptor[0].texelBlockDimension;return[e+1,n+1,i+1]}(t);for(let t=0;t<3;t++)if(i[t]>0){const e=Math.ceil(Math.floor(i[t]*Math.pow(2,-0))/s[t]);n*=Math.max(1,e)}return t.layerCount>0&&(n*=t.layerCount),t.faceCount>0&&(n*=t.faceCount),n}(t)}(t)));let x=(c||U+a.byteLength)+n.byteLength;for(let e=t.levels.length-1;e>=0;e--){if(x%y){const t=Mi(x,y);_.push(new Uint8Array(t)),x+=t}const n=t.levels[e];_.push(n.levelData),g[e]=x,x+=n.levelData.byteLength}for(let e=0;e<t.levels.length;e++){const n=t.levels[e];p.setBigUint64(24*e+0,BigInt(g[e]),!0),p.setBigUint64(24*e+8,BigInt(n.levelData.byteLength),!0),p.setBigUint64(24*e+16,BigInt(n.uncompressedByteLength),!0)}const u=new ArrayBuffer(68),b=new DataView(u);return b.setUint32(0,t.vkFormat,!0),b.setUint32(4,t.typeSize,!0),b.setUint32(8,t.pixelWidth,!0),b.setUint32(12,t.pixelHeight,!0),b.setUint32(16,t.pixelDepth,!0),b.setUint32(20,t.layerCount,!0),b.setUint32(24,t.faceCount,!0),b.setUint32(28,t.levels.length,!0),b.setUint32(32,t.supercompressionScheme,!0),b.setUint32(36,h,!0),b.setUint32(40,o.byteLength,!0),b.setUint32(44,U,!0),b.setUint32(48,a.byteLength,!0),b.setBigUint64(52,BigInt(n.byteLength>0?c:0),!0),b.setBigUint64(60,BigInt(n.byteLength),!0),new Uint8Array(Ci([new Uint8Array(Oi).buffer,u,p.buffer,o,a,c>0?new ArrayBuffer(c-(U+a.byteLength)):new ArrayBuffer(0),n,..._]))}export{Z as KHR_DF_CHANNEL_RGBSDA_ALPHA,G as KHR_DF_CHANNEL_RGBSDA_BLUE,Q as KHR_DF_CHANNEL_RGBSDA_DEPTH,q as KHR_DF_CHANNEL_RGBSDA_GREEN,j as KHR_DF_CHANNEL_RGBSDA_RED,J as KHR_DF_CHANNEL_RGBSDA_STENCIL,g as KHR_DF_FLAG_ALPHA_PREMULTIPLIED,p as KHR_DF_FLAG_ALPHA_STRAIGHT,s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,U as KHR_DF_MODEL_ASTC,f as KHR_DF_MODEL_ETC1,c as KHR_DF_MODEL_ETC1S,h as KHR_DF_MODEL_ETC2,l as KHR_DF_MODEL_RGBSDA,_ as KHR_DF_MODEL_UASTC,o as KHR_DF_MODEL_UNSPECIFIED,H as KHR_DF_PRIMARIES_ACES,N as KHR_DF_PRIMARIES_ACESCC,Y as KHR_DF_PRIMARIES_ADOBERGB,z as KHR_DF_PRIMARIES_BT2020,M as KHR_DF_PRIMARIES_BT601_EBU,P as KHR_DF_PRIMARIES_BT601_SMPTE,C as KHR_DF_PRIMARIES_BT709,W as KHR_DF_PRIMARIES_CIEXYZ,R as KHR_DF_PRIMARIES_DISPLAYP3,K as KHR_DF_PRIMARIES_NTSC1953,X as KHR_DF_PRIMARIES_PAL525,T as KHR_DF_PRIMARIES_UNSPECIFIED,et as KHR_DF_SAMPLE_DATATYPE_EXPONENT,$ as KHR_DF_SAMPLE_DATATYPE_FLOAT,nt as KHR_DF_SAMPLE_DATATYPE_LINEAR,tt as KHR_DF_SAMPLE_DATATYPE_SIGNED,F as KHR_DF_TRANSFER_ACESCC,O as KHR_DF_TRANSFER_ACESCCT,E as KHR_DF_TRANSFER_ADOBERGB,D as KHR_DF_TRANSFER_BT1886,k as KHR_DF_TRANSFER_DCIP3,L as KHR_DF_TRANSFER_HLG_EOTF,B as KHR_DF_TRANSFER_HLG_OETF,b as KHR_DF_TRANSFER_ITU,x as KHR_DF_TRANSFER_LINEAR,d as KHR_DF_TRANSFER_NTSC,I as KHR_DF_TRANSFER_PAL625_EOTF,V as KHR_DF_TRANSFER_PAL_OETF,v as KHR_DF_TRANSFER_PQ_EOTF,A as KHR_DF_TRANSFER_PQ_OETF,w as KHR_DF_TRANSFER_SLOG,m as KHR_DF_TRANSFER_SLOG2,u as KHR_DF_TRANSFER_SRGB,S as KHR_DF_TRANSFER_ST240,y as KHR_DF_TRANSFER_UNSPECIFIED,a as KHR_DF_VENDORID_KHRONOS,r as KHR_DF_VERSION,e as KHR_SUPERCOMPRESSION_BASISLZ,t as KHR_SUPERCOMPRESSION_NONE,i as KHR_SUPERCOMPRESSION_ZLIB,n as KHR_SUPERCOMPRESSION_ZSTD,Ii as KTX2Container,Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16,Gt as VK_FORMAT_A2B10G10R10_SINT_PACK32,jt as VK_FORMAT_A2B10G10R10_SNORM_PACK32,qt as VK_FORMAT_A2B10G10R10_UINT_PACK32,Yt as VK_FORMAT_A2B10G10R10_UNORM_PACK32,Rt as VK_FORMAT_A2R10G10B10_SINT_PACK32,Kt as VK_FORMAT_A2R10G10B10_SNORM_PACK32,Xt as VK_FORMAT_A2R10G10B10_UINT_PACK32,Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32,Vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT,ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT,Li as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT,Rn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK,Xn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK,mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT,zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK,Pn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK,Di as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT,Hn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK,Wn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK,Bi as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT,Kn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK,Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK,vi as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT,jn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK,Yn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK,Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT,Gn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK,qn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK,pi as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT,Dn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK,mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK,gi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT,Ln as VK_FORMAT_ASTC_5x4_SRGB_BLOCK,Bn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK,yi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT,An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK,vn as VK_FORMAT_ASTC_5x5_UNORM_BLOCK,xi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT,Vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK,kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK,ui as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT,Sn as VK_FORMAT_ASTC_6x6_SRGB_BLOCK,In as VK_FORMAT_ASTC_6x6_UNORM_BLOCK,bi as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT,On as VK_FORMAT_ASTC_8x5_SRGB_BLOCK,Fn as VK_FORMAT_ASTC_8x5_UNORM_BLOCK,di as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT,Tn as VK_FORMAT_ASTC_8x6_SRGB_BLOCK,En as VK_FORMAT_ASTC_8x6_UNORM_BLOCK,wi as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT,Mn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK,Cn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK,We as VK_FORMAT_B10G11R11_UFLOAT_PACK32,ti as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,ai as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,rt as VK_FORMAT_B4G4R4A4_UNORM_PACK16,ht as VK_FORMAT_B5G5R5A1_UNORM_PACK16,lt as VK_FORMAT_B5G6R5_UNORM_PACK16,Wt as VK_FORMAT_B8G8R8A8_SINT,Pt as VK_FORMAT_B8G8R8A8_SNORM,Ht as VK_FORMAT_B8G8R8A8_SRGB,zt as VK_FORMAT_B8G8R8A8_UINT,Mt as VK_FORMAT_B8G8R8A8_UNORM,It as VK_FORMAT_B8G8R8_SINT,kt as VK_FORMAT_B8G8R8_SNORM,St as VK_FORMAT_B8G8R8_SRGB,Vt as VK_FORMAT_B8G8R8_UINT,At as VK_FORMAT_B8G8R8_UNORM,Ze as VK_FORMAT_BC1_RGBA_SRGB_BLOCK,Qe as VK_FORMAT_BC1_RGBA_UNORM_BLOCK,Je as VK_FORMAT_BC1_RGB_SRGB_BLOCK,Ge as VK_FORMAT_BC1_RGB_UNORM_BLOCK,tn as VK_FORMAT_BC2_SRGB_BLOCK,$e as VK_FORMAT_BC2_UNORM_BLOCK,nn as VK_FORMAT_BC3_SRGB_BLOCK,en as VK_FORMAT_BC3_UNORM_BLOCK,an as VK_FORMAT_BC4_SNORM_BLOCK,sn as VK_FORMAT_BC4_UNORM_BLOCK,on as VK_FORMAT_BC5_SNORM_BLOCK,rn as VK_FORMAT_BC5_UNORM_BLOCK,fn as VK_FORMAT_BC6H_SFLOAT_BLOCK,ln as VK_FORMAT_BC6H_UFLOAT_BLOCK,Un as VK_FORMAT_BC7_SRGB_BLOCK,hn as VK_FORMAT_BC7_UNORM_BLOCK,Ne as VK_FORMAT_D16_UNORM,Ye as VK_FORMAT_D16_UNORM_S8_UINT,je as VK_FORMAT_D24_UNORM_S8_UINT,Xe as VK_FORMAT_D32_SFLOAT,qe as VK_FORMAT_D32_SFLOAT_S8_UINT,He as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,wn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK,dn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK,bn as VK_FORMAT_EAC_R11_SNORM_BLOCK,un as VK_FORMAT_EAC_R11_UNORM_BLOCK,gn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,pn as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,xn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,yn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,_n as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,$n as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,si as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,hi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,ri as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,oi as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,li as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,_i as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,fi as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,Zn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,Qn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16,Jn as VK_FORMAT_R10X6_UNORM_PACK16,ii as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,ni as VK_FORMAT_R12X4G12X4_UNORM_2PACK16,ei as VK_FORMAT_R12X4_UNORM_PACK16,ge as VK_FORMAT_R16G16B16A16_SFLOAT,pe as VK_FORMAT_R16G16B16A16_SINT,ce as VK_FORMAT_R16G16B16A16_SNORM,_e as VK_FORMAT_R16G16B16A16_UINT,Ue as VK_FORMAT_R16G16B16A16_UNORM,he as VK_FORMAT_R16G16B16_SFLOAT,fe as VK_FORMAT_R16G16B16_SINT,oe as VK_FORMAT_R16G16B16_SNORM,le as VK_FORMAT_R16G16B16_UINT,re as VK_FORMAT_R16G16B16_UNORM,ae as VK_FORMAT_R16G16_SFLOAT,se as VK_FORMAT_R16G16_SINT,ne as VK_FORMAT_R16G16_SNORM,ie as VK_FORMAT_R16G16_UINT,ee as VK_FORMAT_R16G16_UNORM,te as VK_FORMAT_R16_SFLOAT,$t as VK_FORMAT_R16_SINT,Qt as VK_FORMAT_R16_SNORM,Zt as VK_FORMAT_R16_UINT,Jt as VK_FORMAT_R16_UNORM,Ae as VK_FORMAT_R32G32B32A32_SFLOAT,ve as VK_FORMAT_R32G32B32A32_SINT,Le as VK_FORMAT_R32G32B32A32_UINT,Be as VK_FORMAT_R32G32B32_SFLOAT,De as VK_FORMAT_R32G32B32_SINT,me as VK_FORMAT_R32G32B32_UINT,we as VK_FORMAT_R32G32_SFLOAT,de as VK_FORMAT_R32G32_SINT,be as VK_FORMAT_R32G32_UINT,ue as VK_FORMAT_R32_SFLOAT,xe as VK_FORMAT_R32_SINT,ye as VK_FORMAT_R32_UINT,at as VK_FORMAT_R4G4B4A4_UNORM_PACK16,st as VK_FORMAT_R4G4_UNORM_PACK8,ft as VK_FORMAT_R5G5B5A1_UNORM_PACK16,ot as VK_FORMAT_R5G6B5_UNORM_PACK16,ze as VK_FORMAT_R64G64B64A64_SFLOAT,Pe as VK_FORMAT_R64G64B64A64_SINT,Me as VK_FORMAT_R64G64B64A64_UINT,Ce as VK_FORMAT_R64G64B64_SFLOAT,Te as VK_FORMAT_R64G64B64_SINT,Ee as VK_FORMAT_R64G64B64_UINT,Oe as VK_FORMAT_R64G64_SFLOAT,Fe as VK_FORMAT_R64G64_SINT,Se as VK_FORMAT_R64G64_UINT,Ie as VK_FORMAT_R64_SFLOAT,Ve as VK_FORMAT_R64_SINT,ke as VK_FORMAT_R64_UINT,Tt as VK_FORMAT_R8G8B8A8_SINT,Ot as VK_FORMAT_R8G8B8A8_SNORM,Ct as VK_FORMAT_R8G8B8A8_SRGB,Et as VK_FORMAT_R8G8B8A8_UINT,Ft as VK_FORMAT_R8G8B8A8_UNORM,Lt as VK_FORMAT_R8G8B8_SINT,Dt as VK_FORMAT_R8G8B8_SNORM,vt as VK_FORMAT_R8G8B8_SRGB,Bt as VK_FORMAT_R8G8B8_UINT,mt as VK_FORMAT_R8G8B8_UNORM,dt as VK_FORMAT_R8G8_SINT,ut as VK_FORMAT_R8G8_SNORM,wt as VK_FORMAT_R8G8_SRGB,bt as VK_FORMAT_R8G8_UINT,xt as VK_FORMAT_R8G8_UNORM,gt as VK_FORMAT_R8_SINT,_t as VK_FORMAT_R8_SNORM,yt as VK_FORMAT_R8_SRGB,pt as VK_FORMAT_R8_UINT,ct as VK_FORMAT_R8_UNORM,Re as VK_FORMAT_S8_UINT,it as VK_FORMAT_UNDEFINED,Ke as VK_FORMAT_X8_D24_UNORM_PACK32,Pi as read,Wi as write};\n"],"mappings":"AAAA,MAAMA,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,GAAG;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,SAAS;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}