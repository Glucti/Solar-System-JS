{"ast":null,"code":"import { Vector4 } from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * This class represents a NURBS volume.\n *\n * Implementation is based on `(x, y [, z=0 [, w=1]])` control points with `w=weight`.\n *\n * @three_import import { NURBSVolume } from 'three/addons/curves/NURBSVolume.js';\n */\nclass NURBSVolume {\n  /**\n   * Constructs a new NURBS surface.\n   *\n   * @param {number} degree1 - The first NURBS degree.\n   * @param {number} degree2 - The second NURBS degree.\n   * @param {number} degree3 - The third NURBS degree.\n   * @param {Array<number>} knots1 - The first knots as a flat array of numbers.\n   * @param {Array<number>} knots2 - The second knots as a flat array of numbers.\n   * @param {Array<number>} knots3 - The third knots as a flat array of numbers.\n   * @param {Array<Array<Array<Vector2|Vector3|Vector4>>>} controlPoints - An array^3 holding control points.\n   */\n  constructor(degree1, degree2, degree3, knots1, knots2, knots3 /* arrays of reals */, controlPoints /* array^3 of Vector(2|3|4) */) {\n    this.degree1 = degree1;\n    this.degree2 = degree2;\n    this.degree3 = degree3;\n    this.knots1 = knots1;\n    this.knots2 = knots2;\n    this.knots3 = knots3;\n    this.controlPoints = [];\n    const len1 = knots1.length - degree1 - 1;\n    const len2 = knots2.length - degree2 - 1;\n    const len3 = knots3.length - degree3 - 1;\n\n    // ensure Vector4 for control points\n    for (let i = 0; i < len1; ++i) {\n      this.controlPoints[i] = [];\n      for (let j = 0; j < len2; ++j) {\n        this.controlPoints[i][j] = [];\n        for (let k = 0; k < len3; ++k) {\n          const point = controlPoints[i][j][k];\n          this.controlPoints[i][j][k] = new Vector4(point.x, point.y, point.z, point.w);\n        }\n      }\n    }\n  }\n\n  /**\n   * This method returns a vector in 3D space for the given interpolation factor. This vector lies within the NURBS volume.\n   *\n   * @param {number} t1 - The first interpolation factor representing the `u` position within the volume. Must be in the range `[0,1]`.\n   * @param {number} t2 - The second interpolation factor representing the `v` position within the volume. Must be in the range `[0,1]`.\n   * @param {number} t3 - The third interpolation factor representing the `w` position within the volume. Must be in the range `[0,1]`.\n   * @param {Vector3} target - The target vector the result is written to.\n   */\n  getPoint(t1, t2, t3, target) {\n    const u = this.knots1[0] + t1 * (this.knots1[this.knots1.length - 1] - this.knots1[0]); // linear mapping t1->u\n    const v = this.knots2[0] + t2 * (this.knots2[this.knots2.length - 1] - this.knots2[0]); // linear mapping t2->v\n    const w = this.knots3[0] + t3 * (this.knots3[this.knots3.length - 1] - this.knots3[0]); // linear mapping t3->w\n\n    NURBSUtils.calcVolumePoint(this.degree1, this.degree2, this.degree3, this.knots1, this.knots2, this.knots3, this.controlPoints, u, v, w, target);\n  }\n}\nexport { NURBSVolume };","map":{"version":3,"names":["Vector4","NURBSUtils","NURBSVolume","constructor","degree1","degree2","degree3","knots1","knots2","knots3","controlPoints","len1","length","len2","len3","i","j","k","point","x","y","z","w","getPoint","t1","t2","t3","target","u","v","calcVolumePoint"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/curves/NURBSVolume.js"],"sourcesContent":["import {\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * This class represents a NURBS volume.\n *\n * Implementation is based on `(x, y [, z=0 [, w=1]])` control points with `w=weight`.\n *\n * @three_import import { NURBSVolume } from 'three/addons/curves/NURBSVolume.js';\n */\nclass NURBSVolume {\n\n\t/**\n\t * Constructs a new NURBS surface.\n\t *\n\t * @param {number} degree1 - The first NURBS degree.\n\t * @param {number} degree2 - The second NURBS degree.\n\t * @param {number} degree3 - The third NURBS degree.\n\t * @param {Array<number>} knots1 - The first knots as a flat array of numbers.\n\t * @param {Array<number>} knots2 - The second knots as a flat array of numbers.\n\t * @param {Array<number>} knots3 - The third knots as a flat array of numbers.\n\t * @param {Array<Array<Array<Vector2|Vector3|Vector4>>>} controlPoints - An array^3 holding control points.\n\t */\n\tconstructor( degree1, degree2, degree3, knots1, knots2, knots3 /* arrays of reals */, controlPoints /* array^3 of Vector(2|3|4) */ ) {\n\n\t\tthis.degree1 = degree1;\n\t\tthis.degree2 = degree2;\n\t\tthis.degree3 = degree3;\n\t\tthis.knots1 = knots1;\n\t\tthis.knots2 = knots2;\n\t\tthis.knots3 = knots3;\n\t\tthis.controlPoints = [];\n\n\t\tconst len1 = knots1.length - degree1 - 1;\n\t\tconst len2 = knots2.length - degree2 - 1;\n\t\tconst len3 = knots3.length - degree3 - 1;\n\n\t\t// ensure Vector4 for control points\n\t\tfor ( let i = 0; i < len1; ++ i ) {\n\n\t\t\tthis.controlPoints[ i ] = [];\n\n\t\t\tfor ( let j = 0; j < len2; ++ j ) {\n\n\t\t\t\tthis.controlPoints[ i ][ j ] = [];\n\n\t\t\t\tfor ( let k = 0; k < len3; ++ k ) {\n\n\t\t\t\t\tconst point = controlPoints[ i ][ j ][ k ];\n\t\t\t\t\tthis.controlPoints[ i ][ j ][ k ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * This method returns a vector in 3D space for the given interpolation factor. This vector lies within the NURBS volume.\n\t *\n\t * @param {number} t1 - The first interpolation factor representing the `u` position within the volume. Must be in the range `[0,1]`.\n\t * @param {number} t2 - The second interpolation factor representing the `v` position within the volume. Must be in the range `[0,1]`.\n\t * @param {number} t3 - The third interpolation factor representing the `w` position within the volume. Must be in the range `[0,1]`.\n\t * @param {Vector3} target - The target vector the result is written to.\n\t */\n\tgetPoint( t1, t2, t3, target ) {\n\n\t\tconst u = this.knots1[ 0 ] + t1 * ( this.knots1[ this.knots1.length - 1 ] - this.knots1[ 0 ] ); // linear mapping t1->u\n\t\tconst v = this.knots2[ 0 ] + t2 * ( this.knots2[ this.knots2.length - 1 ] - this.knots2[ 0 ] ); // linear mapping t2->v\n\t\tconst w = this.knots3[ 0 ] + t3 * ( this.knots3[ this.knots3.length - 1 ] - this.knots3[ 0 ] ); // linear mapping t3->w\n\n\t\tNURBSUtils.calcVolumePoint( this.degree1, this.degree2, this.degree3, this.knots1, this.knots2, this.knots3, this.controlPoints, u, v, w, target );\n\n\t}\n\n}\n\nexport { NURBSVolume };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}