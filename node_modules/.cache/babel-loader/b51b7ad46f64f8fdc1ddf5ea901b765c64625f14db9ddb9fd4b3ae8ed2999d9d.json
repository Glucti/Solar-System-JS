{"ast":null,"code":"import { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from 'three';\nconst _shadowMatrix = new Matrix4();\n\n/**\n * A Shadow Mesh that follows a shadow-casting mesh in the scene,\n * but is confined to a single plane. This technique can be used as\n * a very performant alternative to classic shadow mapping. However,\n * it has serious limitations like:\n *\n * - Shadows can only be casted on flat planes.\n * - No soft shadows support.\n *\n * ```js\n * const cubeShadow = new ShadowMesh( cube );\n * scene.add( cubeShadow );\n * ```\n *\n * @augments Mesh\n * @three_import import { ShadowMesh } from 'three/addons/objects/ShadowMesh.js';\n */\nclass ShadowMesh extends Mesh {\n  /**\n   * Constructs a new shadow mesh.\n   *\n   * @param {Mesh} mesh - The shadow-casting reference mesh.\n   */\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0x000000,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    super(mesh.geometry, shadowMaterial);\n\n    /**\n     * This flag can be used for type testing.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default true\n     */\n    this.isShadowMesh = true;\n\n    /**\n     * Represent the world matrix of the reference mesh.\n     *\n     * @type {Matrix4}\n     */\n    this.meshMatrix = mesh.matrixWorld;\n\n    /**\n     * Overwritten to disable view-frustum culling by default.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    this.frustumCulled = false;\n\n    /**\n     * Overwritten to disable automatic matrix update. The local\n     * matrix is computed manually in {@link ShadowMesh#update}.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    this.matrixAutoUpdate = false;\n  }\n\n  /**\n   * Updates the shadow mesh so it follows its shadow-casting reference mesh.\n   *\n   * @param {Plane} plane - The plane onto the shadow mesh is projected.\n   * @param {Vector4} lightPosition4D - The light position.\n   */\n  update(plane, lightPosition4D) {\n    // based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n}\nexport { ShadowMesh };","map":{"version":3,"names":["Matrix4","Mesh","MeshBasicMaterial","EqualStencilFunc","IncrementStencilOp","_shadowMatrix","ShadowMesh","constructor","mesh","shadowMaterial","color","transparent","opacity","depthWrite","stencilWrite","stencilFunc","stencilRef","stencilZPass","geometry","isShadowMesh","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","update","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/objects/ShadowMesh.js"],"sourcesContent":["import {\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tEqualStencilFunc,\n\tIncrementStencilOp\n} from 'three';\n\nconst _shadowMatrix = new Matrix4();\n\n/**\n * A Shadow Mesh that follows a shadow-casting mesh in the scene,\n * but is confined to a single plane. This technique can be used as\n * a very performant alternative to classic shadow mapping. However,\n * it has serious limitations like:\n *\n * - Shadows can only be casted on flat planes.\n * - No soft shadows support.\n *\n * ```js\n * const cubeShadow = new ShadowMesh( cube );\n * scene.add( cubeShadow );\n * ```\n *\n * @augments Mesh\n * @three_import import { ShadowMesh } from 'three/addons/objects/ShadowMesh.js';\n */\nclass ShadowMesh extends Mesh {\n\n\t/**\n\t * Constructs a new shadow mesh.\n\t *\n\t * @param {Mesh} mesh - The shadow-casting reference mesh.\n\t */\n\tconstructor( mesh ) {\n\n\t\tconst shadowMaterial = new MeshBasicMaterial( {\n\n\t\t\tcolor: 0x000000,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.6,\n\t\t\tdepthWrite: false,\n\t\t\tstencilWrite: true,\n\t\t\tstencilFunc: EqualStencilFunc,\n\t\t\tstencilRef: 0,\n\t\t\tstencilZPass: IncrementStencilOp\n\n\t\t} );\n\n\t\tsuper( mesh.geometry, shadowMaterial );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isShadowMesh = true;\n\n\t\t/**\n\t\t * Represent the world matrix of the reference mesh.\n\t\t *\n\t\t * @type {Matrix4}\n\t\t */\n\t\tthis.meshMatrix = mesh.matrixWorld;\n\n\t\t/**\n\t\t * Overwritten to disable view-frustum culling by default.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.frustumCulled = false;\n\n\t\t/**\n\t\t * Overwritten to disable automatic matrix update. The local\n\t\t * matrix is computed manually in {@link ShadowMesh#update}.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\t/**\n\t * Updates the shadow mesh so it follows its shadow-casting reference mesh.\n\t *\n\t * @param {Plane} plane - The plane onto the shadow mesh is projected.\n\t * @param {Vector4} lightPosition4D - The light position.\n\t */\n\tupdate( plane, lightPosition4D ) {\n\n\t\t// based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n\n\t\tconst dot = plane.normal.x * lightPosition4D.x +\n\t\t\t  plane.normal.y * lightPosition4D.y +\n\t\t\t  plane.normal.z * lightPosition4D.z +\n\t\t\t  - plane.constant * lightPosition4D.w;\n\n\t\tconst sme = _shadowMatrix.elements;\n\n\t\tsme[ 0 ] = dot - lightPosition4D.x * plane.normal.x;\n\t\tsme[ 4 ] = - lightPosition4D.x * plane.normal.y;\n\t\tsme[ 8 ] = - lightPosition4D.x * plane.normal.z;\n\t\tsme[ 12 ] = - lightPosition4D.x * - plane.constant;\n\n\t\tsme[ 1 ] = - lightPosition4D.y * plane.normal.x;\n\t\tsme[ 5 ] = dot - lightPosition4D.y * plane.normal.y;\n\t\tsme[ 9 ] = - lightPosition4D.y * plane.normal.z;\n\t\tsme[ 13 ] = - lightPosition4D.y * - plane.constant;\n\n\t\tsme[ 2 ] = - lightPosition4D.z * plane.normal.x;\n\t\tsme[ 6 ] = - lightPosition4D.z * plane.normal.y;\n\t\tsme[ 10 ] = dot - lightPosition4D.z * plane.normal.z;\n\t\tsme[ 14 ] = - lightPosition4D.z * - plane.constant;\n\n\t\tsme[ 3 ] = - lightPosition4D.w * plane.normal.x;\n\t\tsme[ 7 ] = - lightPosition4D.w * plane.normal.y;\n\t\tsme[ 11 ] = - lightPosition4D.w * plane.normal.z;\n\t\tsme[ 15 ] = dot - lightPosition4D.w * - plane.constant;\n\n\t\tthis.matrix.multiplyMatrices( _shadowMatrix, this.meshMatrix );\n\n\t}\n\n}\n\nexport { ShadowMesh };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}