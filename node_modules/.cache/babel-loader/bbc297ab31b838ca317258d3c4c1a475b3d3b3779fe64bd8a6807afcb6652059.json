{"ast":null,"code":"var _jsxFileName = \"/home/powqy/Desktop/Design/solar-system-orbits/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Canvas, useLoader, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Stars, stars } from \"@react-three/drei\";\nimport { TextureLoader } from \"three\";\nimport styled from \"styled-components\";\nimport sun from '../src/textures/2k_sun.jpg';\nimport mars from '../src/textures/2k_mars.jpg';\n\n// a -> semi major axis\n// e -> eccentricity\n// I -> inclination\n// L -> mean longitue\n// beta -> longitude of perihelion\n// omega -> longitude of the ascending node\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst planetOribitalData = {\n  mars: {\n    a: 1.52371034,\n    e: 0.09339410,\n    I: 1.84969142,\n    L: -4.55343205,\n    omegaBar: -23.94362959,\n    omega: 49.55953891\n  },\n  earth: {\n    a: 1.00000261,\n    e: 0.01671123,\n    I: -0.00001531,\n    L: 100.46457166,\n    omegaBar: 102.93768193,\n    omega: 0.0\n  }\n};\nconst planetEntry = Object.entries(planetOribitalData).map(([name, data]) => {\n  return {\n    name,\n    elements: new OrbitalElements(data.a, data.e, data.I, data.L, data.omegaBar, data.omega)\n  };\n});\nfunction OrbitingPlanet({\n  elements,\n  textureFile,\n  jd,\n  radius,\n  scale = 2\n}) {\n  _s();\n  const planetRef = useRef();\n  const texture = useLoader(TextureLoader, textureFile);\n  useFrame(() => {\n    const position = elements.to3Dspace(jd);\n    if (planetRef.current) {\n      planetRef.current.position.set(position.x * scale, position.y * scale, position.z * scale);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: planetRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(OrbitingPlanet, \"QyPtIYh8FYySgLRhOyqIJN7/whw=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c = OrbitingPlanet;\nclass OrbitalElements {\n  constructor(a, e, I, L, omegaBar, omega, jd, jdEPOCH) {\n    this.a = a;\n    this.e = e;\n    this.I = I * Math.PI / 180; // inclination (radians)\n    this.L = L * Math.PI / 180; // mean longitude (radians)\n    this.omegaBar = omegaBar * Math.PI / 180; // longitude or perihelion\n    this.omega = omega * Math.PI / 180; //longitude of ascending node (you guessed it)\n    this.jd = jd;\n    this.jdEPOCH = 2451545.0; // epoch julian date J2000\n  }\n\n  // between 0 and 2pi\n  normalizeAngle(angle) {\n    angle = angle % (2 * Math.PI);\n    return angle < 0 ? angle + 2 * Math.PI : angle;\n  }\n\n  // at given julian date\n  meanAnomaly(JD) {\n    // M = M0 + n * (JD - JD0);\n    const n = Math.sqrt(1 / this.a ** 3);\n    let M0 = this.normalizeAngle(this.L - this.omegaBar);\n    let M = M0 + n * (JD - this.jdEPOCH);\n    return this.normalizeAngle(M);\n  }\n  solveKepler(M) {\n    // M = E - e sin E (solve for E)\n\n    // using newton-raphson iteration\n    let E = M;\n    let delta;\n    do {\n      delta = (E - this.e * Math.sin(E) - M) / (1 - this.e * Math.cos(E));\n      E -= delta;\n    } while (Math.abs(delta) > 1e-6);\n    return E;\n  }\n  to3Dspace(JD) {\n    const M = this.meanAnomaly(JD);\n    const E = this.solveKepler(M);\n\n    // orbital plane \n    const xPrime = this.a * (Math.cos(E) - this.e);\n    const yPrime = this.a * Math.sqrt(1 - this.e ** 2) * Math.sin(E);\n\n    // arguement of parihelion\n    const omegaPar = this.omegaBar - this.omega;\n\n    // rotate to 3D space \n    const cosOmega = Math.cos(this.omega);\n    const sinOmega = Math.sin(this.omega);\n    const cosOmegaPar = Math.cos(omegaPar);\n    const sinOmegaPar = Math.sin(omegaPar);\n    const cosI = Math.cos(this.I);\n    const sinI = Math.sin(this.I);\n    const x = (cosOmega * cosOmegaPar - sinOmega * sinOmegaPar * cosI) * xPrime + (-cosOmega * sinOmegaPar - sinOmega * cosOmegaPar * cosI) * yPrime;\n    const y = (sinOmega * cosOmegaPar + cosOmega * sinOmegaPar * cosI) * xPrime + (-sinOmega * sinOmegaPar + cosOmega * cosOmegaPar * cosI) * yPrime;\n    const z = sinOmegaPar * sinI * xPrime + cosOmegaPar * sinI * yPrime;\n    return {\n      x,\n      y,\n      z\n    };\n  }\n}\nfunction toJulianDate(date = new Date()) {\n  const time = date.getTime();\n  return time / 86400000 + 2440587.5; // ms in day + Unix epoch (Jan 1, 1970)\n}\nfunction fromJulianDate(jd) {\n  return new Date((jd - 2440587.5) * 86400000);\n}\nfunction Planet({\n  textureFile,\n  position = [0, 0, 0],\n  radius\n}) {\n  _s2();\n  const texture = useLoader(TextureLoader, textureFile);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [radius, 64, 64]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s2(Planet, \"DPn9Ts0h3TXc07M7VbzN9xij6Hs=\", false, function () {\n  return [useLoader];\n});\n_c2 = Planet;\nfunction SimulateTime({\n  onUpdate,\n  paused\n}) {\n  _s3();\n  const [simdT, setSimdT] = useState(toJulianDate());\n  const speed = 10;\n  useFrame((_, delta) => {\n    if (paused) return;\n    const newSimdT = simdT + delta * speed;\n    setSimdT(newSimdT);\n    onUpdate(newSimdT);\n  });\n  return null;\n}\n_s3(SimulateTime, \"bhUGHI4iiunKrEpszQfOR5VCivI=\", false, function () {\n  return [useFrame];\n});\n_c3 = SimulateTime;\nexport default function App() {\n  _s4();\n  const [gregDate, setGregDate] = useState(new Date());\n  const [paused, setPaused] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 10]\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimulateTime, {\n        paused: paused,\n        onUpdate: jd => {\n          setGregDate(fromJulianDate(jd));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Planet, {\n        textureFile: sun,\n        position: [0, 0, 0],\n        radius: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Planet, {\n        textureFile: mars,\n        position: [5, 0, 0],\n        radius: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateDisplay, {\n      children: [gregDate.toDateString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 35\n      }, this), gregDate.toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPaused(true),\n        children: \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s4(App, \"zMFzJM2hyFDwWiB12LPgYvbVqMQ=\");\n_c4 = App;\nconst DateDisplay = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  color: black;\n  font-family: monospace;\n  background: white;\n`;\n_c5 = DateDisplay;\nconst Controls = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 20px\n`;\n_c6 = Controls;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"OrbitingPlanet\");\n$RefreshReg$(_c2, \"Planet\");\n$RefreshReg$(_c3, \"SimulateTime\");\n$RefreshReg$(_c4, \"App\");\n$RefreshReg$(_c5, \"DateDisplay\");\n$RefreshReg$(_c6, \"Controls\");","map":{"version":3,"names":["React","useState","useRef","Canvas","useLoader","useFrame","OrbitControls","Stars","stars","TextureLoader","styled","sun","mars","jsxDEV","_jsxDEV","Fragment","_Fragment","planetOribitalData","a","e","I","L","omegaBar","omega","earth","planetEntry","Object","entries","map","name","data","elements","OrbitalElements","OrbitingPlanet","textureFile","jd","radius","scale","_s","planetRef","texture","position","to3Dspace","current","set","x","y","z","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","constructor","jdEPOCH","Math","PI","normalizeAngle","angle","meanAnomaly","JD","n","sqrt","M0","M","solveKepler","E","delta","sin","cos","abs","xPrime","yPrime","omegaPar","cosOmega","sinOmega","cosOmegaPar","sinOmegaPar","cosI","sinI","toJulianDate","date","Date","time","getTime","fromJulianDate","Planet","_s2","children","args","_c2","SimulateTime","onUpdate","paused","_s3","simdT","setSimdT","speed","_","newSimdT","_c3","App","_s4","gregDate","setGregDate","setPaused","camera","intensity","DateDisplay","toDateString","toLocaleDateString","Controls","onClick","_c4","div","_c5","_c6","$RefreshReg$"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Canvas, useLoader, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Stars, stars} from \"@react-three/drei\";\nimport { TextureLoader } from \"three\";\nimport styled from \"styled-components\";\n\nimport sun from '../src/textures/2k_sun.jpg'\nimport mars from '../src/textures/2k_mars.jpg'\n\n// a -> semi major axis\n// e -> eccentricity\n// I -> inclination\n// L -> mean longitue\n// beta -> longitude of perihelion\n// omega -> longitude of the ascending node\n\nconst planetOribitalData = {\n  mars: {\n    a: 1.52371034,\n    e: 0.09339410,\n    I: 1.84969142,\n    L: -4.55343205,\n    omegaBar: -23.94362959,\n    omega: 49.55953891\n  },\n\n  earth: {\n    a: 1.00000261,\n    e: 0.01671123,\n    I: -0.00001531,\n    L: 100.46457166,\n    omegaBar: 102.93768193,\n    omega: 0.0\n  }\n}\n\nconst planetEntry = Object.entries(planetOribitalData).map(([name, data]) => {\n  return {\n    name, \n    elements: new OrbitalElements(\n      data.a,\n      data.e,\n      data.I,\n      data.L,\n      data.omegaBar,\n      data.omega\n    )\n  };\n});\n\nfunction OrbitingPlanet({ elements, textureFile, jd, radius, scale = 2}) {\n  const planetRef = useRef();\n  const texture = useLoader(TextureLoader, textureFile);\n\n  useFrame(() => {\n    const position = elements.to3Dspace(jd);\n    if (planetRef.current) {\n      planetRef.current.position.set(position.x * scale, position.y * scale, position.z * scale)\n    }\n  });\n\n  return (\n    <mesh ref={planetRef}></mesh>\n  )\n}\n\nclass OrbitalElements {\n  constructor(a, e, I, L, omegaBar, omega, jd, jdEPOCH) {\n    this.a = a;\n    this.e = e;\n    this.I = I * Math.PI / 180;  // inclination (radians)\n    this.L = L * Math.PI / 180;  // mean longitude (radians)\n    this.omegaBar = omegaBar * Math.PI / 180; // longitude or perihelion\n    this.omega = omega * Math.PI / 180; //longitude of ascending node (you guessed it)\n    this.jd = jd;\n    this.jdEPOCH = 2451545.0; // epoch julian date J2000\n  }\n\n  // between 0 and 2pi\n  normalizeAngle(angle) { \n    angle = angle % (2 * Math.PI);\n    return angle < 0 ? angle + 2 * Math.PI : angle;\n  }\n\n  // at given julian date\n  meanAnomaly(JD) {\n    // M = M0 + n * (JD - JD0);\n    const n = Math.sqrt( 1 / (this.a ** 3));\n    let M0 = this.normalizeAngle(this.L - this.omegaBar);\n    let M = M0 + n * (JD - this.jdEPOCH);\n    return this.normalizeAngle(M);\n  }\n\n  solveKepler(M) {\n    // M = E - e sin E (solve for E)\n\n    // using newton-raphson iteration\n    let E = M;\n    let delta;\n\n    do {\n      delta = (E - this.e * Math.sin(E) - M) / \n      (1 - this.e * Math.cos(E));\n      E -= delta;\n\n    } while (Math.abs(delta) > 1e-6);\n    return E;\n  }\n\n  to3Dspace(JD) {\n\n    const M = this.meanAnomaly(JD);\n    const E = this.solveKepler(M);\n\n    // orbital plane \n    const xPrime = this.a * (Math.cos(E) - this.e);\n    const yPrime = this.a * Math.sqrt( 1 - this.e ** 2) * Math.sin(E);\n\n    // arguement of parihelion\n    const omegaPar = this.omegaBar - this.omega;\n\n    // rotate to 3D space \n    const cosOmega = Math.cos(this.omega);\n    const sinOmega = Math.sin(this.omega);\n    const cosOmegaPar = Math.cos(omegaPar);\n    const sinOmegaPar = Math.sin(omegaPar);\n    const cosI = Math.cos(this.I);\n    const sinI = Math.sin(this.I);\n\n    const x = (cosOmega * cosOmegaPar - sinOmega * sinOmegaPar * cosI) * xPrime +\n              (-cosOmega * sinOmegaPar - sinOmega * cosOmegaPar * cosI) * yPrime;\n    \n    const y = (sinOmega * cosOmegaPar + cosOmega * sinOmegaPar * cosI) * xPrime +\n              (-sinOmega * sinOmegaPar + cosOmega * cosOmegaPar * cosI) *yPrime\n\n    const z = (sinOmegaPar * sinI) * xPrime + (cosOmegaPar * sinI) * yPrime;\n\n    return { x, y, z};\n  }\n}\n\nfunction toJulianDate(date = new Date()) {\n  const time = date.getTime();\n  return time / 86400000 + 2440587.5 // ms in day + Unix epoch (Jan 1, 1970)\n}\n\nfunction fromJulianDate(jd) {\n  return new Date((jd - 2440587.5) * 86400000);\n}\n\nfunction Planet({ textureFile, position = [0, 0, 0], radius}) {\n  const texture = useLoader(TextureLoader, textureFile);\n  return (\n    <mesh position={position}>\n      <sphereGeometry args = {[radius, 64, 64]} />\n      <meshStandardMaterial map={texture} />\n    </mesh>\n  );\n}\n\nfunction SimulateTime({ onUpdate, paused }) {\n  const [simdT, setSimdT] = useState(toJulianDate());\n  const speed = 10;\n\n  useFrame((_, delta) => {\n    if (paused) return;\n    const newSimdT = simdT + delta * speed;\n    setSimdT(newSimdT);\n    onUpdate(newSimdT);\n  })\n  return null;\n}\n\nexport default function App() {\n  const [gregDate, setGregDate] = useState(new Date());\n  const [paused, setPaused] = useState(false);\n\n  return (\n    <>\n      <Canvas camera={{ position : [0, 0, 10] }}>\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} />\n        <Stars />\n        <SimulateTime \n          paused={paused}\n          onUpdate={(jd) => {setGregDate(fromJulianDate(jd))}} \n        />\n        <Planet textureFile={sun} position={[0, 0, 0]} radius={2} />\n        <Planet textureFile={mars} position={[5, 0, 0]} radius={1} />\n        <OrbitControls />\n      </Canvas>\n\n      <DateDisplay>\n        {gregDate.toDateString()} <br />\n        {gregDate.toLocaleDateString()}\n      </DateDisplay>\n      <Controls>\n        <button onClick={() => setPaused(true)}>pause</button>\n      </Controls>\n    </>\n  )\n}\n\n\nconst DateDisplay = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  color: black;\n  font-family: monospace;\n  background: white;\n`\n\nconst Controls = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 20px\n`"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}