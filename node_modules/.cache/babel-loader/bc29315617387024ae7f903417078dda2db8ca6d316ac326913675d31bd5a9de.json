{"ast":null,"code":"var _jsxFileName = \"/home/powqy/Desktop/Design/solar-system-orbits/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Canvas, useLoader, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Stars, stars } from \"@react-three/drei\";\nimport { TextureLoader } from \"three\";\nimport styled from \"styled-components\";\nimport sun from '../src/textures/2k_sun.jpg';\nimport mars from '../src/textures/2k_mars.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toJulianDate(date = new Date()) {\n  const time = date.getTime();\n  return time / 86400000 + 2440587.5; // ms in day + Unix epoch (Jan 1, 1970)\n}\nfunction fromJulianDate(jd) {\n  return new Date((jd - 2440587.5) * 86400000);\n}\nfunction Planet({\n  textureFile,\n  position = [0, 0, 0],\n  radius\n}) {\n  _s();\n  const texture = useLoader(TextureLoader, textureFile);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [radius, 64, 64]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Planet, \"DPn9Ts0h3TXc07M7VbzN9xij6Hs=\", false, function () {\n  return [useLoader];\n});\n_c = Planet;\nfunction SimulateTime({\n  onUpdate\n}) {\n  _s2();\n  const [simdT, setSimdT] = useState(toJulianDate());\n  const speed = 10;\n  useFrame((_, delta) => {\n    const newSimdT = simdT + delta * speed;\n    setSimdT(newSimdT);\n    onUpdate(newSimdT);\n  });\n  return null;\n}\n_s2(SimulateTime, \"bhUGHI4iiunKrEpszQfOR5VCivI=\", false, function () {\n  return [useFrame];\n});\n_c2 = SimulateTime;\nexport default function App() {\n  _s3();\n  const [gregDate, setGregDate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 10]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulateTime, {\n      onUpdate: jd => {\n        setGregDate(fromJulianDate(jd));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Planet, {\n      textureFile: sun,\n      position: [0, 0, 0],\n      radius: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Planet, {\n      textureFile: mars,\n      position: [5, 0, 0],\n      radius: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"Fd7fP7L6H/6eyhVjAx8qpsL78LI=\");\n_c3 = App;\nconst DateDisplay = styled.div`\n  \n`;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Planet\");\n$RefreshReg$(_c2, \"SimulateTime\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","Canvas","useLoader","useFrame","OrbitControls","Stars","stars","TextureLoader","styled","sun","mars","jsxDEV","_jsxDEV","toJulianDate","date","Date","time","getTime","fromJulianDate","jd","Planet","textureFile","position","radius","_s","texture","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","SimulateTime","onUpdate","_s2","simdT","setSimdT","speed","_","delta","newSimdT","_c2","App","_s3","gregDate","setGregDate","camera","intensity","_c3","DateDisplay","div","$RefreshReg$"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Canvas, useLoader, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls, Stars, stars} from \"@react-three/drei\";\nimport { TextureLoader } from \"three\";\nimport styled from \"styled-components\";\n\nimport sun from '../src/textures/2k_sun.jpg'\nimport mars from '../src/textures/2k_mars.jpg'\n\nfunction toJulianDate(date = new Date()) {\n  const time = date.getTime();\n  return time / 86400000 + 2440587.5 // ms in day + Unix epoch (Jan 1, 1970)\n}\n\nfunction fromJulianDate(jd) {\n  return new Date((jd - 2440587.5) * 86400000);\n}\n\nfunction Planet({ textureFile, position = [0, 0, 0], radius}) {\n  const texture = useLoader(TextureLoader, textureFile);\n  return (\n    <mesh position={position}>\n      <sphereGeometry args = {[radius, 64, 64]} />\n      <meshStandardMaterial map={texture} />\n    </mesh>\n  );\n}\n\nfunction SimulateTime({ onUpdate }) {\n  const [simdT, setSimdT] = useState(toJulianDate());\n  const speed = 10;\n\n  useFrame((_, delta) => {\n    const newSimdT = simdT + delta * speed;\n    setSimdT(newSimdT);\n    onUpdate(newSimdT);\n  })\n  return null;\n}\n\nexport default function App() {\n  const [gregDate, setGregDate] = useState(new Date());\n\n  return (\n    <Canvas camera={{ position : [0, 0, 10] }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <Stars />\n      <SimulateTime onUpdate={(jd) => {\n        setGregDate(fromJulianDate(jd));\n      }} />\n      <Planet textureFile={sun} position={[0, 0, 0]} radius={2} />\n      <Planet textureFile={mars} position={[5, 0, 0]} radius={1} />\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\n\nconst DateDisplay = styled.div`\n  \n`"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}