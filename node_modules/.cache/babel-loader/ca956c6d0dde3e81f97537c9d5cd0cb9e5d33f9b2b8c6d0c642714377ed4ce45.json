{"ast":null,"code":"import { BackSide, BoxGeometry, InstancedMesh, Mesh, MeshBasicMaterial, MeshStandardMaterial, PointLight, Scene, Object3D } from 'three';\n\n/**\n * This class represents a scene with a basic room setup that can be used as\n * input for {@link PMREMGenerator#fromScene}. The resulting PMREM represents the room's\n * lighting and can be used for Image Based Lighting by assigning it to {@link Scene#environment}\n * or directly as an environment map to PBR materials.\n *\n * The implementation is based on the [EnvironmentScene](https://github.com/google/model-viewer/blob/master/packages/model-viewer/src/three-components/EnvironmentScene.ts)\n * component from the `model-viewer` project.\n *\n * ```js\n * const environment = new RoomEnvironment();\n * const pmremGenerator = new THREE.PMREMGenerator( renderer );\n *\n * const envMap = pmremGenerator.fromScene( environment ).texture;\n * scene.environment = envMap;\n * ```\n *\n * @augments Scene\n * @three_import import { RoomEnvironment } from 'three/addons/environments/RoomEnvironment.js';\n */\nclass RoomEnvironment extends Scene {\n  constructor() {\n    super();\n    const geometry = new BoxGeometry();\n    geometry.deleteAttribute('uv');\n    const roomMaterial = new MeshStandardMaterial({\n      side: BackSide\n    });\n    const boxMaterial = new MeshStandardMaterial();\n    const mainLight = new PointLight(0xffffff, 900, 28, 2);\n    mainLight.position.set(0.418, 16.199, 0.300);\n    this.add(mainLight);\n    const room = new Mesh(geometry, roomMaterial);\n    room.position.set(-0.757, 13.219, 0.717);\n    room.scale.set(31.713, 28.305, 28.591);\n    this.add(room);\n    const boxes = new InstancedMesh(geometry, boxMaterial, 6);\n    const transform = new Object3D();\n\n    // box1\n    transform.position.set(-10.906, 2.009, 1.846);\n    transform.rotation.set(0, -0.195, 0);\n    transform.scale.set(2.328, 7.905, 4.651);\n    transform.updateMatrix();\n    boxes.setMatrixAt(0, transform.matrix);\n\n    // box2\n    transform.position.set(-5.607, -0.754, -0.758);\n    transform.rotation.set(0, 0.994, 0);\n    transform.scale.set(1.970, 1.534, 3.955);\n    transform.updateMatrix();\n    boxes.setMatrixAt(1, transform.matrix);\n\n    // box3\n    transform.position.set(6.167, 0.857, 7.803);\n    transform.rotation.set(0, 0.561, 0);\n    transform.scale.set(3.927, 6.285, 3.687);\n    transform.updateMatrix();\n    boxes.setMatrixAt(2, transform.matrix);\n\n    // box4\n    transform.position.set(-2.017, 0.018, 6.124);\n    transform.rotation.set(0, 0.333, 0);\n    transform.scale.set(2.002, 4.566, 2.064);\n    transform.updateMatrix();\n    boxes.setMatrixAt(3, transform.matrix);\n\n    // box5\n    transform.position.set(2.291, -0.756, -2.621);\n    transform.rotation.set(0, -0.286, 0);\n    transform.scale.set(1.546, 1.552, 1.496);\n    transform.updateMatrix();\n    boxes.setMatrixAt(4, transform.matrix);\n\n    // box6\n    transform.position.set(-2.193, -0.369, -5.547);\n    transform.rotation.set(0, 0.516, 0);\n    transform.scale.set(3.875, 3.487, 2.986);\n    transform.updateMatrix();\n    boxes.setMatrixAt(5, transform.matrix);\n    this.add(boxes);\n\n    // -x right\n    const light1 = new Mesh(geometry, createAreaLightMaterial(50));\n    light1.position.set(-16.116, 14.37, 8.208);\n    light1.scale.set(0.1, 2.428, 2.739);\n    this.add(light1);\n\n    // -x left\n    const light2 = new Mesh(geometry, createAreaLightMaterial(50));\n    light2.position.set(-16.109, 18.021, -8.207);\n    light2.scale.set(0.1, 2.425, 2.751);\n    this.add(light2);\n\n    // +x\n    const light3 = new Mesh(geometry, createAreaLightMaterial(17));\n    light3.position.set(14.904, 12.198, -1.832);\n    light3.scale.set(0.15, 4.265, 6.331);\n    this.add(light3);\n\n    // +z\n    const light4 = new Mesh(geometry, createAreaLightMaterial(43));\n    light4.position.set(-0.462, 8.89, 14.520);\n    light4.scale.set(4.38, 5.441, 0.088);\n    this.add(light4);\n\n    // -z\n    const light5 = new Mesh(geometry, createAreaLightMaterial(20));\n    light5.position.set(3.235, 11.486, -12.541);\n    light5.scale.set(2.5, 2.0, 0.1);\n    this.add(light5);\n\n    // +y\n    const light6 = new Mesh(geometry, createAreaLightMaterial(100));\n    light6.position.set(0.0, 20.0, 0.0);\n    light6.scale.set(1.0, 0.1, 1.0);\n    this.add(light6);\n  }\n\n  /**\n   * Frees internal resources. This method should be called\n   * when the environment is no longer required.\n   */\n  dispose() {\n    const resources = new Set();\n    this.traverse(object => {\n      if (object.isMesh) {\n        resources.add(object.geometry);\n        resources.add(object.material);\n      }\n    });\n    for (const resource of resources) {\n      resource.dispose();\n    }\n  }\n}\nfunction createAreaLightMaterial(intensity) {\n  const material = new MeshBasicMaterial();\n  material.color.setScalar(intensity);\n  return material;\n}\nexport { RoomEnvironment };","map":{"version":3,"names":["BackSide","BoxGeometry","InstancedMesh","Mesh","MeshBasicMaterial","MeshStandardMaterial","PointLight","Scene","Object3D","RoomEnvironment","constructor","geometry","deleteAttribute","roomMaterial","side","boxMaterial","mainLight","position","set","add","room","scale","boxes","transform","rotation","updateMatrix","setMatrixAt","matrix","light1","createAreaLightMaterial","light2","light3","light4","light5","light6","dispose","resources","Set","traverse","object","isMesh","material","resource","intensity","color","setScalar"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/environments/RoomEnvironment.js"],"sourcesContent":["import {\n \tBackSide,\n \tBoxGeometry,\n \tInstancedMesh,\n \tMesh,\n\tMeshBasicMaterial,\n \tMeshStandardMaterial,\n \tPointLight,\n \tScene,\n \tObject3D,\n} from 'three';\n\n/**\n * This class represents a scene with a basic room setup that can be used as\n * input for {@link PMREMGenerator#fromScene}. The resulting PMREM represents the room's\n * lighting and can be used for Image Based Lighting by assigning it to {@link Scene#environment}\n * or directly as an environment map to PBR materials.\n *\n * The implementation is based on the [EnvironmentScene](https://github.com/google/model-viewer/blob/master/packages/model-viewer/src/three-components/EnvironmentScene.ts)\n * component from the `model-viewer` project.\n *\n * ```js\n * const environment = new RoomEnvironment();\n * const pmremGenerator = new THREE.PMREMGenerator( renderer );\n *\n * const envMap = pmremGenerator.fromScene( environment ).texture;\n * scene.environment = envMap;\n * ```\n *\n * @augments Scene\n * @three_import import { RoomEnvironment } from 'three/addons/environments/RoomEnvironment.js';\n */\nclass RoomEnvironment extends Scene {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tconst geometry = new BoxGeometry();\n\t\tgeometry.deleteAttribute( 'uv' );\n\n\t\tconst roomMaterial = new MeshStandardMaterial( { side: BackSide } );\n\t\tconst boxMaterial = new MeshStandardMaterial();\n\n\t\tconst mainLight = new PointLight( 0xffffff, 900, 28, 2 );\n\t\tmainLight.position.set( 0.418, 16.199, 0.300 );\n\t\tthis.add( mainLight );\n\n\t\tconst room = new Mesh( geometry, roomMaterial );\n\t\troom.position.set( - 0.757, 13.219, 0.717 );\n\t\troom.scale.set( 31.713, 28.305, 28.591 );\n\t\tthis.add( room );\n\n\t\tconst boxes = new InstancedMesh( geometry, boxMaterial, 6 );\n\t\tconst transform = new Object3D();\n\n\t\t// box1\n\t\ttransform.position.set( - 10.906, 2.009, 1.846 );\n\t\ttransform.rotation.set( 0, - 0.195, 0 );\n\t\ttransform.scale.set( 2.328, 7.905, 4.651 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 0, transform.matrix );\n\n\t\t// box2\n\t\ttransform.position.set( - 5.607, - 0.754, - 0.758 );\n\t\ttransform.rotation.set( 0, 0.994, 0 );\n\t\ttransform.scale.set( 1.970, 1.534, 3.955 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 1, transform.matrix );\n\n\t\t// box3\n\t\ttransform.position.set( 6.167, 0.857, 7.803 );\n\t\ttransform.rotation.set( 0, 0.561, 0 );\n\t\ttransform.scale.set( 3.927, 6.285, 3.687 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 2, transform.matrix );\n\n\t\t// box4\n\t\ttransform.position.set( - 2.017, 0.018, 6.124 );\n\t\ttransform.rotation.set( 0, 0.333, 0 );\n\t\ttransform.scale.set( 2.002, 4.566, 2.064 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 3, transform.matrix );\n\n\t\t// box5\n\t\ttransform.position.set( 2.291, - 0.756, - 2.621 );\n\t\ttransform.rotation.set( 0, - 0.286, 0 );\n\t\ttransform.scale.set( 1.546, 1.552, 1.496 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 4, transform.matrix );\n\n\t\t// box6\n\t\ttransform.position.set( - 2.193, - 0.369, - 5.547 );\n\t\ttransform.rotation.set( 0, 0.516, 0 );\n\t\ttransform.scale.set( 3.875, 3.487, 2.986 );\n\t\ttransform.updateMatrix();\n\t\tboxes.setMatrixAt( 5, transform.matrix );\n\n\t\tthis.add( boxes );\n\n\n\t\t// -x right\n\t\tconst light1 = new Mesh( geometry, createAreaLightMaterial( 50 ) );\n\t\tlight1.position.set( - 16.116, 14.37, 8.208 );\n\t\tlight1.scale.set( 0.1, 2.428, 2.739 );\n\t\tthis.add( light1 );\n\n\t\t// -x left\n\t\tconst light2 = new Mesh( geometry, createAreaLightMaterial( 50 ) );\n\t\tlight2.position.set( - 16.109, 18.021, - 8.207 );\n\t\tlight2.scale.set( 0.1, 2.425, 2.751 );\n\t\tthis.add( light2 );\n\n\t\t// +x\n\t\tconst light3 = new Mesh( geometry, createAreaLightMaterial( 17 ) );\n\t\tlight3.position.set( 14.904, 12.198, - 1.832 );\n\t\tlight3.scale.set( 0.15, 4.265, 6.331 );\n\t\tthis.add( light3 );\n\n\t\t// +z\n\t\tconst light4 = new Mesh( geometry, createAreaLightMaterial( 43 ) );\n\t\tlight4.position.set( - 0.462, 8.89, 14.520 );\n\t\tlight4.scale.set( 4.38, 5.441, 0.088 );\n\t\tthis.add( light4 );\n\n\t\t// -z\n\t\tconst light5 = new Mesh( geometry, createAreaLightMaterial( 20 ) );\n\t\tlight5.position.set( 3.235, 11.486, - 12.541 );\n\t\tlight5.scale.set( 2.5, 2.0, 0.1 );\n\t\tthis.add( light5 );\n\n\t\t// +y\n\t\tconst light6 = new Mesh( geometry, createAreaLightMaterial( 100 ) );\n\t\tlight6.position.set( 0.0, 20.0, 0.0 );\n\t\tlight6.scale.set( 1.0, 0.1, 1.0 );\n\t\tthis.add( light6 );\n\n\t}\n\n\t/**\n\t * Frees internal resources. This method should be called\n\t * when the environment is no longer required.\n\t */\n\tdispose() {\n\n\t\tconst resources = new Set();\n\n\t\tthis.traverse( ( object ) => {\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tresources.add( object.geometry );\n\t\t\t\tresources.add( object.material );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tfor ( const resource of resources ) {\n\n\t\t\tresource.dispose();\n\n\t\t}\n\n\t}\n\n}\n\nfunction createAreaLightMaterial( intensity ) {\n\n\tconst material = new MeshBasicMaterial();\n\tmaterial.color.setScalar( intensity );\n\treturn material;\n\n}\n\nexport { RoomEnvironment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}