{"ast":null,"code":"import { AnimationClip, BufferGeometry, FileLoader, Float32BufferAttribute, Loader, Vector3 } from 'three';\nconst _normalData = [[-0.525731, 0.000000, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0.000000, 0.955423], [-0.309017, 0.500000, 0.809017], [-0.162460, 0.262866, 0.951056], [0.000000, 0.000000, 1.000000], [0.000000, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0.000000, 0.525731, 0.850651], [0.309017, 0.500000, 0.809017], [0.525731, 0.000000, 0.850651], [0.295242, 0.000000, 0.955423], [0.442863, 0.238856, 0.864188], [0.162460, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.500000], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0.000000], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.500000, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.500000, 0.809017, -0.309017], [-0.525731, 0.850651, 0.000000], [0.000000, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0.000000, 0.955423, -0.295242], [-0.262866, 0.951056, -0.162460], [0.000000, 1.000000, 0.000000], [0.000000, 0.955423, 0.295242], [-0.262866, 0.951056, 0.162460], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.162460], [0.500000, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.162460], [0.500000, 0.809017, -0.309017], [0.850651, 0.525731, 0.000000], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0.000000], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.500000], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0.000000], [1.000000, 0.000000, 0.000000], [0.951056, 0.162460, 0.262866], [0.850651, -0.525731, 0.000000], [0.955423, -0.295242, 0.000000], [0.864188, -0.442863, 0.238856], [0.951056, -0.162460, 0.262866], [0.809017, -0.309017, 0.500000], [0.681718, -0.147621, 0.716567], [0.850651, 0.000000, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.500000], [0.951056, 0.162460, -0.262866], [0.525731, 0.000000, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0.000000, -0.525731], [0.809017, -0.309017, -0.500000], [0.864188, -0.442863, -0.238856], [0.951056, -0.162460, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.500000, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.500000, -0.809017], [0.000000, 0.525731, -0.850651], [-0.525731, 0.000000, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0.000000, -0.955423], [-0.162460, 0.262866, -0.951056], [0.000000, 0.000000, -1.000000], [0.295242, 0.000000, -0.955423], [0.162460, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.500000, -0.809017], [-0.162460, -0.262866, -0.951056], [0.000000, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0.000000, -0.525731, -0.850651], [0.309017, -0.500000, -0.809017], [0.442863, -0.238856, -0.864188], [0.162460, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.500000, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0.000000, -0.955423, -0.295242], [0.000000, -1.000000, 0.000000], [0.262866, -0.951056, -0.162460], [0.000000, -0.850651, 0.525731], [0.000000, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.162460], [0.500000, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0.000000], [-0.238856, -0.864188, -0.442863], [-0.500000, -0.809017, -0.309017], [-0.262866, -0.951056, -0.162460], [-0.850651, -0.525731, 0.000000], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0.000000], [-0.500000, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.162460], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.500000], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.500000, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.162460, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.162460, -0.262866, 0.951056], [0.309017, -0.500000, 0.809017], [0.147621, -0.716567, 0.681718], [0.000000, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0.000000], [-0.951056, 0.162460, 0.262866], [-1.000000, 0.000000, 0.000000], [-0.850651, 0.000000, 0.525731], [-0.955423, -0.295242, 0.000000], [-0.951056, -0.162460, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.162460, -0.262866], [-0.809017, 0.309017, -0.500000], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.162460, -0.262866], [-0.809017, -0.309017, -0.500000], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0.000000, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\n\n/**\n * A loader for the MD2 format.\n *\n * The loader represents the animations of the MD2 asset as an array of animation\n * clips and stores them in the `animations` property of the geometry.\n *\n * ```js\n * const loader = new MD2Loader();\n * const geometry = await loader.loadAsync( './models/md2/ogro/ogro.md2' );\n *\n * const animations = geometry.animations;\n * ```\n *\n * @augments Loader\n * @three_import import { MD2Loader } from 'three/addons/loaders/MD2Loader.js';\n */\nclass MD2Loader extends Loader {\n  /**\n   * Constructs a new MD2 loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n  }\n\n  /**\n   * Starts loading from the given URL and passes the loaded MD2 asset\n   * to the `onLoad()` callback.\n   *\n   * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n   * @param {function(BufferGeometry)} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} [onProgress] - Executed while the loading is in progress.\n   * @param {onErrorCallback} [onError] - Executed when errors occur.\n   */\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  /**\n   * Parses the given MD2 data and returns a geometry.\n   *\n   * @param {ArrayBuffer} buffer - The raw MD2 data as an array buffer.\n   * @return {BufferGeometry} The parsed geometry data.\n   */\n  parse(buffer) {\n    const data = new DataView(buffer);\n\n    // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n    const header = {};\n    const headerNames = ['ident', 'version', 'skinwidth', 'skinheight', 'framesize', 'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames', 'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'];\n    for (let i = 0; i < headerNames.length; i++) {\n      header[headerNames[i]] = data.getInt32(i * 4, true);\n    }\n    if (header.ident !== 844121161 || header.version !== 8) {\n      console.error('Not a valid MD2 file');\n      return;\n    }\n    if (header.offset_end !== data.byteLength) {\n      console.error('Corrupted MD2 file');\n      return;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n\n    // uvs\n\n    const uvsTemp = [];\n    let offset = header.offset_st;\n    for (let i = 0, l = header.num_st; i < l; i++) {\n      const u = data.getInt16(offset + 0, true);\n      const v = data.getInt16(offset + 2, true);\n      uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n      offset += 4;\n    }\n\n    // triangles\n\n    offset = header.offset_tris;\n    const vertexIndices = [];\n    const uvIndices = [];\n    for (let i = 0, l = header.num_tris; i < l; i++) {\n      vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n      uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n      offset += 12;\n    }\n\n    // frames\n\n    const translation = new Vector3();\n    const scale = new Vector3();\n    const frames = [];\n    offset = header.offset_frames;\n    for (let i = 0, l = header.num_frames; i < l; i++) {\n      scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n      translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n      offset += 24;\n      const string = [];\n      for (let j = 0; j < 16; j++) {\n        const character = data.getUint8(offset + j);\n        if (character === 0) break;\n        string[j] = character;\n      }\n      const frame = {\n        name: String.fromCharCode.apply(null, string),\n        vertices: [],\n        normals: []\n      };\n      offset += 16;\n      for (let j = 0; j < header.num_vertices; j++) {\n        let x = data.getUint8(offset++);\n        let y = data.getUint8(offset++);\n        let z = data.getUint8(offset++);\n        const n = _normalData[data.getUint8(offset++)];\n        x = x * scale.x + translation.x;\n        y = y * scale.y + translation.y;\n        z = z * scale.z + translation.z;\n        frame.vertices.push(x, z, y); // convert to Y-up\n        frame.normals.push(n[0], n[2], n[1]); // convert to Y-up\n      }\n      frames.push(frame);\n    }\n\n    // static\n\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const verticesTemp = frames[0].vertices;\n    const normalsTemp = frames[0].normals;\n    for (let i = 0, l = vertexIndices.length; i < l; i++) {\n      const vertexIndex = vertexIndices[i];\n      let stride = vertexIndex * 3;\n\n      //\n\n      const x = verticesTemp[stride];\n      const y = verticesTemp[stride + 1];\n      const z = verticesTemp[stride + 2];\n      positions.push(x, y, z);\n\n      //\n\n      const nx = normalsTemp[stride];\n      const ny = normalsTemp[stride + 1];\n      const nz = normalsTemp[stride + 2];\n      normals.push(nx, ny, nz);\n\n      //\n\n      const uvIndex = uvIndices[i];\n      stride = uvIndex * 2;\n      const u = uvsTemp[stride];\n      const v = uvsTemp[stride + 1];\n      uvs.push(u, v);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    // animation\n\n    const morphPositions = [];\n    const morphNormals = [];\n    for (let i = 0, l = frames.length; i < l; i++) {\n      const frame = frames[i];\n      const attributeName = frame.name;\n      if (frame.vertices.length > 0) {\n        const positions = [];\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j];\n          const stride = vertexIndex * 3;\n          const x = frame.vertices[stride];\n          const y = frame.vertices[stride + 1];\n          const z = frame.vertices[stride + 2];\n          positions.push(x, y, z);\n        }\n        const positionAttribute = new Float32BufferAttribute(positions, 3);\n        positionAttribute.name = attributeName;\n        morphPositions.push(positionAttribute);\n      }\n      if (frame.normals.length > 0) {\n        const normals = [];\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j];\n          const stride = vertexIndex * 3;\n          const nx = frame.normals[stride];\n          const ny = frame.normals[stride + 1];\n          const nz = frame.normals[stride + 2];\n          normals.push(nx, ny, nz);\n        }\n        const normalAttribute = new Float32BufferAttribute(normals, 3);\n        normalAttribute.name = attributeName;\n        morphNormals.push(normalAttribute);\n      }\n    }\n    geometry.morphAttributes.position = morphPositions;\n    geometry.morphAttributes.normal = morphNormals;\n    geometry.morphTargetsRelative = false;\n    geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10, false);\n    return geometry;\n  }\n}\nexport { MD2Loader };","map":{"version":3,"names":["AnimationClip","BufferGeometry","FileLoader","Float32BufferAttribute","Loader","Vector3","_normalData","MD2Loader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","scale","frames","offset_frames","num_frames","set","getFloat32","string","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","vertexIndex","stride","nx","ny","nz","uvIndex","setAttribute","morphPositions","morphNormals","attributeName","jl","positionAttribute","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","CreateClipsFromMorphTargetSequences"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/loaders/MD2Loader.js"],"sourcesContent":["import {\n\tAnimationClip,\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tVector3\n} from 'three';\n\nconst _normalData = [\n\t[ - 0.525731, 0.000000, 0.850651 ], [ - 0.442863, 0.238856, 0.864188 ],\n\t[ - 0.295242, 0.000000, 0.955423 ], [ - 0.309017, 0.500000, 0.809017 ],\n\t[ - 0.162460, 0.262866, 0.951056 ], [ 0.000000, 0.000000, 1.000000 ],\n\t[ 0.000000, 0.850651, 0.525731 ], [ - 0.147621, 0.716567, 0.681718 ],\n\t[ 0.147621, 0.716567, 0.681718 ], [ 0.000000, 0.525731, 0.850651 ],\n\t[ 0.309017, 0.500000, 0.809017 ], [ 0.525731, 0.000000, 0.850651 ],\n\t[ 0.295242, 0.000000, 0.955423 ], [ 0.442863, 0.238856, 0.864188 ],\n\t[ 0.162460, 0.262866, 0.951056 ], [ - 0.681718, 0.147621, 0.716567 ],\n\t[ - 0.809017, 0.309017, 0.500000 ], [ - 0.587785, 0.425325, 0.688191 ],\n\t[ - 0.850651, 0.525731, 0.000000 ], [ - 0.864188, 0.442863, 0.238856 ],\n\t[ - 0.716567, 0.681718, 0.147621 ], [ - 0.688191, 0.587785, 0.425325 ],\n\t[ - 0.500000, 0.809017, 0.309017 ], [ - 0.238856, 0.864188, 0.442863 ],\n\t[ - 0.425325, 0.688191, 0.587785 ], [ - 0.716567, 0.681718, - 0.147621 ],\n\t[ - 0.500000, 0.809017, - 0.309017 ], [ - 0.525731, 0.850651, 0.000000 ],\n\t[ 0.000000, 0.850651, - 0.525731 ], [ - 0.238856, 0.864188, - 0.442863 ],\n\t[ 0.000000, 0.955423, - 0.295242 ], [ - 0.262866, 0.951056, - 0.162460 ],\n\t[ 0.000000, 1.000000, 0.000000 ], [ 0.000000, 0.955423, 0.295242 ],\n\t[ - 0.262866, 0.951056, 0.162460 ], [ 0.238856, 0.864188, 0.442863 ],\n\t[ 0.262866, 0.951056, 0.162460 ], [ 0.500000, 0.809017, 0.309017 ],\n\t[ 0.238856, 0.864188, - 0.442863 ], [ 0.262866, 0.951056, - 0.162460 ],\n\t[ 0.500000, 0.809017, - 0.309017 ], [ 0.850651, 0.525731, 0.000000 ],\n\t[ 0.716567, 0.681718, 0.147621 ], [ 0.716567, 0.681718, - 0.147621 ],\n\t[ 0.525731, 0.850651, 0.000000 ], [ 0.425325, 0.688191, 0.587785 ],\n\t[ 0.864188, 0.442863, 0.238856 ], [ 0.688191, 0.587785, 0.425325 ],\n\t[ 0.809017, 0.309017, 0.500000 ], [ 0.681718, 0.147621, 0.716567 ],\n\t[ 0.587785, 0.425325, 0.688191 ], [ 0.955423, 0.295242, 0.000000 ],\n\t[ 1.000000, 0.000000, 0.000000 ], [ 0.951056, 0.162460, 0.262866 ],\n\t[ 0.850651, - 0.525731, 0.000000 ], [ 0.955423, - 0.295242, 0.000000 ],\n\t[ 0.864188, - 0.442863, 0.238856 ], [ 0.951056, - 0.162460, 0.262866 ],\n\t[ 0.809017, - 0.309017, 0.500000 ], [ 0.681718, - 0.147621, 0.716567 ],\n\t[ 0.850651, 0.000000, 0.525731 ], [ 0.864188, 0.442863, - 0.238856 ],\n\t[ 0.809017, 0.309017, - 0.500000 ], [ 0.951056, 0.162460, - 0.262866 ],\n\t[ 0.525731, 0.000000, - 0.850651 ], [ 0.681718, 0.147621, - 0.716567 ],\n\t[ 0.681718, - 0.147621, - 0.716567 ], [ 0.850651, 0.000000, - 0.525731 ],\n\t[ 0.809017, - 0.309017, - 0.500000 ], [ 0.864188, - 0.442863, - 0.238856 ],\n\t[ 0.951056, - 0.162460, - 0.262866 ], [ 0.147621, 0.716567, - 0.681718 ],\n\t[ 0.309017, 0.500000, - 0.809017 ], [ 0.425325, 0.688191, - 0.587785 ],\n\t[ 0.442863, 0.238856, - 0.864188 ], [ 0.587785, 0.425325, - 0.688191 ],\n\t[ 0.688191, 0.587785, - 0.425325 ], [ - 0.147621, 0.716567, - 0.681718 ],\n\t[ - 0.309017, 0.500000, - 0.809017 ], [ 0.000000, 0.525731, - 0.850651 ],\n\t[ - 0.525731, 0.000000, - 0.850651 ], [ - 0.442863, 0.238856, - 0.864188 ],\n\t[ - 0.295242, 0.000000, - 0.955423 ], [ - 0.162460, 0.262866, - 0.951056 ],\n\t[ 0.000000, 0.000000, - 1.000000 ], [ 0.295242, 0.000000, - 0.955423 ],\n\t[ 0.162460, 0.262866, - 0.951056 ], [ - 0.442863, - 0.238856, - 0.864188 ],\n\t[ - 0.309017, - 0.500000, - 0.809017 ], [ - 0.162460, - 0.262866, - 0.951056 ],\n\t[ 0.000000, - 0.850651, - 0.525731 ], [ - 0.147621, - 0.716567, - 0.681718 ],\n\t[ 0.147621, - 0.716567, - 0.681718 ], [ 0.000000, - 0.525731, - 0.850651 ],\n\t[ 0.309017, - 0.500000, - 0.809017 ], [ 0.442863, - 0.238856, - 0.864188 ],\n\t[ 0.162460, - 0.262866, - 0.951056 ], [ 0.238856, - 0.864188, - 0.442863 ],\n\t[ 0.500000, - 0.809017, - 0.309017 ], [ 0.425325, - 0.688191, - 0.587785 ],\n\t[ 0.716567, - 0.681718, - 0.147621 ], [ 0.688191, - 0.587785, - 0.425325 ],\n\t[ 0.587785, - 0.425325, - 0.688191 ], [ 0.000000, - 0.955423, - 0.295242 ],\n\t[ 0.000000, - 1.000000, 0.000000 ], [ 0.262866, - 0.951056, - 0.162460 ],\n\t[ 0.000000, - 0.850651, 0.525731 ], [ 0.000000, - 0.955423, 0.295242 ],\n\t[ 0.238856, - 0.864188, 0.442863 ], [ 0.262866, - 0.951056, 0.162460 ],\n\t[ 0.500000, - 0.809017, 0.309017 ], [ 0.716567, - 0.681718, 0.147621 ],\n\t[ 0.525731, - 0.850651, 0.000000 ], [ - 0.238856, - 0.864188, - 0.442863 ],\n\t[ - 0.500000, - 0.809017, - 0.309017 ], [ - 0.262866, - 0.951056, - 0.162460 ],\n\t[ - 0.850651, - 0.525731, 0.000000 ], [ - 0.716567, - 0.681718, - 0.147621 ],\n\t[ - 0.716567, - 0.681718, 0.147621 ], [ - 0.525731, - 0.850651, 0.000000 ],\n\t[ - 0.500000, - 0.809017, 0.309017 ], [ - 0.238856, - 0.864188, 0.442863 ],\n\t[ - 0.262866, - 0.951056, 0.162460 ], [ - 0.864188, - 0.442863, 0.238856 ],\n\t[ - 0.809017, - 0.309017, 0.500000 ], [ - 0.688191, - 0.587785, 0.425325 ],\n\t[ - 0.681718, - 0.147621, 0.716567 ], [ - 0.442863, - 0.238856, 0.864188 ],\n\t[ - 0.587785, - 0.425325, 0.688191 ], [ - 0.309017, - 0.500000, 0.809017 ],\n\t[ - 0.147621, - 0.716567, 0.681718 ], [ - 0.425325, - 0.688191, 0.587785 ],\n\t[ - 0.162460, - 0.262866, 0.951056 ], [ 0.442863, - 0.238856, 0.864188 ],\n\t[ 0.162460, - 0.262866, 0.951056 ], [ 0.309017, - 0.500000, 0.809017 ],\n\t[ 0.147621, - 0.716567, 0.681718 ], [ 0.000000, - 0.525731, 0.850651 ],\n\t[ 0.425325, - 0.688191, 0.587785 ], [ 0.587785, - 0.425325, 0.688191 ],\n\t[ 0.688191, - 0.587785, 0.425325 ], [ - 0.955423, 0.295242, 0.000000 ],\n\t[ - 0.951056, 0.162460, 0.262866 ], [ - 1.000000, 0.000000, 0.000000 ],\n\t[ - 0.850651, 0.000000, 0.525731 ], [ - 0.955423, - 0.295242, 0.000000 ],\n\t[ - 0.951056, - 0.162460, 0.262866 ], [ - 0.864188, 0.442863, - 0.238856 ],\n\t[ - 0.951056, 0.162460, - 0.262866 ], [ - 0.809017, 0.309017, - 0.500000 ],\n\t[ - 0.864188, - 0.442863, - 0.238856 ], [ - 0.951056, - 0.162460, - 0.262866 ],\n\t[ - 0.809017, - 0.309017, - 0.500000 ], [ - 0.681718, 0.147621, - 0.716567 ],\n\t[ - 0.681718, - 0.147621, - 0.716567 ], [ - 0.850651, 0.000000, - 0.525731 ],\n\t[ - 0.688191, 0.587785, - 0.425325 ], [ - 0.587785, 0.425325, - 0.688191 ],\n\t[ - 0.425325, 0.688191, - 0.587785 ], [ - 0.425325, - 0.688191, - 0.587785 ],\n\t[ - 0.587785, - 0.425325, - 0.688191 ], [ - 0.688191, - 0.587785, - 0.425325 ]\n];\n\n/**\n * A loader for the MD2 format.\n *\n * The loader represents the animations of the MD2 asset as an array of animation\n * clips and stores them in the `animations` property of the geometry.\n *\n * ```js\n * const loader = new MD2Loader();\n * const geometry = await loader.loadAsync( './models/md2/ogro/ogro.md2' );\n *\n * const animations = geometry.animations;\n * ```\n *\n * @augments Loader\n * @three_import import { MD2Loader } from 'three/addons/loaders/MD2Loader.js';\n */\nclass MD2Loader extends Loader {\n\n\t/**\n\t * Constructs a new MD2 loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded MD2 asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(BufferGeometry)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} [onProgress] - Executed while the loading is in progress.\n\t * @param {onErrorCallback} [onError] - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given MD2 data and returns a geometry.\n\t *\n\t * @param {ArrayBuffer} buffer - The raw MD2 data as an array buffer.\n\t * @return {BufferGeometry} The parsed geometry data.\n\t */\n\tparse( buffer ) {\n\n\t\tconst data = new DataView( buffer );\n\n\t\t// http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n\t\tconst header = {};\n\t\tconst headerNames = [\n\t\t\t'ident', 'version',\n\t\t\t'skinwidth', 'skinheight',\n\t\t\t'framesize',\n\t\t\t'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames',\n\t\t\t'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'\n\t\t];\n\n\t\tfor ( let i = 0; i < headerNames.length; i ++ ) {\n\n\t\t\theader[ headerNames[ i ] ] = data.getInt32( i * 4, true );\n\n\t\t}\n\n\t\tif ( header.ident !== 844121161 || header.version !== 8 ) {\n\n\t\t\tconsole.error( 'Not a valid MD2 file' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( header.offset_end !== data.byteLength ) {\n\n\t\t\tconsole.error( 'Corrupted MD2 file' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\t// uvs\n\n\t\tconst uvsTemp = [];\n\t\tlet offset = header.offset_st;\n\n\t\tfor ( let i = 0, l = header.num_st; i < l; i ++ ) {\n\n\t\t\tconst u = data.getInt16( offset + 0, true );\n\t\t\tconst v = data.getInt16( offset + 2, true );\n\n\t\t\tuvsTemp.push( u / header.skinwidth, 1 - ( v / header.skinheight ) );\n\n\t\t\toffset += 4;\n\n\t\t}\n\n\t\t// triangles\n\n\t\toffset = header.offset_tris;\n\n\t\tconst vertexIndices = [];\n\t\tconst uvIndices = [];\n\n\t\tfor ( let i = 0, l = header.num_tris; i < l; i ++ ) {\n\n\t\t\tvertexIndices.push(\n\t\t\t\tdata.getUint16( offset + 0, true ),\n\t\t\t\tdata.getUint16( offset + 2, true ),\n\t\t\t\tdata.getUint16( offset + 4, true )\n\t\t\t);\n\n\t\t\tuvIndices.push(\n\t\t\t\tdata.getUint16( offset + 6, true ),\n\t\t\t\tdata.getUint16( offset + 8, true ),\n\t\t\t\tdata.getUint16( offset + 10, true )\n\t\t\t);\n\n\t\t\toffset += 12;\n\n\t\t}\n\n\t\t// frames\n\n\t\tconst translation = new Vector3();\n\t\tconst scale = new Vector3();\n\n\t\tconst frames = [];\n\n\t\toffset = header.offset_frames;\n\n\t\tfor ( let i = 0, l = header.num_frames; i < l; i ++ ) {\n\n\t\t\tscale.set(\n\t\t\t\tdata.getFloat32( offset + 0, true ),\n\t\t\t\tdata.getFloat32( offset + 4, true ),\n\t\t\t\tdata.getFloat32( offset + 8, true )\n\t\t\t);\n\n\t\t\ttranslation.set(\n\t\t\t\tdata.getFloat32( offset + 12, true ),\n\t\t\t\tdata.getFloat32( offset + 16, true ),\n\t\t\t\tdata.getFloat32( offset + 20, true )\n\t\t\t);\n\n\t\t\toffset += 24;\n\n\t\t\tconst string = [];\n\n\t\t\tfor ( let j = 0; j < 16; j ++ ) {\n\n\t\t\t\tconst character = data.getUint8( offset + j );\n\t\t\t\tif ( character === 0 ) break;\n\n\t\t\t\tstring[ j ] = character;\n\n\t\t\t}\n\n\t\t\tconst frame = {\n\t\t\t\tname: String.fromCharCode.apply( null, string ),\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: []\n\t\t\t};\n\n\t\t\toffset += 16;\n\n\t\t\tfor ( let j = 0; j < header.num_vertices; j ++ ) {\n\n\t\t\t\tlet x = data.getUint8( offset ++ );\n\t\t\t\tlet y = data.getUint8( offset ++ );\n\t\t\t\tlet z = data.getUint8( offset ++ );\n\t\t\t\tconst n = _normalData[ data.getUint8( offset ++ ) ];\n\n\t\t\t\tx = x * scale.x + translation.x;\n\t\t\t\ty = y * scale.y + translation.y;\n\t\t\t\tz = z * scale.z + translation.z;\n\n\t\t\t\tframe.vertices.push( x, z, y ); // convert to Y-up\n\t\t\t\tframe.normals.push( n[ 0 ], n[ 2 ], n[ 1 ] ); // convert to Y-up\n\n\t\t\t}\n\n\t\t\tframes.push( frame );\n\n\t\t}\n\n\t\t// static\n\n\t\tconst positions = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tconst verticesTemp = frames[ 0 ].vertices;\n\t\tconst normalsTemp = frames[ 0 ].normals;\n\n\t\tfor ( let i = 0, l = vertexIndices.length; i < l; i ++ ) {\n\n\t\t\tconst vertexIndex = vertexIndices[ i ];\n\t\t\tlet stride = vertexIndex * 3;\n\n\t\t\t//\n\n\t\t\tconst x = verticesTemp[ stride ];\n\t\t\tconst y = verticesTemp[ stride + 1 ];\n\t\t\tconst z = verticesTemp[ stride + 2 ];\n\n\t\t\tpositions.push( x, y, z );\n\n\t\t\t//\n\n\t\t\tconst nx = normalsTemp[ stride ];\n\t\t\tconst ny = normalsTemp[ stride + 1 ];\n\t\t\tconst nz = normalsTemp[ stride + 2 ];\n\n\t\t\tnormals.push( nx, ny, nz );\n\n\t\t\t//\n\n\t\t\tconst uvIndex = uvIndices[ i ];\n\t\t\tstride = uvIndex * 2;\n\n\t\t\tconst u = uvsTemp[ stride ];\n\t\t\tconst v = uvsTemp[ stride + 1 ];\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// animation\n\n\t\tconst morphPositions = [];\n\t\tconst morphNormals = [];\n\n\t\tfor ( let i = 0, l = frames.length; i < l; i ++ ) {\n\n\t\t\tconst frame = frames[ i ];\n\t\t\tconst attributeName = frame.name;\n\n\t\t\tif ( frame.vertices.length > 0 ) {\n\n\t\t\t\tconst positions = [];\n\n\t\t\t\tfor ( let j = 0, jl = vertexIndices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertexIndex = vertexIndices[ j ];\n\t\t\t\t\tconst stride = vertexIndex * 3;\n\n\t\t\t\t\tconst x = frame.vertices[ stride ];\n\t\t\t\t\tconst y = frame.vertices[ stride + 1 ];\n\t\t\t\t\tconst z = frame.vertices[ stride + 2 ];\n\n\t\t\t\t\tpositions.push( x, y, z );\n\n\t\t\t\t}\n\n\t\t\t\tconst positionAttribute = new Float32BufferAttribute( positions, 3 );\n\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\tmorphPositions.push( positionAttribute );\n\n\t\t\t}\n\n\t\t\tif ( frame.normals.length > 0 ) {\n\n\t\t\t\tconst normals = [];\n\n\t\t\t\tfor ( let j = 0, jl = vertexIndices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertexIndex = vertexIndices[ j ];\n\t\t\t\t\tconst stride = vertexIndex * 3;\n\n\t\t\t\t\tconst nx = frame.normals[ stride ];\n\t\t\t\t\tconst ny = frame.normals[ stride + 1 ];\n\t\t\t\t\tconst nz = frame.normals[ stride + 2 ];\n\n\t\t\t\t\tnormals.push( nx, ny, nz );\n\n\t\t\t\t}\n\n\t\t\t\tconst normalAttribute = new Float32BufferAttribute( normals, 3 );\n\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\tmorphNormals.push( normalAttribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.morphAttributes.position = morphPositions;\n\t\tgeometry.morphAttributes.normal = morphNormals;\n\t\tgeometry.morphTargetsRelative = false;\n\n\t\tgeometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences( frames, 10, false );\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nexport { MD2Loader };\n"],"mappings":"AAAA,SACCA,aAAa,EACbC,cAAc,EACdC,UAAU,EACVC,sBAAsB,EACtBC,MAAM,EACNC,OAAO,QACD,OAAO;AAEd,MAAMC,WAAW,GAAG,CACnB,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACpE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAClE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACpE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC9E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC5E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC9E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC5E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACxE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EACtE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EACxE,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAC1E,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,CAAE,QAAQ,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}