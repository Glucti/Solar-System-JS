{"ast":null,"code":"import { Controls, Euler, Vector3 } from 'three';\nconst _euler = new Euler(0, 0, 0, 'YXZ');\nconst _vector = new Vector3();\n\n/**\n * Fires when the user moves the mouse.\n *\n * @event PointerLockControls#change\n * @type {Object}\n */\nconst _changeEvent = {\n  type: 'change'\n};\n\n/**\n * Fires when the pointer lock status is \"locked\" (in other words: the mouse is captured).\n *\n * @event PointerLockControls#lock\n * @type {Object}\n */\nconst _lockEvent = {\n  type: 'lock'\n};\n\n/**\n * Fires when the pointer lock status is \"unlocked\" (in other words: the mouse is not captured anymore).\n *\n * @event PointerLockControls#unlock\n * @type {Object}\n */\nconst _unlockEvent = {\n  type: 'unlock'\n};\nconst _MOUSE_SENSITIVITY = 0.002;\nconst _PI_2 = Math.PI / 2;\n\n/**\n * The implementation of this class is based on the [Pointer Lock API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API}.\n * `PointerLockControls` is a perfect choice for first person 3D games.\n *\n * ```js\n * const controls = new PointerLockControls( camera, document.body );\n *\n * // add event listener to show/hide a UI (e.g. the game's menu)\n * controls.addEventListener( 'lock', function () {\n *\n * \tmenu.style.display = 'none';\n *\n * } );\n *\n * controls.addEventListener( 'unlock', function () {\n *\n * \tmenu.style.display = 'block';\n *\n * } );\n * ```\n *\n * @augments Controls\n * @three_import import { PointerLockControls } from 'three/addons/controls/PointerLockControls.js';\n */\nclass PointerLockControls extends Controls {\n  /**\n   * Constructs a new controls instance.\n   *\n   * @param {Camera} camera - The camera that is managed by the controls.\n   * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n   */\n  constructor(camera, domElement = null) {\n    super(camera, domElement);\n\n    /**\n     * Whether the controls are locked or not.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default false\n     */\n    this.isLocked = false;\n\n    /**\n     * Camera pitch, lower limit. Range is '[0, Math.PI]' in radians.\n     *\n     * @type {number}\n     * @default 0\n     */\n    this.minPolarAngle = 0;\n\n    /**\n     * Camera pitch, upper limit. Range is '[0, Math.PI]' in radians.\n     *\n     * @type {number}\n     * @default Math.PI\n     */\n    this.maxPolarAngle = Math.PI;\n\n    /**\n     * Multiplier for how much the pointer movement influences the camera rotation.\n     *\n     * @type {number}\n     * @default 1\n     */\n    this.pointerSpeed = 1.0;\n\n    // event listeners\n\n    this._onMouseMove = onMouseMove.bind(this);\n    this._onPointerlockChange = onPointerlockChange.bind(this);\n    this._onPointerlockError = onPointerlockError.bind(this);\n    if (this.domElement !== null) {\n      this.connect(this.domElement);\n    }\n  }\n  connect(element) {\n    super.connect(element);\n    this.domElement.ownerDocument.addEventListener('mousemove', this._onMouseMove);\n    this.domElement.ownerDocument.addEventListener('pointerlockchange', this._onPointerlockChange);\n    this.domElement.ownerDocument.addEventListener('pointerlockerror', this._onPointerlockError);\n  }\n  disconnect() {\n    this.domElement.ownerDocument.removeEventListener('mousemove', this._onMouseMove);\n    this.domElement.ownerDocument.removeEventListener('pointerlockchange', this._onPointerlockChange);\n    this.domElement.ownerDocument.removeEventListener('pointerlockerror', this._onPointerlockError);\n  }\n  dispose() {\n    this.disconnect();\n  }\n  getObject() {\n    console.warn('THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead.'); // @deprecated r169\n\n    return this.object;\n  }\n\n  /**\n   * Returns the look direction of the camera.\n   *\n   * @param {Vector3} v - The target vector that is used to store the method's result.\n   * @return {Vector3} The normalized direction vector.\n   */\n  getDirection(v) {\n    return v.set(0, 0, -1).applyQuaternion(this.object.quaternion);\n  }\n\n  /**\n   * Moves the camera forward parallel to the xz-plane. Assumes camera.up is y-up.\n   *\n   * @param {number} distance - The signed distance.\n   */\n  moveForward(distance) {\n    if (this.enabled === false) return;\n\n    // move forward parallel to the xz-plane\n    // assumes camera.up is y-up\n\n    const camera = this.object;\n    _vector.setFromMatrixColumn(camera.matrix, 0);\n    _vector.crossVectors(camera.up, _vector);\n    camera.position.addScaledVector(_vector, distance);\n  }\n\n  /**\n   * Moves the camera sidewards parallel to the xz-plane.\n   *\n   * @param {number} distance - The signed distance.\n   */\n  moveRight(distance) {\n    if (this.enabled === false) return;\n    const camera = this.object;\n    _vector.setFromMatrixColumn(camera.matrix, 0);\n    camera.position.addScaledVector(_vector, distance);\n  }\n\n  /**\n   * Activates the pointer lock.\n   *\n   * @param {boolean} [unadjustedMovement=false] - Disables OS-level adjustment for mouse acceleration, and accesses raw mouse input instead.\n   * Setting it to true will disable mouse acceleration.\n   */\n  lock(unadjustedMovement = false) {\n    this.domElement.requestPointerLock({\n      unadjustedMovement\n    });\n  }\n\n  /**\n   * Exits the pointer lock.\n   */\n  unlock() {\n    this.domElement.ownerDocument.exitPointerLock();\n  }\n}\n\n// event listeners\n\nfunction onMouseMove(event) {\n  if (this.enabled === false || this.isLocked === false) return;\n  const camera = this.object;\n  _euler.setFromQuaternion(camera.quaternion);\n  _euler.y -= event.movementX * _MOUSE_SENSITIVITY * this.pointerSpeed;\n  _euler.x -= event.movementY * _MOUSE_SENSITIVITY * this.pointerSpeed;\n  _euler.x = Math.max(_PI_2 - this.maxPolarAngle, Math.min(_PI_2 - this.minPolarAngle, _euler.x));\n  camera.quaternion.setFromEuler(_euler);\n  this.dispatchEvent(_changeEvent);\n}\nfunction onPointerlockChange() {\n  if (this.domElement.ownerDocument.pointerLockElement === this.domElement) {\n    this.dispatchEvent(_lockEvent);\n    this.isLocked = true;\n  } else {\n    this.dispatchEvent(_unlockEvent);\n    this.isLocked = false;\n  }\n}\nfunction onPointerlockError() {\n  console.error('THREE.PointerLockControls: Unable to use Pointer Lock API');\n}\nexport { PointerLockControls };","map":{"version":3,"names":["Controls","Euler","Vector3","_euler","_vector","_changeEvent","type","_lockEvent","_unlockEvent","_MOUSE_SENSITIVITY","_PI_2","Math","PI","PointerLockControls","constructor","camera","domElement","isLocked","minPolarAngle","maxPolarAngle","pointerSpeed","_onMouseMove","onMouseMove","bind","_onPointerlockChange","onPointerlockChange","_onPointerlockError","onPointerlockError","connect","element","ownerDocument","addEventListener","disconnect","removeEventListener","dispose","getObject","console","warn","object","getDirection","v","set","applyQuaternion","quaternion","moveForward","distance","enabled","setFromMatrixColumn","matrix","crossVectors","up","position","addScaledVector","moveRight","lock","unadjustedMovement","requestPointerLock","unlock","exitPointerLock","event","setFromQuaternion","y","movementX","x","movementY","max","min","setFromEuler","dispatchEvent","pointerLockElement","error"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/controls/PointerLockControls.js"],"sourcesContent":["import {\n\tControls,\n\tEuler,\n\tVector3\n} from 'three';\n\nconst _euler = new Euler( 0, 0, 0, 'YXZ' );\nconst _vector = new Vector3();\n\n/**\n * Fires when the user moves the mouse.\n *\n * @event PointerLockControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when the pointer lock status is \"locked\" (in other words: the mouse is captured).\n *\n * @event PointerLockControls#lock\n * @type {Object}\n */\nconst _lockEvent = { type: 'lock' };\n\n/**\n * Fires when the pointer lock status is \"unlocked\" (in other words: the mouse is not captured anymore).\n *\n * @event PointerLockControls#unlock\n * @type {Object}\n */\nconst _unlockEvent = { type: 'unlock' };\n\nconst _MOUSE_SENSITIVITY = 0.002;\nconst _PI_2 = Math.PI / 2;\n\n/**\n * The implementation of this class is based on the [Pointer Lock API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API}.\n * `PointerLockControls` is a perfect choice for first person 3D games.\n *\n * ```js\n * const controls = new PointerLockControls( camera, document.body );\n *\n * // add event listener to show/hide a UI (e.g. the game's menu)\n * controls.addEventListener( 'lock', function () {\n *\n * \tmenu.style.display = 'none';\n *\n * } );\n *\n * controls.addEventListener( 'unlock', function () {\n *\n * \tmenu.style.display = 'block';\n *\n * } );\n * ```\n *\n * @augments Controls\n * @three_import import { PointerLockControls } from 'three/addons/controls/PointerLockControls.js';\n */\nclass PointerLockControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Camera} camera - The camera that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( camera, domElement = null ) {\n\n\t\tsuper( camera, domElement );\n\n\t\t/**\n\t\t * Whether the controls are locked or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default false\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\t/**\n\t\t * Camera pitch, lower limit. Range is '[0, Math.PI]' in radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * Camera pitch, upper limit. Range is '[0, Math.PI]' in radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * Multiplier for how much the pointer movement influences the camera rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.pointerSpeed = 1.0;\n\n\t\t// event listeners\n\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\t\tthis._onPointerlockChange = onPointerlockChange.bind( this );\n\t\tthis._onPointerlockError = onPointerlockError.bind( this );\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.ownerDocument.addEventListener( 'mousemove', this._onMouseMove );\n\t\tthis.domElement.ownerDocument.addEventListener( 'pointerlockchange', this._onPointerlockChange );\n\t\tthis.domElement.ownerDocument.addEventListener( 'pointerlockerror', this._onPointerlockError );\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.ownerDocument.removeEventListener( 'mousemove', this._onMouseMove );\n\t\tthis.domElement.ownerDocument.removeEventListener( 'pointerlockchange', this._onPointerlockChange );\n\t\tthis.domElement.ownerDocument.removeEventListener( 'pointerlockerror', this._onPointerlockError );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetObject() {\n\n\t\tconsole.warn( 'THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead.' ); // @deprecated r169\n\n\t\treturn this.object;\n\n\t}\n\n\t/**\n\t * Returns the look direction of the camera.\n\t *\n\t * @param {Vector3} v - The target vector that is used to store the method's result.\n\t * @return {Vector3} The normalized direction vector.\n\t */\n\tgetDirection( v ) {\n\n\t\treturn v.set( 0, 0, - 1 ).applyQuaternion( this.object.quaternion );\n\n\t}\n\n\t/**\n\t * Moves the camera forward parallel to the xz-plane. Assumes camera.up is y-up.\n\t *\n\t * @param {number} distance - The signed distance.\n\t */\n\tmoveForward( distance ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// move forward parallel to the xz-plane\n\t\t// assumes camera.up is y-up\n\n\t\tconst camera = this.object;\n\n\t\t_vector.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\t_vector.crossVectors( camera.up, _vector );\n\n\t\tcamera.position.addScaledVector( _vector, distance );\n\n\t}\n\n\t/**\n\t * Moves the camera sidewards parallel to the xz-plane.\n\t *\n\t * @param {number} distance - The signed distance.\n\t */\n\tmoveRight( distance ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\tconst camera = this.object;\n\n\t\t_vector.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\tcamera.position.addScaledVector( _vector, distance );\n\n\t}\n\n\t/**\n\t * Activates the pointer lock.\n\t *\n\t * @param {boolean} [unadjustedMovement=false] - Disables OS-level adjustment for mouse acceleration, and accesses raw mouse input instead.\n\t * Setting it to true will disable mouse acceleration.\n\t */\n\tlock( unadjustedMovement = false ) {\n\n\t\tthis.domElement.requestPointerLock( {\n\t\t\tunadjustedMovement\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the pointer lock.\n\t */\n\tunlock() {\n\n\t\tthis.domElement.ownerDocument.exitPointerLock();\n\n\t}\n\n}\n\n// event listeners\n\nfunction onMouseMove( event ) {\n\n\tif ( this.enabled === false || this.isLocked === false ) return;\n\n\tconst camera = this.object;\n\t_euler.setFromQuaternion( camera.quaternion );\n\n\t_euler.y -= event.movementX * _MOUSE_SENSITIVITY * this.pointerSpeed;\n\t_euler.x -= event.movementY * _MOUSE_SENSITIVITY * this.pointerSpeed;\n\n\t_euler.x = Math.max( _PI_2 - this.maxPolarAngle, Math.min( _PI_2 - this.minPolarAngle, _euler.x ) );\n\n\tcamera.quaternion.setFromEuler( _euler );\n\n\tthis.dispatchEvent( _changeEvent );\n\n}\n\nfunction onPointerlockChange() {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement === this.domElement ) {\n\n\t\tthis.dispatchEvent( _lockEvent );\n\n\t\tthis.isLocked = true;\n\n\t} else {\n\n\t\tthis.dispatchEvent( _unlockEvent );\n\n\t\tthis.isLocked = false;\n\n\t}\n\n}\n\nfunction onPointerlockError() {\n\n\tconsole.error( 'THREE.PointerLockControls: Unable to use Pointer Lock API' );\n\n}\n\nexport { PointerLockControls };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}