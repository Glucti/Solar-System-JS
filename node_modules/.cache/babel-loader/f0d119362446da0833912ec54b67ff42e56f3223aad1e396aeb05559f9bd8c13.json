{"ast":null,"code":"import { AnimationClip, BooleanKeyframeTrack, ColorKeyframeTrack, NumberKeyframeTrack, Vector3, VectorKeyframeTrack } from 'three';\n\n/**\n * A utility class with factory methods for creating basic animation clips.\n *\n * @hideconstructor\n * @three_import import { AnimationClipCreator } from 'three/addons/animation/AnimationClipCreator.js';\n */\nclass AnimationClipCreator {\n  /**\n   * Creates an animation clip that rotates a 3D object 360 degrees\n   * in the given period of time around the given axis.\n   *\n   * @param {number} period - The duration of the animation.\n   * @param {('x'|'y'|'z')} [axis='x'] - The axis of rotation.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreateRotationAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 360];\n    const trackName = '.rotation[' + axis + ']';\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', period, [track]);\n  }\n\n  /**\n   * Creates an animation clip that scales a 3D object from `0` to `1`\n   * in the given period of time along the given axis.\n   *\n   * @param {number} period - The duration of the animation.\n   * @param {('x'|'y'|'z')} [axis='x'] - The axis to scale the 3D object along.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreateScaleAxisAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 1];\n    const trackName = '.scale[' + axis + ']';\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', period, [track]);\n  }\n\n  /**\n   * Creates an animation clip that translates a 3D object in a shake pattern\n   * in the given period.\n   *\n   * @param {number} duration - The duration of the animation.\n   * @param {Vector3} shakeScale - The scale of the shake.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = '.position';\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', duration, [track]);\n  }\n\n  /**\n   * Creates an animation clip that scales a 3D object in a pulse pattern\n   * in the given period.\n   *\n   * @param {number} duration - The duration of the animation.\n   * @param {number} pulseScale - The scale of the pulse.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = '.scale';\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', duration, [track]);\n  }\n\n  /**\n   * Creates an animation clip that toggles the visibility of a 3D object.\n   *\n   * @param {number} duration - The duration of the animation.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n      values = [true, false, true];\n    const trackName = '.visible';\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', duration, [track]);\n  }\n\n  /**\n   * Creates an animation clip that animates the `color` property of a 3D object's\n   * material.\n   *\n   * @param {number} duration - The duration of the animation.\n   * @param {Array<Color>} colors - An array of colors that should be sequentially animated.\n   * @return {AnimationClip} The created animation clip.\n   */\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n      values = [],\n      timeStep = colors.length > 1 ? duration / (colors.length - 1) : 0;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = '.material.color';\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip('', duration, [track]);\n  }\n}\nexport { AnimationClipCreator };","map":{"version":3,"names":["AnimationClip","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","Vector3","VectorKeyframeTrack","AnimationClipCreator","CreateRotationAnimation","period","axis","times","values","trackName","track","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","tmp","i","push","set","Math","random","multiply","toArray","length","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","CreateMaterialColorAnimation","colors","timeStep","color","r","g","b"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/animation/AnimationClipCreator.js"],"sourcesContent":["import {\n\tAnimationClip,\n\tBooleanKeyframeTrack,\n\tColorKeyframeTrack,\n\tNumberKeyframeTrack,\n\tVector3,\n\tVectorKeyframeTrack\n} from 'three';\n\n/**\n * A utility class with factory methods for creating basic animation clips.\n *\n * @hideconstructor\n * @three_import import { AnimationClipCreator } from 'three/addons/animation/AnimationClipCreator.js';\n */\nclass AnimationClipCreator {\n\n\t/**\n\t * Creates an animation clip that rotates a 3D object 360 degrees\n\t * in the given period of time around the given axis.\n\t *\n\t * @param {number} period - The duration of the animation.\n\t * @param {('x'|'y'|'z')} [axis='x'] - The axis of rotation.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreateRotationAnimation( period, axis = 'x' ) {\n\n\t\tconst times = [ 0, period ], values = [ 0, 360 ];\n\n\t\tconst trackName = '.rotation[' + axis + ']';\n\n\t\tconst track = new NumberKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', period, [ track ] );\n\n\t}\n\n\t/**\n\t * Creates an animation clip that scales a 3D object from `0` to `1`\n\t * in the given period of time along the given axis.\n\t *\n\t * @param {number} period - The duration of the animation.\n\t * @param {('x'|'y'|'z')} [axis='x'] - The axis to scale the 3D object along.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreateScaleAxisAnimation( period, axis = 'x' ) {\n\n\t\tconst times = [ 0, period ], values = [ 0, 1 ];\n\n\t\tconst trackName = '.scale[' + axis + ']';\n\n\t\tconst track = new NumberKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', period, [ track ] );\n\n\t}\n\n\t/**\n\t * Creates an animation clip that translates a 3D object in a shake pattern\n\t * in the given period.\n\t *\n\t * @param {number} duration - The duration of the animation.\n\t * @param {Vector3} shakeScale - The scale of the shake.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreateShakeAnimation( duration, shakeScale ) {\n\n\t\tconst times = [], values = [], tmp = new Vector3();\n\n\t\tfor ( let i = 0; i < duration * 10; i ++ ) {\n\n\t\t\ttimes.push( i / 10 );\n\n\t\t\ttmp.set( Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0 ).\n\t\t\t\tmultiply( shakeScale ).\n\t\t\t\ttoArray( values, values.length );\n\n\t\t}\n\n\t\tconst trackName = '.position';\n\n\t\tconst track = new VectorKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', duration, [ track ] );\n\n\t}\n\n\t/**\n\t * Creates an animation clip that scales a 3D object in a pulse pattern\n\t * in the given period.\n\t *\n\t * @param {number} duration - The duration of the animation.\n\t * @param {number} pulseScale - The scale of the pulse.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreatePulsationAnimation( duration, pulseScale ) {\n\n\t\tconst times = [], values = [], tmp = new Vector3();\n\n\t\tfor ( let i = 0; i < duration * 10; i ++ ) {\n\n\t\t\ttimes.push( i / 10 );\n\n\t\t\tconst scaleFactor = Math.random() * pulseScale;\n\t\t\ttmp.set( scaleFactor, scaleFactor, scaleFactor ).\n\t\t\t\ttoArray( values, values.length );\n\n\t\t}\n\n\t\tconst trackName = '.scale';\n\n\t\tconst track = new VectorKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', duration, [ track ] );\n\n\t}\n\n\t/**\n\t * Creates an animation clip that toggles the visibility of a 3D object.\n\t *\n\t * @param {number} duration - The duration of the animation.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreateVisibilityAnimation( duration ) {\n\n\t\tconst times = [ 0, duration / 2, duration ], values = [ true, false, true ];\n\n\t\tconst trackName = '.visible';\n\n\t\tconst track = new BooleanKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', duration, [ track ] );\n\n\t}\n\n\t/**\n\t * Creates an animation clip that animates the `color` property of a 3D object's\n\t * material.\n\t *\n\t * @param {number} duration - The duration of the animation.\n\t * @param {Array<Color>} colors - An array of colors that should be sequentially animated.\n\t * @return {AnimationClip} The created animation clip.\n\t */\n\tstatic CreateMaterialColorAnimation( duration, colors ) {\n\n\t\tconst times = [], values = [],\n\t\t\ttimeStep = ( colors.length > 1 ) ? duration / ( colors.length - 1 ) : 0;\n\n\t\tfor ( let i = 0; i < colors.length; i ++ ) {\n\n\t\t\ttimes.push( i * timeStep );\n\n\t\t\tconst color = colors[ i ];\n\t\t\tvalues.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\tconst trackName = '.material.color';\n\n\t\tconst track = new ColorKeyframeTrack( trackName, times, values );\n\n\t\treturn new AnimationClip( '', duration, [ track ] );\n\n\t}\n\n}\n\nexport { AnimationClipCreator };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}