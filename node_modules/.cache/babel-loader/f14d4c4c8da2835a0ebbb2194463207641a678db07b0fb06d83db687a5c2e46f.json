{"ast":null,"code":"import { LinearFilter, Matrix3, NearestFilter, RGBAFormat, ShaderMaterial, StereoCamera, WebGLRenderTarget } from 'three';\nimport { FullScreenQuad } from '../postprocessing/Pass.js';\n\n/**\n * A class that creates an anaglyph effect.\n *\n * Note that this class can only be used with {@link WebGLRenderer}.\n * When using {@link WebGPURenderer}, use {@link AnaglyphPassNode}.\n *\n * @three_import import { AnaglyphEffect } from 'three/addons/effects/AnaglyphEffect.js';\n */\nclass AnaglyphEffect {\n  /**\n   * Constructs a new anaglyph effect.\n   *\n   * @param {WebGLRenderer} renderer - The renderer.\n   * @param {number} width - The width of the effect in physical pixels.\n   * @param {number} height - The height of the effect in physical pixels.\n   */\n  constructor(renderer, width = 512, height = 512) {\n    // Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\n\n    this.colorMatrixLeft = new Matrix3().fromArray([0.456100, -0.0400822, -0.0152161, 0.500484, -0.0378246, -0.0205971, 0.176381, -0.0157589, -0.00546856]);\n    this.colorMatrixRight = new Matrix3().fromArray([-0.0434706, 0.378476, -0.0721527, -0.0879388, 0.73364, -0.112961, -0.00155529, -0.0184503, 1.2264]);\n    const _stereo = new StereoCamera();\n    const _params = {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    };\n    const _renderTargetL = new WebGLRenderTarget(width, height, _params);\n    const _renderTargetR = new WebGLRenderTarget(width, height, _params);\n    const _material = new ShaderMaterial({\n      uniforms: {\n        'mapLeft': {\n          value: _renderTargetL.texture\n        },\n        'mapRight': {\n          value: _renderTargetR.texture\n        },\n        'colorMatrixLeft': {\n          value: this.colorMatrixLeft\n        },\n        'colorMatrixRight': {\n          value: this.colorMatrixRight\n        }\n      },\n      vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = vec2( uv.x, uv.y );', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n      fragmentShader: ['uniform sampler2D mapLeft;', 'uniform sampler2D mapRight;', 'varying vec2 vUv;', 'uniform mat3 colorMatrixLeft;', 'uniform mat3 colorMatrixRight;', 'void main() {', '\tvec2 uv = vUv;', '\tvec4 colorL = texture2D( mapLeft, uv );', '\tvec4 colorR = texture2D( mapRight, uv );', '\tvec3 color = clamp(', '\t\t\tcolorMatrixLeft * colorL.rgb +', '\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );', '\tgl_FragColor = vec4(', '\t\t\tcolor.r, color.g, color.b,', '\t\t\tmax( colorL.a, colorR.a ) );', '\t#include <tonemapping_fragment>', '\t#include <colorspace_fragment>', '}'].join('\\n')\n    });\n    const _quad = new FullScreenQuad(_material);\n\n    /**\n     * Resizes the effect.\n     *\n     * @param {number} width - The width of the effect in logical pixels.\n     * @param {number} height - The height of the effect in logical pixels.\n     */\n    this.setSize = function (width, height) {\n      renderer.setSize(width, height);\n      const pixelRatio = renderer.getPixelRatio();\n      _renderTargetL.setSize(width * pixelRatio, height * pixelRatio);\n      _renderTargetR.setSize(width * pixelRatio, height * pixelRatio);\n    };\n\n    /**\n     * When using this effect, this method should be called instead of the\n     * default {@link WebGLRenderer#render}.\n     *\n     * @param {Object3D} scene - The scene to render.\n     * @param {Camera} camera - The camera.\n     */\n    this.render = function (scene, camera) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n      _stereo.update(camera);\n      renderer.setRenderTarget(_renderTargetL);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraL);\n      renderer.setRenderTarget(_renderTargetR);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraR);\n      renderer.setRenderTarget(null);\n      _quad.render(renderer);\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n\n    /**\n     * Frees internal resources. This method should be called\n     * when the effect is no longer required.\n     */\n    this.dispose = function () {\n      _renderTargetL.dispose();\n      _renderTargetR.dispose();\n      _material.dispose();\n      _quad.dispose();\n    };\n  }\n}\nexport { AnaglyphEffect };","map":{"version":3,"names":["LinearFilter","Matrix3","NearestFilter","RGBAFormat","ShaderMaterial","StereoCamera","WebGLRenderTarget","FullScreenQuad","AnaglyphEffect","constructor","renderer","width","height","colorMatrixLeft","fromArray","colorMatrixRight","_stereo","_params","minFilter","magFilter","format","_renderTargetL","_renderTargetR","_material","uniforms","value","texture","vertexShader","join","fragmentShader","_quad","setSize","pixelRatio","getPixelRatio","render","scene","camera","currentRenderTarget","getRenderTarget","matrixWorldAutoUpdate","updateMatrixWorld","parent","update","setRenderTarget","clear","cameraL","cameraR","dispose"],"sources":["/home/powqy/Desktop/Design/solar-system-orbits/node_modules/three/examples/jsm/effects/AnaglyphEffect.js"],"sourcesContent":["import {\n\tLinearFilter,\n\tMatrix3,\n\tNearestFilter,\n\tRGBAFormat,\n\tShaderMaterial,\n\tStereoCamera,\n\tWebGLRenderTarget\n} from 'three';\nimport { FullScreenQuad } from '../postprocessing/Pass.js';\n\n/**\n * A class that creates an anaglyph effect.\n *\n * Note that this class can only be used with {@link WebGLRenderer}.\n * When using {@link WebGPURenderer}, use {@link AnaglyphPassNode}.\n *\n * @three_import import { AnaglyphEffect } from 'three/addons/effects/AnaglyphEffect.js';\n */\nclass AnaglyphEffect {\n\n\t/**\n\t * Constructs a new anaglyph effect.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {number} width - The width of the effect in physical pixels.\n\t * @param {number} height - The height of the effect in physical pixels.\n\t */\n\tconstructor( renderer, width = 512, height = 512 ) {\n\n\t\t// Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\n\n\t\tthis.colorMatrixLeft = new Matrix3().fromArray( [\n\t\t\t0.456100, - 0.0400822, - 0.0152161,\n\t\t\t0.500484, - 0.0378246, - 0.0205971,\n\t\t\t0.176381, - 0.0157589, - 0.00546856\n\t\t] );\n\n\t\tthis.colorMatrixRight = new Matrix3().fromArray( [\n\t\t\t- 0.0434706, 0.378476, - 0.0721527,\n\t\t\t- 0.0879388, 0.73364, - 0.112961,\n\t\t\t- 0.00155529, - 0.0184503, 1.2264\n\t\t] );\n\n\t\tconst _stereo = new StereoCamera();\n\n\t\tconst _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\tconst _renderTargetL = new WebGLRenderTarget( width, height, _params );\n\t\tconst _renderTargetR = new WebGLRenderTarget( width, height, _params );\n\n\t\tconst _material = new ShaderMaterial( {\n\n\t\t\tuniforms: {\n\n\t\t\t\t'mapLeft': { value: _renderTargetL.texture },\n\t\t\t\t'mapRight': { value: _renderTargetR.texture },\n\n\t\t\t\t'colorMatrixLeft': { value: this.colorMatrixLeft },\n\t\t\t\t'colorMatrixRight': { value: this.colorMatrixRight }\n\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvUv = vec2( uv.x, uv.y );',\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'uniform sampler2D mapLeft;',\n\t\t\t\t'uniform sampler2D mapRight;',\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'uniform mat3 colorMatrixLeft;',\n\t\t\t\t'uniform mat3 colorMatrixRight;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvec2 uv = vUv;',\n\n\t\t\t\t'\tvec4 colorL = texture2D( mapLeft, uv );',\n\t\t\t\t'\tvec4 colorR = texture2D( mapRight, uv );',\n\n\t\t\t\t'\tvec3 color = clamp(',\n\t\t\t\t'\t\t\tcolorMatrixLeft * colorL.rgb +',\n\t\t\t\t'\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );',\n\n\t\t\t\t'\tgl_FragColor = vec4(',\n\t\t\t\t'\t\t\tcolor.r, color.g, color.b,',\n\t\t\t\t'\t\t\tmax( colorL.a, colorR.a ) );',\n\n\t\t\t\t'\t#include <tonemapping_fragment>',\n\t\t\t\t'\t#include <colorspace_fragment>',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t} );\n\n\t\tconst _quad = new FullScreenQuad( _material );\n\n\t\t/**\n\t\t * Resizes the effect.\n\t\t *\n\t\t * @param {number} width - The width of the effect in logical pixels.\n\t\t * @param {number} height - The height of the effect in logical pixels.\n\t\t */\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\trenderer.setSize( width, height );\n\n\t\t\tconst pixelRatio = renderer.getPixelRatio();\n\n\t\t\t_renderTargetL.setSize( width * pixelRatio, height * pixelRatio );\n\t\t\t_renderTargetR.setSize( width * pixelRatio, height * pixelRatio );\n\n\t\t};\n\n\t\t/**\n\t\t * When using this effect, this method should be called instead of the\n\t\t * default {@link WebGLRenderer#render}.\n\t\t *\n\t\t * @param {Object3D} scene - The scene to render.\n\t\t * @param {Camera} camera - The camera.\n\t\t */\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_stereo.update( camera );\n\n\t\t\trenderer.setRenderTarget( _renderTargetL );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraL );\n\n\t\t\trenderer.setRenderTarget( _renderTargetR );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraR );\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\t_quad.render( renderer );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\t/**\n\t\t * Frees internal resources. This method should be called\n\t\t * when the effect is no longer required.\n\t\t */\n\t\tthis.dispose = function () {\n\n\t\t\t_renderTargetL.dispose();\n\t\t\t_renderTargetR.dispose();\n\n\t\t\t_material.dispose();\n\t\t\t_quad.dispose();\n\n\t\t};\n\n\t}\n\n}\n\nexport { AnaglyphEffect };\n"],"mappings":"AAAA,SACCA,YAAY,EACZC,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZC,iBAAiB,QACX,OAAO;AACd,SAASC,cAAc,QAAQ,2BAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAAEC,QAAQ,EAAEC,KAAK,GAAG,GAAG,EAAEC,MAAM,GAAG,GAAG,EAAG;IAElD;;IAEA,IAAI,CAACC,eAAe,GAAG,IAAIZ,OAAO,CAAC,CAAC,CAACa,SAAS,CAAE,CAC/C,QAAQ,EAAE,CAAE,SAAS,EAAE,CAAE,SAAS,EAClC,QAAQ,EAAE,CAAE,SAAS,EAAE,CAAE,SAAS,EAClC,QAAQ,EAAE,CAAE,SAAS,EAAE,CAAE,UAAU,CAClC,CAAC;IAEH,IAAI,CAACC,gBAAgB,GAAG,IAAId,OAAO,CAAC,CAAC,CAACa,SAAS,CAAE,CAChD,CAAE,SAAS,EAAE,QAAQ,EAAE,CAAE,SAAS,EAClC,CAAE,SAAS,EAAE,OAAO,EAAE,CAAE,QAAQ,EAChC,CAAE,UAAU,EAAE,CAAE,SAAS,EAAE,MAAM,CAChC,CAAC;IAEH,MAAME,OAAO,GAAG,IAAIX,YAAY,CAAC,CAAC;IAElC,MAAMY,OAAO,GAAG;MAAEC,SAAS,EAAElB,YAAY;MAAEmB,SAAS,EAAEjB,aAAa;MAAEkB,MAAM,EAAEjB;IAAW,CAAC;IAEzF,MAAMkB,cAAc,GAAG,IAAIf,iBAAiB,CAAEK,KAAK,EAAEC,MAAM,EAAEK,OAAQ,CAAC;IACtE,MAAMK,cAAc,GAAG,IAAIhB,iBAAiB,CAAEK,KAAK,EAAEC,MAAM,EAAEK,OAAQ,CAAC;IAEtE,MAAMM,SAAS,GAAG,IAAInB,cAAc,CAAE;MAErCoB,QAAQ,EAAE;QAET,SAAS,EAAE;UAAEC,KAAK,EAAEJ,cAAc,CAACK;QAAQ,CAAC;QAC5C,UAAU,EAAE;UAAED,KAAK,EAAEH,cAAc,CAACI;QAAQ,CAAC;QAE7C,iBAAiB,EAAE;UAAED,KAAK,EAAE,IAAI,CAACZ;QAAgB,CAAC;QAClD,kBAAkB,EAAE;UAAEY,KAAK,EAAE,IAAI,CAACV;QAAiB;MAEpD,CAAC;MAEDY,YAAY,EAAE,CAEb,mBAAmB,EAEnB,eAAe,EAEf,4BAA4B,EAC5B,4EAA4E,EAE5E,GAAG,CAEH,CAACC,IAAI,CAAE,IAAK,CAAC;MAEdC,cAAc,EAAE,CAEf,4BAA4B,EAC5B,6BAA6B,EAC7B,mBAAmB,EAEnB,+BAA+B,EAC/B,gCAAgC,EAEhC,eAAe,EAEf,iBAAiB,EAEjB,0CAA0C,EAC1C,2CAA2C,EAE3C,sBAAsB,EACtB,mCAAmC,EACnC,6CAA6C,EAE7C,uBAAuB,EACvB,+BAA+B,EAC/B,iCAAiC,EAEjC,kCAAkC,EAClC,iCAAiC,EAEjC,GAAG,CAEH,CAACD,IAAI,CAAE,IAAK;IAEd,CAAE,CAAC;IAEH,MAAME,KAAK,GAAG,IAAIvB,cAAc,CAAEgB,SAAU,CAAC;;IAE7C;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACQ,OAAO,GAAG,UAAWpB,KAAK,EAAEC,MAAM,EAAG;MAEzCF,QAAQ,CAACqB,OAAO,CAAEpB,KAAK,EAAEC,MAAO,CAAC;MAEjC,MAAMoB,UAAU,GAAGtB,QAAQ,CAACuB,aAAa,CAAC,CAAC;MAE3CZ,cAAc,CAACU,OAAO,CAAEpB,KAAK,GAAGqB,UAAU,EAAEpB,MAAM,GAAGoB,UAAW,CAAC;MACjEV,cAAc,CAACS,OAAO,CAAEpB,KAAK,GAAGqB,UAAU,EAAEpB,MAAM,GAAGoB,UAAW,CAAC;IAElE,CAAC;;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACE,MAAM,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;MAExC,MAAMC,mBAAmB,GAAG3B,QAAQ,CAAC4B,eAAe,CAAC,CAAC;MAEtD,IAAKH,KAAK,CAACI,qBAAqB,KAAK,IAAI,EAAGJ,KAAK,CAACK,iBAAiB,CAAC,CAAC;MAErE,IAAKJ,MAAM,CAACK,MAAM,KAAK,IAAI,IAAIL,MAAM,CAACG,qBAAqB,KAAK,IAAI,EAAGH,MAAM,CAACI,iBAAiB,CAAC,CAAC;MAEjGxB,OAAO,CAAC0B,MAAM,CAAEN,MAAO,CAAC;MAExB1B,QAAQ,CAACiC,eAAe,CAAEtB,cAAe,CAAC;MAC1CX,QAAQ,CAACkC,KAAK,CAAC,CAAC;MAChBlC,QAAQ,CAACwB,MAAM,CAAEC,KAAK,EAAEnB,OAAO,CAAC6B,OAAQ,CAAC;MAEzCnC,QAAQ,CAACiC,eAAe,CAAErB,cAAe,CAAC;MAC1CZ,QAAQ,CAACkC,KAAK,CAAC,CAAC;MAChBlC,QAAQ,CAACwB,MAAM,CAAEC,KAAK,EAAEnB,OAAO,CAAC8B,OAAQ,CAAC;MAEzCpC,QAAQ,CAACiC,eAAe,CAAE,IAAK,CAAC;MAChCb,KAAK,CAACI,MAAM,CAAExB,QAAS,CAAC;MAExBA,QAAQ,CAACiC,eAAe,CAAEN,mBAAoB,CAAC;IAEhD,CAAC;;IAED;AACF;AACA;AACA;IACE,IAAI,CAACU,OAAO,GAAG,YAAY;MAE1B1B,cAAc,CAAC0B,OAAO,CAAC,CAAC;MACxBzB,cAAc,CAACyB,OAAO,CAAC,CAAC;MAExBxB,SAAS,CAACwB,OAAO,CAAC,CAAC;MACnBjB,KAAK,CAACiB,OAAO,CAAC,CAAC;IAEhB,CAAC;EAEF;AAED;AAEA,SAASvC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}